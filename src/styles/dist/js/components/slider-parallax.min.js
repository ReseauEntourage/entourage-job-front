/*! UIkit 3.6.22 | https://www.getuikit.com | (c) 2014 - 2023 YOOtheme | MIT License */
!(function (t, e) {
  'object' == typeof exports && 'undefined' != typeof module
    ? (module.exports = e(require('uikit-util')))
    : 'function' == typeof define && define.amd
      ? define('uikitslider_parallax', ['uikit-util'], e)
      : ((t =
          'undefined' != typeof globalThis
            ? globalThis
            : t || self).UIkitSlider_parallax = e(t.UIkit.util));
})(this, function (g) {
  'use strict';
  var t = {
    props: { media: Boolean },
    data: { media: !1 },
    computed: {
      matchMedia: function () {
        var t = (function (t) {
          if (g.isString(t))
            if ('@' === t[0]) {
              var e = 'breakpoint-' + t.substr(1);
              t = g.toFloat(g.getCssVar(e));
            } else if (isNaN(t)) return t;
          return !(!t || isNaN(t)) && '(min-width: ' + t + 'px)';
        })(this.media);
        return !t || window.matchMedia(t).matches;
      },
    },
  };
  g.memoize(function (r) {
    return new g.Promise(function (e, t) {
      r
        ? g.startsWith(r, 'data:')
          ? e(decodeURIComponent(r.split(',')[1]))
          : g.ajax(r).then(
              function (t) {
                return e(t.response);
              },
              function () {
                return t('SVG not found.');
              }
            )
        : t();
    });
  });
  var e = [
    'x',
    'y',
    'bgx',
    'bgy',
    'rotate',
    'scale',
    'color',
    'backgroundColor',
    'borderColor',
    'opacity',
    'blur',
    'hue',
    'grayscale',
    'invert',
    'saturate',
    'sepia',
    'fopacity',
    'stroke',
  ];
  function b(t, e) {
    var r = t.length - 1,
      i = Math.min(Math.floor(r * e), r - 1),
      t = t.slice(i, i + 2);
    return t.push(1 === e ? 1 : (e % (1 / r)) * r), t;
  }
  t = {
    mixins: [
      {
        mixins: [t],
        props: e.reduce(function (t, e) {
          return (t[e] = 'list'), t;
        }, {}),
        data: e.reduce(function (t, e) {
          return (t[e] = void 0), t;
        }, {}),
        computed: {
          props: function (h, p) {
            var m = this;
            return e.reduce(function (t, e) {
              if (!g.isUndefined(h[e])) {
                var r,
                  i,
                  n,
                  a,
                  s,
                  o,
                  c,
                  u = e.match(/color/i),
                  l = u || 'opacity' === e,
                  d = h[e].slice(),
                  l =
                    (l && g.css(p, e, ''),
                    d.length < 2 &&
                      d.unshift(('scale' === e ? 1 : l ? g.css(p, e) : 0) || 0),
                    d.reduce(function (t, e) {
                      return (
                        (g.isString(e) && e.replace(/-|\d/g, '').trim()) || t
                      );
                    }, ''));
                if (
                  (u
                    ? ((u = p.style.color),
                      (d = d.map(function (t) {
                        return g
                          .css(g.css(p, 'color', t), 'color')
                          .split(/[(),]/g)
                          .slice(1, -1)
                          .concat(1)
                          .slice(0, 4)
                          .map(g.toFloat);
                      })),
                      (p.style.color = u))
                    : g.startsWith(e, 'bg')
                      ? ((n = 'bgy' === e ? 'height' : 'width'),
                        (d = d.map(function (t) {
                          return g.toPx(t, n, m.$el);
                        })),
                        g.css(p, 'background-position-' + e[2], ''),
                        (i = g.css(p, 'backgroundPosition').split(' ')[
                          'x' === e[2] ? 0 : 1
                        ]),
                        (r = m.covers
                          ? ((a = Math.min.apply(Math, d)),
                            (s = Math.max.apply(Math, d)),
                            (o = d.indexOf(a) < d.indexOf(s)),
                            (c = s - a),
                            (d = d.map(function (t) {
                              return t - (o ? a : s);
                            })),
                            (o ? -c : 0) + 'px')
                          : i))
                      : (d = d.map(g.toFloat)),
                  'stroke' === e)
                ) {
                  if (
                    !d.some(function (t) {
                      return t;
                    })
                  )
                    return t;
                  u = m.$el;
                  var f = Math.ceil(
                    Math.max.apply(
                      Math,
                      [0].concat(
                        g.$$('[stroke]', u).map(function (t) {
                          try {
                            return t.getTotalLength();
                          } catch (t) {
                            return 0;
                          }
                        })
                      )
                    )
                  );
                  g.css(p, 'strokeDasharray', f),
                    (d = (d =
                      '%' === l
                        ? d.map(function (t) {
                            return (t * f) / 100;
                          })
                        : d).reverse()),
                    (e = 'strokeDashoffset');
                }
                t[e] = { steps: d, unit: l, pos: r, bgPos: i, diff: c };
              }
              return t;
            }, {});
          },
          bgProps: function () {
            var e = this;
            return ['bgx', 'bgy'].filter(function (t) {
              return t in e.props;
            });
          },
          covers: function (t, e) {
            return (
              (r = (e = e).style.backgroundSize),
              (i =
                'cover' ===
                g.css(g.css(e, 'backgroundSize', ''), 'backgroundSize')),
              (e.style.backgroundSize = r),
              i
            );
            var r, i;
          },
        },
        disconnected: function () {
          delete this._image;
        },
        update: {
          read: function (t) {
            var e,
              r,
              o,
              c,
              u,
              l = this;
            this.matchMedia &&
              (!t.image &&
                this.covers &&
                this.bgProps.length &&
                (r = g
                  .css(this.$el, 'backgroundImage')
                  .replace(/^none|url\(["']?(.+?)["']?\)$/, '$1')) &&
                (((e = new Image()).src = r),
                (t.image = e).naturalWidth ||
                  (e.onload = function () {
                    return l.$update();
                  })),
              (r = t.image)) &&
              r.naturalWidth &&
              ((o = {
                width: this.$el.offsetWidth,
                height: this.$el.offsetHeight,
              }),
              (c = { width: r.naturalWidth, height: r.naturalHeight }),
              (u = g.Dimensions.cover(c, o)),
              this.bgProps.forEach(function (t) {
                var e,
                  r = l.props[t],
                  i = r.diff,
                  n = r.bgPos,
                  r = r.steps,
                  a = 'bgy' === t ? 'height' : 'width',
                  s = u[a] - o[a];
                s < i
                  ? (o[a] = u[a] + i - s)
                  : i < s &&
                    (e = o[a] / g.toPx(n, a, l.$el)) &&
                    (l.props[t].steps = r.map(function (t) {
                      return t - (s - i) / e;
                    })),
                  (u = g.Dimensions.cover(c, o));
              }),
              (t.dim = u));
          },
          write: function (t) {
            t = t.dim;
            this.matchMedia
              ? t &&
                g.css(this.$el, {
                  backgroundSize: t.width + 'px ' + t.height + 'px',
                  backgroundRepeat: 'no-repeat',
                })
              : g.css(this.$el, { backgroundSize: '', backgroundRepeat: '' });
          },
          events: ['resize'],
        },
        methods: {
          reset: function () {
            var r = this;
            g.each(this.getCss(0), function (t, e) {
              return g.css(r.$el, e, '');
            });
          },
          getCss: function (p) {
            var m = this.props;
            return Object.keys(m).reduce(
              function (t, e) {
                var r,
                  i,
                  n,
                  a = m[e],
                  s = a.steps,
                  o = a.unit,
                  c = a.pos,
                  u =
                    (void 0 === i && (i = 2),
                    (r = (a = b((a = s), (r = p)))[0]),
                    (n = a[1]),
                    (a = a[2]),
                    (g.isNumber(r)
                      ? r + Math.abs(r - n) * a * (r < n ? 1 : -1)
                      : +n
                    ).toFixed(i));
                switch (e) {
                  case 'x':
                  case 'y':
                    (o = o || 'px'),
                      (t.transform +=
                        ' translate' +
                        g.ucfirst(e) +
                        '(' +
                        g.toFloat(u).toFixed('px' === o ? 0 : 2) +
                        o +
                        ')');
                    break;
                  case 'rotate':
                    t.transform += ' rotate(' + (u + (o = o || 'deg')) + ')';
                    break;
                  case 'scale':
                    t.transform += ' scale(' + u + ')';
                    break;
                  case 'bgy':
                  case 'bgx':
                    t['background-position-' + e[2]] =
                      'calc(' + c + ' + ' + u + 'px)';
                    break;
                  case 'color':
                  case 'backgroundColor':
                  case 'borderColor':
                    var l = b(s, p),
                      d = l[0],
                      f = l[1],
                      h = l[2];
                    t[e] =
                      'rgba(' +
                      d
                        .map(function (t, e) {
                          return (
                            (t += h * (f[e] - t)),
                            3 === e ? g.toFloat(t) : parseInt(t, 10)
                          );
                        })
                        .join(',') +
                      ')';
                    break;
                  case 'blur':
                    t.filter += ' blur(' + (u + (o = o || 'px')) + ')';
                    break;
                  case 'hue':
                    t.filter += ' hue-rotate(' + (u + (o = o || 'deg')) + ')';
                    break;
                  case 'fopacity':
                    t.filter += ' opacity(' + (u + (o = o || '%')) + ')';
                    break;
                  case 'grayscale':
                  case 'invert':
                  case 'saturate':
                  case 'sepia':
                    t.filter += ' ' + e + '(' + (u + (o = o || '%')) + ')';
                    break;
                  default:
                    t[e] = u;
                }
                return t;
              },
              { transform: '', filter: '' }
            );
          },
        },
      },
    ],
    data: { selItem: '!li' },
    computed: {
      item: function (t, e) {
        t = t.selItem;
        return g.query(t, e);
      },
    },
    events: [
      {
        name: 'itemin itemout',
        self: !0,
        el: function () {
          return this.item;
        },
        handler: function (t) {
          var r = this,
            i = t.type,
            t = t.detail,
            n = t.percent,
            a = t.duration,
            s = t.timing,
            o = t.dir;
          g.fastdom.read(function () {
            var t = r.getCss(u(i, o, n)),
              e = r.getCss(c(i) ? 0.5 : 0 < o ? 1 : 0);
            g.fastdom.write(function () {
              g.css(r.$el, t), g.Transition.start(r.$el, e, a, s).catch(g.noop);
            });
          });
        },
      },
      {
        name: 'transitioncanceled transitionend',
        self: !0,
        el: function () {
          return this.item;
        },
        handler: function () {
          g.Transition.cancel(this.$el);
        },
      },
      {
        name: 'itemtranslatein itemtranslateout',
        self: !0,
        el: function () {
          return this.item;
        },
        handler: function (t) {
          var e = this,
            r = t.type,
            t = t.detail,
            i = t.percent,
            n = t.dir;
          g.fastdom.read(function () {
            var t = e.getCss(u(r, n, i));
            g.fastdom.write(function () {
              return g.css(e.$el, t);
            });
          });
        },
      },
    ],
  };
  function c(t) {
    return g.endsWith(t, 'in');
  }
  function u(t, e, r) {
    return (r /= 2), c(t) ? (e < 0 ? 1 - r : r) : e < 0 ? r : 1 - r;
  }
  return (
    'undefined' != typeof window &&
      window.UIkit &&
      window.UIkit.component('sliderParallax', t),
    t
  );
});
