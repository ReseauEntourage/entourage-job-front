/*! UIkit 3.5.4 | https://www.getuikit.com | (c) 2014 - 2022 YOOtheme | MIT License */
!(function (t, e) {
  'object' == typeof exports && 'undefined' != typeof module
    ? (module.exports = e())
    : 'function' == typeof define && define.amd
    ? define('uikit', e)
    : ((t = t || self).UIkit = e());
})(this, function () {
  'use strict';
  var t = Object.prototype,
    r = t.hasOwnProperty;
  function H(t, e) {
    return r.call(t, e);
  }
  var o = {},
    L = /([a-z\d])([A-Z])/g;
  function F(t) {
    return t in o || (o[t] = t.replace(L, '$1-$2').toLowerCase()), o[t];
  }
  var j = /-(\w)/g;
  function W(t) {
    return t.replace(j, V);
  }
  function V(t, e) {
    return e ? e.toUpperCase() : '';
  }
  function R(t) {
    return t.length ? V(0, t.charAt(0)) + t.slice(1) : '';
  }
  var e = String.prototype,
    q =
      e.startsWith ||
      function (t) {
        return 0 === this.lastIndexOf(t, 0);
      };
  function U(t, e) {
    return q.call(t, e);
  }
  var Y =
    e.endsWith ||
    function (t) {
      return this.substr(-t.length) === t;
    };
  function X(t, e) {
    return Y.call(t, e);
  }
  function G(t, e) {
    return !!~this.indexOf(t, e);
  }
  var J = Array.prototype,
    K = e.includes || G,
    Z = J.includes || G;
  function v(t, e) {
    return t && (g(t) ? K : Z).call(t, e);
  }
  var Q =
    J.findIndex ||
    function (t) {
      for (var e = arguments, i = 0; i < this.length; i++)
        if (t.call(e[1], this[i], i, this)) return i;
      return -1;
    };
  function tt(t, e) {
    return Q.call(t, e);
  }
  var et = Array.isArray;
  function it(t) {
    return 'function' == typeof t;
  }
  function nt(t) {
    return null !== t && 'object' == typeof t;
  }
  var rt = t.toString;
  function ot(t) {
    return '[object Object]' === rt.call(t);
  }
  function st(t) {
    return nt(t) && t === t.window;
  }
  function at(t) {
    return nt(t) && 9 === t.nodeType;
  }
  function ht(t) {
    return nt(t) && !!t.jquery;
  }
  function ut(t) {
    return nt(t) && 1 <= t.nodeType;
  }
  function ct(t) {
    return nt(t) && 1 === t.nodeType;
  }
  function lt(t) {
    return rt.call(t).match(/^\[object (NodeList|HTMLCollection)\]$/);
  }
  function dt(t) {
    return 'boolean' == typeof t;
  }
  function g(t) {
    return 'string' == typeof t;
  }
  function ft(t) {
    return 'number' == typeof t;
  }
  function pt(t) {
    return ft(t) || (g(t) && !isNaN(t - parseFloat(t)));
  }
  function mt(t) {
    return !(et(t) ? t.length : nt(t) && Object.keys(t).length);
  }
  function w(t) {
    return void 0 === t;
  }
  function gt(t) {
    return dt(t)
      ? t
      : 'true' === t ||
          '1' === t ||
          '' === t ||
          ('false' !== t && '0' !== t && t);
  }
  function vt(t) {
    t = Number(t);
    return !isNaN(t) && t;
  }
  function b(t) {
    return parseFloat(t) || 0;
  }
  function a(t) {
    return ut(t) ? t : lt(t) || ht(t) ? t[0] : et(t) ? a(t[0]) : null;
  }
  function u(t) {
    return ut(t)
      ? [t]
      : lt(t)
      ? J.slice.call(t)
      : et(t)
      ? t.map(a).filter(Boolean)
      : ht(t)
      ? t.toArray()
      : [];
  }
  function wt(t) {
    return st(t)
      ? t
      : (t = a(t))
      ? (at(t) ? t : t.ownerDocument).defaultView
      : window;
  }
  function bt(t) {
    return et(t)
      ? t
      : g(t)
      ? t.split(/,(?![^(]*\))/).map(function (t) {
          return pt(t) ? vt(t) : gt(t.trim());
        })
      : [t];
  }
  function xt(t) {
    return t ? (X(t, 'ms') ? b(t) : 1e3 * b(t)) : 0;
  }
  function yt(t, i) {
    return (
      t === i ||
      (nt(t) &&
        nt(i) &&
        Object.keys(t).length === Object.keys(i).length &&
        St(t, function (t, e) {
          return t === i[e];
        }))
    );
  }
  function kt(t, e, i) {
    return t.replace(new RegExp(e + '|' + i, 'g'), function (t) {
      return t === e ? i : e;
    });
  }
  var l =
    Object.assign ||
    function (t) {
      for (var e = [], i = arguments.length - 1; 0 < i--; )
        e[i] = arguments[i + 1];
      t = Object(t);
      for (var n = 0; n < e.length; n++) {
        var r = e[n];
        if (null !== r) for (var o in r) H(r, o) && (t[o] = r[o]);
      }
      return t;
    };
  function $t(t) {
    return t[t.length - 1];
  }
  function St(t, e) {
    for (var i in t) if (!1 === e(t[i], i)) return !1;
    return !0;
  }
  function It(t, i) {
    return t.sort(function (t, e) {
      (t = t[i]), (e = e[i]);
      return (e = void 0 === e ? 0 : e) < (t = void 0 === t ? 0 : t)
        ? 1
        : t < e
        ? -1
        : 0;
    });
  }
  function Tt(t, e) {
    var i = new Set();
    return t.filter(function (t) {
      t = t[e];
      return !i.has(t) && (i.add(t) || !0);
    });
  }
  function Et(t, e, i) {
    return (
      void 0 === e && (e = 0),
      void 0 === i && (i = 1),
      Math.min(Math.max(vt(t) || 0, e), i)
    );
  }
  function d() {}
  function _t(t, e) {
    return (
      t.left < e.right &&
      t.right > e.left &&
      t.top < e.bottom &&
      t.bottom > e.top
    );
  }
  function Ct(t, e) {
    return t.x <= e.right && t.x >= e.left && t.y <= e.bottom && t.y >= e.top;
  }
  var At = {
    ratio: function (t, e, i) {
      var n = 'width' === e ? 'height' : 'width',
        r = {};
      return (
        (r[n] = t[e] ? Math.round((i * t[n]) / t[e]) : t[n]), (r[e] = i), r
      );
    },
    contain: function (i, n) {
      var r = this;
      return (
        St((i = l({}, i)), function (t, e) {
          return (i = i[e] > n[e] ? r.ratio(i, e, n[e]) : i);
        }),
        i
      );
    },
    cover: function (i, n) {
      var r = this;
      return (
        St((i = this.contain(i, n)), function (t, e) {
          return (i = i[e] < n[e] ? r.ratio(i, e, n[e]) : i);
        }),
        i
      );
    },
  };
  function f(t, e, i) {
    if (nt(e)) for (var n in e) f(t, n, e[n]);
    else {
      if (w(i)) return (t = a(t)) && t.getAttribute(e);
      u(t).forEach(function (t) {
        null === (i = it(i) ? i.call(t, f(t, e)) : i)
          ? Mt(t, e)
          : t.setAttribute(e, i);
      });
    }
  }
  function Nt(t, e) {
    return u(t).some(function (t) {
      return t.hasAttribute(e);
    });
  }
  function Mt(t, e) {
    (t = u(t)),
      e.split(' ').forEach(function (e) {
        return t.forEach(function (t) {
          return t.hasAttribute(e) && t.removeAttribute(e);
        });
      });
  }
  function zt(t, e) {
    for (var i = 0, n = [e, 'data-' + e]; i < n.length; i++)
      if (Nt(t, n[i])) return f(t, n[i]);
  }
  var i = 'undefined' != typeof window,
    Dt = i && /msie|trident/i.test(window.navigator.userAgent),
    c = i && 'rtl' === f(document.documentElement, 'dir'),
    e = i && 'ontouchstart' in window,
    t = i && window.PointerEvent,
    Bt =
      i &&
      (e ||
        (window.DocumentTouch && document instanceof DocumentTouch) ||
        navigator.maxTouchPoints),
    Pt = t ? 'pointerdown' : e ? 'touchstart' : 'mousedown',
    Ot = t ? 'pointermove' : e ? 'touchmove' : 'mousemove',
    Ht = t ? 'pointerup' : e ? 'touchend' : 'mouseup',
    Lt = t ? 'pointerenter' : e ? '' : 'mouseenter',
    e = t ? 'pointerleave' : e ? '' : 'mouseleave',
    Ft = t ? 'pointercancel' : 'touchcancel';
  function jt(t, e) {
    return a(t) || Rt(t, Vt(t, e));
  }
  function Wt(t, e) {
    var i = u(t);
    return (i.length && i) || qt(t, Vt(t, e));
  }
  function Vt(t, e) {
    return void 0 === e && (e = document), Gt(t) || at(e) ? e : e.ownerDocument;
  }
  function Rt(t, e) {
    return a(Ut(t, e, 'querySelector'));
  }
  function qt(t, e) {
    return u(Ut(t, e, 'querySelectorAll'));
  }
  function Ut(t, o, e) {
    if ((void 0 === o && (o = document), !t || !g(t))) return null;
    var s;
    Gt((t = t.replace(Xt, '$1 *'))) &&
      ((s = []),
      (t = t
        .match(Jt)
        .map(function (t) {
          return t.replace(/,$/, '').trim();
        })
        .map(function (t, e) {
          var i,
            n,
            r = o;
          return (
            '!' === t[0] &&
              ((i = t.substr(1).trim().split(' ')),
              (r = Qt(te(o), i[0])),
              (t = i.slice(1).join(' ').trim())),
            '-' === t[0] &&
              ((i = t.substr(1).trim().split(' ')),
              (n = (r || o).previousElementSibling),
              (r = p(n, t.substr(1)) ? n : null),
              (t = i.slice(1).join(' '))),
            r
              ? (r.id ||
                  ((r.id = 'uk-' + Date.now() + e),
                  s.push(function () {
                    return Mt(r, 'id');
                  })),
                '#' + ie(r.id) + ' ' + t)
              : null
          );
        })
        .filter(Boolean)
        .join(',')),
      (o = document));
    try {
      return o[e](t);
    } catch (t) {
      return null;
    } finally {
      s &&
        s.forEach(function (t) {
          return t();
        });
    }
  }
  var Yt = /(^|[^\\],)\s*[!>+~-]/,
    Xt = /([!>+~-])(?=\s+[!>+~-]|\s*$)/g;
  function Gt(t) {
    return g(t) && t.match(Yt);
  }
  var Jt = /.*?[^\\](?:,|$)/g;
  var t = i ? Element.prototype : {},
    Kt = t.matches || t.webkitMatchesSelector || t.msMatchesSelector || d;
  function p(t, e) {
    return u(t).some(function (t) {
      return Kt.call(t, e);
    });
  }
  var Zt =
    t.closest ||
    function (t) {
      var e = this;
      do {
        if (p(e, t)) return e;
      } while ((e = te(e)));
    };
  function Qt(t, e) {
    return (
      U(e, '>') && (e = e.slice(1)),
      ct(t)
        ? Zt.call(t, e)
        : u(t)
            .map(function (t) {
              return Qt(t, e);
            })
            .filter(Boolean)
    );
  }
  function te(t) {
    return (t = a(t)) && ct(t.parentNode) && t.parentNode;
  }
  var ee =
    (i && window.CSS && CSS.escape) ||
    function (t) {
      return t.replace(/([^\x7f-\uFFFF\w-])/g, function (t) {
        return '\\' + t;
      });
    };
  function ie(t) {
    return g(t) ? ee.call(null, t) : '';
  }
  var ne = {
    area: !0,
    base: !0,
    br: !0,
    col: !0,
    embed: !0,
    hr: !0,
    img: !0,
    input: !0,
    keygen: !0,
    link: !0,
    menuitem: !0,
    meta: !0,
    param: !0,
    source: !0,
    track: !0,
    wbr: !0,
  };
  function re(t) {
    return u(t).some(function (t) {
      return ne[t.tagName.toLowerCase()];
    });
  }
  function m(t) {
    return u(t).some(function (t) {
      return t.offsetWidth || t.offsetHeight || t.getClientRects().length;
    });
  }
  var oe = 'input,select,textarea,button';
  function se(t) {
    return u(t).some(function (t) {
      return p(t, oe);
    });
  }
  function ae(t, e) {
    return u(t).filter(function (t) {
      return p(t, e);
    });
  }
  function x(t, e) {
    return g(e)
      ? p(t, e) || !!Qt(t, e)
      : t === e || (at(e) ? e.documentElement : a(e)).contains(a(t));
  }
  function he(t, e) {
    for (var i = []; (t = te(t)); ) (e && !p(t, e)) || i.push(t);
    return i;
  }
  function ue(t, e) {
    t = (t = a(t)) ? u(t.children) : [];
    return e ? ae(t, e) : t;
  }
  function y() {
    for (var t = [], e = arguments.length; e--; ) t[e] = arguments[e];
    var i,
      n,
      r = de(t),
      o = r[0],
      s = r[1],
      a = r[2],
      h = r[3],
      u = r[4],
      o = ge(o);
    return (
      1 < h.length &&
        ((i = h),
        (h = function (t) {
          return et(t.detail) ? i.apply(void 0, [t].concat(t.detail)) : i(t);
        })),
      u &&
        u.self &&
        ((n = h),
        (h = function (t) {
          if (t.target === t.currentTarget || t.target === t.current)
            return n.call(null, t);
        })),
      a &&
        (h = (function (t, n, r) {
          var o = this;
          return function (i) {
            t.forEach(function (t) {
              var e =
                '>' === n[0]
                  ? qt(n, t)
                      .reverse()
                      .filter(function (t) {
                        return x(i.target, t);
                      })[0]
                  : Qt(i.target, n);
              e && ((i.delegate = t), (i.current = e), r.call(o, i));
            });
          };
        })(o, a, h)),
      (u = fe(u)),
      s.split(' ').forEach(function (e) {
        return o.forEach(function (t) {
          return t.addEventListener(e, h, u);
        });
      }),
      function () {
        return ce(o, s, h, u);
      }
    );
  }
  function ce(t, e, i, n) {
    (n = fe((n = void 0 === n ? !1 : n))),
      (t = ge(t)),
      e.split(' ').forEach(function (e) {
        return t.forEach(function (t) {
          return t.removeEventListener(e, i, n);
        });
      });
  }
  function k() {
    for (var t = [], e = arguments.length; e--; ) t[e] = arguments[e];
    var i = de(t),
      n = i[0],
      r = i[1],
      o = i[2],
      s = i[3],
      a = i[4],
      h = i[5],
      u = y(
        n,
        r,
        o,
        function (t) {
          var e = !h || h(t);
          e && (u(), s(t, e));
        },
        a
      );
    return u;
  }
  function $(t, i, n) {
    return ge(t).reduce(function (t, e) {
      return t && e.dispatchEvent(le(i, !0, !0, n));
    }, !0);
  }
  function le(t, e, i, n) {
    var r;
    return (
      void 0 === e && (e = !0),
      void 0 === i && (i = !1),
      g(t) &&
        ((r = document.createEvent('CustomEvent')).initCustomEvent(t, e, i, n),
        (t = r)),
      t
    );
  }
  function de(t) {
    return it(t[2]) && t.splice(2, 0, !1), t;
  }
  function fe(t) {
    return t && Dt && !dt(t) ? !!t.capture : t;
  }
  function pe(t) {
    return t && 'addEventListener' in t;
  }
  function me(t) {
    return pe(t) ? t : a(t);
  }
  function ge(t) {
    return et(t)
      ? t.map(me).filter(Boolean)
      : g(t)
      ? qt(t)
      : pe(t)
      ? [t]
      : u(t);
  }
  function ve(t) {
    return 'touch' === t.pointerType || !!t.touches;
  }
  function we(t) {
    var e = t.touches,
      i = t.changedTouches,
      e = (e && e[0]) || (i && i[0]) || t;
    return { x: e.clientX, y: e.clientY };
  }
  function be() {
    var i = this;
    this.promise = new S(function (t, e) {
      (i.reject = e), (i.resolve = t);
    });
  }
  var S = (i && window.Promise) || ke,
    xe = 2,
    ye = (i && window.setImmediate) || setTimeout;
  function ke(t) {
    (this.state = xe), (this.value = void 0), (this.deferred = []);
    var e = this;
    try {
      t(
        function (t) {
          e.resolve(t);
        },
        function (t) {
          e.reject(t);
        }
      );
    } catch (t) {
      e.reject(t);
    }
  }
  (ke.reject = function (i) {
    return new ke(function (t, e) {
      e(i);
    });
  }),
    (ke.resolve = function (i) {
      return new ke(function (t, e) {
        t(i);
      });
    }),
    (ke.all = function (o) {
      return new ke(function (i, t) {
        var n = [],
          r = 0;
        0 === o.length && i(n);
        for (var e = 0; e < o.length; e += 1)
          ke.resolve(o[e]).then(
            (function (e) {
              return function (t) {
                (n[e] = t), (r += 1) === o.length && i(n);
              };
            })(e),
            t
          );
      });
    }),
    (ke.race = function (n) {
      return new ke(function (t, e) {
        for (var i = 0; i < n.length; i += 1) ke.resolve(n[i]).then(t, e);
      });
    });
  t = ke.prototype;
  function $e(s, a) {
    return new S(function (t, e) {
      var i,
        n,
        r = l(
          {
            data: null,
            method: 'GET',
            headers: {},
            xhr: new XMLHttpRequest(),
            beforeSend: d,
            responseType: '',
          },
          a
        ),
        o = (r.beforeSend(r), r.xhr);
      for (i in r)
        if (i in o)
          try {
            o[i] = r[i];
          } catch (t) {}
      for (n in (o.open(r.method.toUpperCase(), s), r.headers))
        o.setRequestHeader(n, r.headers[n]);
      y(o, 'load', function () {
        0 === o.status ||
        (200 <= o.status && o.status < 300) ||
        304 === o.status
          ? ('json' === r.responseType &&
              g(o.response) &&
              (o = l(
                (function (t) {
                  var e,
                    i = {};
                  for (e in t) i[e] = t[e];
                  return i;
                })(o),
                { response: JSON.parse(o.response) }
              )),
            t(o))
          : e(l(Error(o.statusText), { xhr: o, status: o.status }));
      }),
        y(o, 'error', function () {
          return e(l(Error('Network Error'), { xhr: o }));
        }),
        y(o, 'timeout', function () {
          return e(l(Error('Network Timeout'), { xhr: o }));
        }),
        o.send(r.data);
    });
  }
  function Se(n, r, o) {
    return new S(function (t, e) {
      var i = new Image();
      (i.onerror = function (t) {
        return e(t);
      }),
        (i.onload = function () {
          return t(i);
        }),
        o && (i.sizes = o),
        r && (i.srcset = r),
        (i.src = n);
    });
  }
  function Ie(t) {
    var e;
    'loading' !== document.readyState
      ? t()
      : (e = y(document, 'DOMContentLoaded', function () {
          e(), t();
        }));
  }
  function Te(t, e) {
    return e ? u(t).indexOf(a(e)) : ue(te(t)).indexOf(t);
  }
  function Ee(t, e, i, n) {
    void 0 === i && (i = 0), void 0 === n && (n = !1);
    var r = (e = u(e)).length;
    return (
      (t = pt(t)
        ? vt(t)
        : 'next' === t
        ? i + 1
        : 'previous' === t
        ? i - 1
        : Te(e, t)),
      n ? Et(t, 0, r - 1) : (t %= r) < 0 ? t + r : t
    );
  }
  function _e(t) {
    return ((t = s(t)).innerHTML = ''), t;
  }
  function Ce(t, e) {
    return (t = s(t)), w(e) ? t.innerHTML : I(t.hasChildNodes() ? _e(t) : t, e);
  }
  function I(e, t) {
    return (
      (e = s(e)),
      Me(t, function (t) {
        return e.appendChild(t);
      })
    );
  }
  function Ae(e, t) {
    return (
      (e = s(e)),
      Me(t, function (t) {
        return e.parentNode.insertBefore(t, e);
      })
    );
  }
  function Ne(e, t) {
    return (
      (e = s(e)),
      Me(t, function (t) {
        return e.nextSibling ? Ae(e.nextSibling, t) : I(e.parentNode, t);
      })
    );
  }
  function Me(t, e) {
    return (t = g(t) ? Le(t) : t) ? ('length' in t ? u(t).map(e) : e(t)) : null;
  }
  function ze(t) {
    u(t).map(function (t) {
      return t.parentNode && t.parentNode.removeChild(t);
    });
  }
  function De(t, e) {
    for (e = a(Ae(t, e)); e.firstChild; ) e = e.firstChild;
    return I(e, t), e;
  }
  function Be(t, e) {
    return u(
      u(t).map(function (t) {
        return t.hasChildNodes ? De(u(t.childNodes), e) : I(t, e);
      })
    );
  }
  function Pe(t) {
    u(t)
      .map(te)
      .filter(function (t, e, i) {
        return i.indexOf(t) === e;
      })
      .forEach(function (t) {
        Ae(t, t.childNodes), ze(t);
      });
  }
  (t.resolve = function (t) {
    var e = this;
    if (e.state === xe) {
      if (t === e) throw new TypeError('Promise settled with itself.');
      var i = !1;
      try {
        var n = t && t.then;
        if (null !== t && nt(t) && it(n))
          return void n.call(
            t,
            function (t) {
              i || e.resolve(t), (i = !0);
            },
            function (t) {
              i || e.reject(t), (i = !0);
            }
          );
      } catch (t) {
        return void (i || e.reject(t));
      }
      (e.state = 0), (e.value = t), e.notify();
    }
  }),
    (t.reject = function (t) {
      var e = this;
      if (e.state === xe) {
        if (t === e) throw new TypeError('Promise settled with itself.');
        (e.state = 1), (e.value = t), e.notify();
      }
    }),
    (t.notify = function () {
      var r = this;
      ye(function () {
        if (r.state !== xe)
          for (; r.deferred.length; ) {
            var e = r.deferred.shift(),
              t = e[0],
              i = e[1],
              n = e[2],
              e = e[3];
            try {
              0 === r.state
                ? it(t)
                  ? n(t.call(void 0, r.value))
                  : n(r.value)
                : 1 === r.state &&
                  (it(i) ? n(i.call(void 0, r.value)) : e(r.value));
            } catch (t) {
              e(t);
            }
          }
      });
    }),
    (t.then = function (i, n) {
      var r = this;
      return new ke(function (t, e) {
        r.deferred.push([i, n, t, e]), r.notify();
      });
    }),
    (t.catch = function (t) {
      return this.then(void 0, t);
    });
  var Oe = /^\s*<(\w+|!)[^>]*>/,
    He = /^<(\w+)\s*\/?>(?:<\/\1>)?$/;
  function Le(t) {
    var e = He.exec(t);
    return e
      ? document.createElement(e[1])
      : ((e = document.createElement('div')),
        Oe.test(t)
          ? e.insertAdjacentHTML('beforeend', t.trim())
          : (e.textContent = t),
        1 < e.childNodes.length ? u(e.childNodes) : e.firstChild);
  }
  function Fe(t, e) {
    if (ct(t))
      for (e(t), t = t.firstElementChild; t; ) {
        var i = t.nextElementSibling;
        Fe(t, e), (t = i);
      }
  }
  function s(t, e) {
    return g(t) ? (je(t) ? a(Le(t)) : Rt(t, e)) : a(t);
  }
  function h(t, e) {
    return g(t) ? (je(t) ? u(Le(t)) : qt(t, e)) : u(t);
  }
  function je(t) {
    return '<' === t[0] || t.match(/^\s*</);
  }
  function T(t) {
    for (var e = [], i = arguments.length - 1; 0 < i--; )
      e[i] = arguments[i + 1];
    Re(t, e, 'add');
  }
  function E(t) {
    for (var e = [], i = arguments.length - 1; 0 < i--; )
      e[i] = arguments[i + 1];
    Re(t, e, 'remove');
  }
  function We(t, e) {
    f(t, 'class', function (t) {
      return (t || '').replace(new RegExp('\\b' + e + '\\b', 'g'), '');
    });
  }
  function Ve(t) {
    for (var e = [], i = arguments.length - 1; 0 < i--; )
      e[i] = arguments[i + 1];
    e[0] && E(t, e[0]), e[1] && T(t, e[1]);
  }
  function _(t, e) {
    return (
      e &&
      u(t).some(function (t) {
        return t.classList.contains(e.split(' ')[0]);
      })
    );
  }
  function C(t) {
    for (var n, r = [], e = arguments.length - 1; 0 < e--; )
      r[e] = arguments[e + 1];
    r.length &&
      ((n = g($t((r = qe(r)))) ? [] : r.pop()),
      (r = r.filter(Boolean)),
      u(t).forEach(function (t) {
        for (var e = t.classList, i = 0; i < r.length; i++)
          Ue.Force
            ? e.toggle.apply(e, [r[i]].concat(n))
            : e[(w(n) ? !e.contains(r[i]) : n) ? 'add' : 'remove'](r[i]);
      }));
  }
  function Re(t, i, n) {
    (i = qe(i).filter(Boolean)).length &&
      u(t).forEach(function (t) {
        var e = t.classList;
        Ue.Multiple
          ? e[n].apply(e, i)
          : i.forEach(function (t) {
              return e[n](t);
            });
      });
  }
  function qe(t) {
    return t.reduce(function (t, e) {
      return t.concat.call(t, g(e) && v(e, ' ') ? e.trim().split(' ') : e);
    }, []);
  }
  var Ue = {
      get Multiple() {
        return this.get('_multiple');
      },
      get Force() {
        return this.get('_force');
      },
      get: function (t) {
        var e;
        return (
          H(this, t) ||
            ((e = document.createElement('_').classList).add('a', 'b'),
            e.toggle('c', !1),
            (this._multiple = e.contains('b')),
            (this._force = !e.contains('c'))),
          this[t]
        );
      },
    },
    Ye = {
      'animation-iteration-count': !0,
      'column-count': !0,
      'fill-opacity': !0,
      'flex-grow': !0,
      'flex-shrink': !0,
      'font-weight': !0,
      'line-height': !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      'stroke-dasharray': !0,
      'stroke-dashoffset': !0,
      widows: !0,
      'z-index': !0,
      zoom: !0,
    };
  function A(t, e, r) {
    return u(t).map(function (i) {
      if (g(e)) {
        if (((e = Qe(e)), w(r))) return Ge(i, e);
        r || ft(r)
          ? (i.style[e] = pt(r) && !Ye[e] ? r + 'px' : r)
          : i.style.removeProperty(e);
      } else {
        var n;
        if (et(e))
          return (
            (n = Xe(i)),
            e.reduce(function (t, e) {
              return (t[e] = n[Qe(e)]), t;
            }, {})
          );
        nt(e) &&
          St(e, function (t, e) {
            return A(i, e, t);
          });
      }
      return i;
    })[0];
  }
  function Xe(t, e) {
    return (t = a(t)).ownerDocument.defaultView.getComputedStyle(t, e);
  }
  function Ge(t, e, i) {
    return Xe(t, i)[e];
  }
  var Je = {};
  function Ke(t) {
    var e,
      i = document.documentElement;
    return Dt
      ? (t in Je ||
          (T((e = I(i, document.createElement('div'))), 'uk-' + t),
          (Je[t] = Ge(e, 'content', ':before').replace(/^["'](.*)["']$/, '$1')),
          ze(e)),
        Je[t])
      : Xe(i).getPropertyValue('--uk-' + t);
  }
  var Ze = {};
  function Qe(t) {
    return (
      Ze[t] ||
      (Ze[t] =
        (function (t) {
          t = F(t);
          var e = document.documentElement.style;
          if (t in e) return t;
          var i,
            n = ti.length;
          for (; n--; ) if ((i = '-' + ti[n] + '-' + t) in e) return i;
        })(t) || t)
    );
  }
  var ti = ['webkit', 'moz', 'ms'];
  function ei(t, s, a, h) {
    return (
      void 0 === a && (a = 400),
      void 0 === h && (h = 'linear'),
      S.all(
        u(t).map(function (o) {
          return new S(function (e, i) {
            for (var t in s) {
              var n = A(o, t);
              '' === n && A(o, t, n);
            }
            var r = setTimeout(function () {
              return $(o, 'transitionend');
            }, a);
            k(
              o,
              'transitionend transitioncanceled',
              function (t) {
                t = t.type;
                clearTimeout(r),
                  E(o, 'uk-transition'),
                  A(o, {
                    transitionProperty: '',
                    transitionDuration: '',
                    transitionTimingFunction: '',
                  }),
                  ('transitioncanceled' === t ? i : e)();
              },
              { self: !0 }
            ),
              T(o, 'uk-transition'),
              A(
                o,
                l(
                  {
                    transitionProperty: Object.keys(s).map(Qe).join(','),
                    transitionDuration: a + 'ms',
                    transitionTimingFunction: h,
                  },
                  s
                )
              );
          });
        })
      )
    );
  }
  var N = {
      start: ei,
      stop: function (t) {
        return $(t, 'transitionend'), S.resolve();
      },
      cancel: function (t) {
        $(t, 'transitioncanceled');
      },
      inProgress: function (t) {
        return _(t, 'uk-transition');
      },
    },
    ii = 'uk-animation-';
  function ni(t, o, s, a, h) {
    return (
      void 0 === s && (s = 200),
      S.all(
        u(t).map(function (r) {
          return new S(function (e, i) {
            $(r, 'animationcancel');
            var n = setTimeout(function () {
              return $(r, 'animationend');
            }, s);
            k(
              r,
              'animationend animationcancel',
              function (t) {
                t = t.type;
                clearTimeout(n),
                  ('animationcancel' === t ? i : e)(),
                  A(r, 'animationDuration', ''),
                  We(r, ii + '\\S*');
              },
              { self: !0 }
            ),
              A(r, 'animationDuration', s + 'ms'),
              T(r, o, ii + (h ? 'leave' : 'enter')),
              U(o, ii) &&
                T(r, a && 'uk-transform-origin-' + a, h && ii + 'reverse');
          });
        })
      )
    );
  }
  var ri = new RegExp(ii + '(enter|leave)'),
    oi = {
      in: ni,
      out: function (t, e, i, n) {
        return ni(t, e, i, n, !0);
      },
      inProgress: function (t) {
        return ri.test(f(t, 'class'));
      },
      cancel: function (t) {
        $(t, 'animationcancel');
      },
    },
    si = { width: ['x', 'left', 'right'], height: ['y', 'top', 'bottom'] };
  function ai(t, e, c, l, d, i, n, r) {
    (c = mi(c)), (l = mi(l));
    var f,
      p,
      m,
      o,
      g = { element: c, target: l };
    return (
      t &&
        e &&
        ((f = hi(t)),
        (p = hi(e)),
        pi((m = p), c, f, -1),
        pi(m, l, p, 1),
        (d = gi(d, f.width, f.height)),
        (i = gi(i, p.width, p.height)),
        (d.x += i.x),
        (d.y += i.y),
        (m.left += d.x),
        (m.top += d.y),
        n &&
          ((o = [hi(wt(t))]),
          r && o.unshift(hi(r)),
          St(si, function (t, s) {
            var a = t[0],
              h = t[1],
              u = t[2];
            (!0 !== n && !v(n, a)) ||
              o.some(function (i) {
                var t,
                  e,
                  n = c[a] === h ? -f[s] : c[a] === u ? f[s] : 0,
                  r = l[a] === h ? p[s] : l[a] === u ? -p[s] : 0;
                if (m[h] < i[h] || m[h] + f[s] > i[u])
                  return (
                    (t = f[s] / 2),
                    (e = 'center' === l[a] ? -p[s] / 2 : 0),
                    ('center' === c[a] && (o(t, e) || o(-t, -e))) || o(n, r)
                  );
                function o(e, t) {
                  t = (m[h] + e + t - 2 * d[a]).toFixed(4);
                  if (t >= i[h] && t + f[s] <= i[u])
                    return (
                      (m[h] = t),
                      ['element', 'target'].forEach(function (t) {
                        g[t][a] = e
                          ? g[t][a] === si[s][1]
                            ? si[s][2]
                            : si[s][1]
                          : g[t][a];
                      }),
                      !0
                    );
                }
              });
          })),
        M(t, m)),
      g
    );
  }
  function M(i, n) {
    if (!n) return hi(i);
    var r = M(i),
      o = A(i, 'position');
    ['left', 'top'].forEach(function (t) {
      var e;
      t in n &&
        ((e = A(i, t)),
        A(
          i,
          t,
          n[t] - r[t] + b('absolute' === o && 'auto' === e ? ui(i)[t] : e)
        ));
    });
  }
  function hi(t) {
    if (!t) return {};
    var e,
      i,
      n,
      r = wt(t),
      o = r.pageYOffset,
      r = r.pageXOffset;
    if (st(t))
      return {
        top: o,
        left: r,
        height: (s = t.innerHeight),
        width: (e = t.innerWidth),
        bottom: o + s,
        right: r + e,
      };
    m(t) ||
      'none' !== A(t, 'display') ||
      ((i = f(t, 'style')),
      (n = f(t, 'hidden')),
      f(t, { style: (i || '') + ';display:block !important;', hidden: null }));
    var s = (t = a(t)).getBoundingClientRect();
    return (
      w(i) || f(t, { style: i, hidden: n }),
      {
        height: s.height,
        width: s.width,
        top: s.top + o,
        left: s.left + r,
        bottom: s.bottom + o,
        right: s.right + r,
      }
    );
  }
  function ui(t, e) {
    e = e || a(t).offsetParent || wt(t).document.documentElement;
    var t = M(t),
      i = M(e);
    return {
      top: t.top - i.top - b(A(e, 'borderTopWidth')),
      left: t.left - i.left - b(A(e, 'borderLeftWidth')),
    };
  }
  function ci(t) {
    var e,
      i = [0, 0];
    t = a(t);
    do {
      if (
        ((i[0] += t.offsetTop),
        (i[1] += t.offsetLeft),
        'fixed' === A(t, 'position'))
      )
        return (e = wt(t)), (i[0] += e.pageYOffset), (i[1] += e.pageXOffset), i;
    } while ((t = t.offsetParent));
    return i;
  }
  var z = di('height'),
    li = di('width');
  function di(n) {
    var r = R(n);
    return function (t, e) {
      var i;
      if (w(e))
        return st(t)
          ? t['inner' + r]
          : at(t)
          ? ((i = t.documentElement),
            Math.max(i['offset' + r], i['scroll' + r]))
          : (e =
              'auto' === (e = A((t = a(t)), n)) ? t['offset' + r] : b(e) || 0) -
            fi(t, n);
      A(t, n, e || 0 === e ? +e + fi(t, n) + 'px' : '');
    };
  }
  function fi(i, t, e) {
    return (
      void 0 === e && (e = 'border-box'),
      A(i, 'boxSizing') === e
        ? si[t]
            .slice(1)
            .map(R)
            .reduce(function (t, e) {
              return (
                t + b(A(i, 'padding' + e)) + b(A(i, 'border' + e + 'Width'))
              );
            }, 0)
        : 0
    );
  }
  function pi(r, o, s, a) {
    St(si, function (t, e) {
      var i = t[0],
        n = t[1],
        t = t[2];
      o[i] === t
        ? (r[n] += s[e] * a)
        : 'center' === o[i] && (r[n] += (s[e] * a) / 2);
    });
  }
  function mi(t) {
    var e = /left|center|right/,
      i = /top|center|bottom/;
    return (
      1 === (t = (t || '').split(' ')).length &&
        (t = e.test(t[0])
          ? t.concat('center')
          : i.test(t[0])
          ? ['center'].concat(t)
          : ['center', 'center']),
      { x: e.test(t[0]) ? t[0] : 'center', y: i.test(t[1]) ? t[1] : 'center' }
    );
  }
  function gi(t, e, i) {
    var t = (t || '').split(' '),
      n = t[0],
      t = t[1];
    return {
      x: n ? b(n) * (X(n, '%') ? e / 100 : 1) : 0,
      y: t ? b(t) * (X(t, '%') ? i / 100 : 1) : 0,
    };
  }
  function vi(t) {
    switch (t) {
      case 'left':
        return 'right';
      case 'right':
        return 'left';
      case 'top':
        return 'bottom';
      case 'bottom':
        return 'top';
      default:
        return t;
    }
  }
  function wi(t, e, i) {
    return (
      void 0 === e && (e = 'width'),
      void 0 === i && (i = window),
      pt(t)
        ? +t
        : X(t, 'vh')
        ? bi(z(wt(i)), t)
        : X(t, 'vw')
        ? bi(li(wt(i)), t)
        : X(t, '%')
        ? bi(hi(i)[e], t)
        : b(t)
    );
  }
  function bi(t, e) {
    return (t * b(e)) / 100;
  }
  var D = {
    reads: [],
    writes: [],
    read: function (t) {
      return this.reads.push(t), ki(), t;
    },
    write: function (t) {
      return this.writes.push(t), ki(), t;
    },
    clear: function (t) {
      return Si(this.reads, t) || Si(this.writes, t);
    },
    flush: xi,
  };
  function xi(t) {
    void 0 === t && (t = 1),
      $i(D.reads),
      $i(D.writes.splice(0, D.writes.length)),
      (D.scheduled = !1),
      (D.reads.length || D.writes.length) && ki(t + 1);
  }
  var yi = 5;
  function ki(t) {
    if (!D.scheduled) {
      if (((D.scheduled = !0), yi < t))
        throw new Error('Maximum recursion limit reached.');
      t
        ? S.resolve().then(function () {
            return xi(t);
          })
        : requestAnimationFrame(function () {
            return xi();
          });
    }
  }
  function $i(t) {
    for (var e; (e = t.shift()); ) e();
  }
  function Si(t, e) {
    e = t.indexOf(e);
    return !!~e && !!t.splice(e, 1);
  }
  function Ii() {}
  Ii.prototype = {
    positions: [],
    init: function () {
      var e,
        t = this;
      (this.positions = []),
        (this.unbind = y(document, 'mousemove', function (t) {
          return (e = we(t));
        })),
        (this.interval = setInterval(function () {
          e &&
            (t.positions.push(e), 5 < t.positions.length) &&
            t.positions.shift();
        }, 50));
    },
    cancel: function () {
      this.unbind && this.unbind(),
        this.interval && clearInterval(this.interval);
    },
    movesTo: function (t) {
      var e, i, n, r, o, s, a;
      return (
        !(
          this.positions.length < 2 ||
          ((t = (e = t.getBoundingClientRect()).left),
          (i = e.right),
          (n = e.top),
          (r = e.bottom),
          (o = this.positions[0]),
          (s = $t(this.positions)),
          (a = [o, s]),
          Ct(s, e))
        ) &&
        [
          [
            { x: t, y: n },
            { x: i, y: r },
          ],
          [
            { x: t, y: r },
            { x: i, y: n },
          ],
        ].some(function (t) {
          t = (function (t, e) {
            var i = t[0],
              n = i.x,
              i = i.y,
              t = t[1],
              r = t.x,
              t = t.y,
              o = e[0],
              s = o.x,
              o = o.y,
              e = e[1],
              a = e.x,
              e = e.y,
              h = (e - o) * (r - n) - (a - s) * (t - i);
            if (0 == h) return !1;
            a = ((a - s) * (i - o) - (e - o) * (n - s)) / h;
            if (a < 0) return !1;
            return { x: n + a * (r - n), y: i + a * (t - i) };
          })(a, t);
          return t && Ct(t, e);
        })
      );
    },
  };
  var B = {};
  function Ti(t, e, i) {
    return B.computed(it(t) ? t.call(i, i) : t, it(e) ? e.call(i, i) : e);
  }
  function Ei(t, e) {
    return (
      (t = t && !et(t) ? [t] : t), e ? (t ? t.concat(e) : et(e) ? e : [e]) : t
    );
  }
  function _i(t, e) {
    return w(e) ? t : e;
  }
  function Ci(e, i, n) {
    var t,
      r,
      o = {};
    if (
      ((i = it(i) ? i.options : i).extends && (e = Ci(e, i.extends, n)),
      i.mixins)
    )
      for (var s = 0, a = i.mixins.length; s < a; s++)
        e = Ci(e, i.mixins[s], n);
    for (t in e) h(t);
    for (r in i) H(e, r) || h(r);
    function h(t) {
      o[t] = (B[t] || _i)(e[t], i[t], n);
    }
    return o;
  }
  function Ai(t, e) {
    var i;
    void 0 === e && (e = []);
    try {
      return t
        ? U(t, '{')
          ? JSON.parse(t)
          : e.length && !v(t, ':')
          ? (((i = {})[e[0]] = t), i)
          : t.split(';').reduce(function (t, e) {
              var e = e.split(/:(.*)/),
                i = e[0],
                e = e[1];
              return i && !w(e) && (t[i.trim()] = e.trim()), t;
            }, {})
        : {};
    } catch (t) {
      return {};
    }
  }
  (B.events =
    B.created =
    B.beforeConnect =
    B.connected =
    B.beforeDisconnect =
    B.disconnected =
    B.destroy =
      Ei),
    (B.args = function (t, e) {
      return !1 !== e && Ei(e || t);
    }),
    (B.update = function (t, e) {
      return It(Ei(t, it(e) ? { read: e } : e), 'order');
    }),
    (B.props = function (t, e) {
      return (
        et(e) &&
          (e = e.reduce(function (t, e) {
            return (t[e] = String), t;
          }, {})),
        B.methods(t, e)
      );
    }),
    (B.computed = B.methods =
      function (t, e) {
        return e ? (t ? l({}, t, e) : e) : t;
      }),
    (B.data = function (e, i, t) {
      return t
        ? Ti(e, i, t)
        : i
        ? e
          ? function (t) {
              return Ti(e, i, t);
            }
          : i
        : e;
    });
  function Ni(t) {
    (this.id = ++Mi), (this.el = a(t));
  }
  var Mi = 0;
  function zi(t, e) {
    try {
      t.contentWindow.postMessage(
        JSON.stringify(l({ event: 'command' }, e)),
        '*'
      );
    } catch (t) {}
  }
  function Di(o, s, a) {
    var h;
    return (
      void 0 === s && (s = 0),
      void 0 === a && (a = 0),
      !!m(o) &&
        (h = Fi(o)).every(function (t, e) {
          var e = M(h[e + 1] || o),
            t = M(Li(t)),
            i = t.top,
            n = t.left,
            r = t.bottom,
            t = t.right;
          return _t(e, {
            top: i - s,
            left: n - a,
            bottom: r + s,
            right: t + a,
          });
        })
    );
  }
  function Bi(t, e) {
    (t = (st(t) || at(t) ? ji : a)(t)).scrollTop = e;
  }
  function Pi(t, e) {
    var u = (e = void 0 === e ? {} : e).offset;
    if ((void 0 === u && (u = 0), m(t))) {
      for (
        var c = Fi(t).concat(t),
          i = S.resolve(),
          n = function (h) {
            i = i.then(function () {
              return new S(function (e) {
                var i = c[h],
                  t = c[h + 1],
                  n = i.scrollTop,
                  r = Math.ceil(ui(t, Li(i)).top - u),
                  o = ((t = Math.abs(r)), 40 * Math.pow(t, 0.375)),
                  s = Date.now(),
                  a = function () {
                    t = Et((Date.now() - s) / o);
                    var t = 0.5 * (1 - Math.cos(Math.PI * t));
                    Bi(i, n + r * t), 1 != t ? requestAnimationFrame(a) : e();
                  };
                a();
              });
            });
          },
          r = 0;
        r < c.length - 1;
        r++
      )
        n(r);
      return i;
    }
  }
  function Oi(t, e) {
    var i, n, r, o, s;
    return (
      void 0 === e && (e = 0),
      m(t)
        ? ((i = (o = $t(Hi(t))).scrollHeight),
          (n = o.scrollTop),
          (r = M(Li(o)).height),
          Et(
            (-1 * ((o = ci(t)[0] - n - ci(o)[0]) - (s = Math.min(r, o + n)))) /
              Math.min(M(t).height + e + s, i - (o + n), i - r)
          ))
        : 0
    );
  }
  function Hi(t, e) {
    void 0 === e && (e = /auto|scroll/);
    var i = ji(t),
      t = he(t)
        .filter(function (t) {
          return (
            t === i ||
            (e.test(A(t, 'overflow')) &&
              t.scrollHeight > Math.round(M(t).height))
          );
        })
        .reverse();
    return t.length ? t : [i];
  }
  function Li(t) {
    return t === ji(t) ? window : t;
  }
  function Fi(t) {
    return Hi(t, /auto|scroll|hidden/);
  }
  function ji(t) {
    t = wt(t).document;
    return t.scrollingElement || t.documentElement;
  }
  (Ni.prototype.isVideo = function () {
    return this.isYoutube() || this.isVimeo() || this.isHTML5();
  }),
    (Ni.prototype.isHTML5 = function () {
      return 'VIDEO' === this.el.tagName;
    }),
    (Ni.prototype.isIFrame = function () {
      return 'IFRAME' === this.el.tagName;
    }),
    (Ni.prototype.isYoutube = function () {
      return (
        this.isIFrame() &&
        !!this.el.src.match(
          /\/\/.*?youtube(-nocookie)?\.[a-z]+\/(watch\?v=[^&\s]+|embed)|youtu\.be\/.*/
        )
      );
    }),
    (Ni.prototype.isVimeo = function () {
      return this.isIFrame() && !!this.el.src.match(/vimeo\.com\/video\/.*/);
    }),
    (Ni.prototype.enableApi = function () {
      var i,
        n,
        r,
        o = this;
      return (
        this.ready ||
        ((i = this.isYoutube()),
        (n = this.isVimeo()),
        i || n
          ? (this.ready = new S(function (t) {
              var e;
              k(o.el, 'load', function () {
                var t;
                i &&
                  ((t = function () {
                    return zi(o.el, { event: 'listening', id: o.id });
                  }),
                  (r = setInterval(t, 100)),
                  t());
              }),
                (e = function (t) {
                  return (
                    (i && t.id === o.id && 'onReady' === t.event) ||
                    (n && Number(t.player_id) === o.id)
                  );
                }),
                new S(function (i) {
                  return k(
                    window,
                    'message',
                    function (t, e) {
                      return i(e);
                    },
                    !1,
                    function (t) {
                      t = t.data;
                      try {
                        return (t = JSON.parse(t)) && e(t);
                      } catch (t) {}
                    }
                  );
                }).then(function () {
                  t(), r && clearInterval(r);
                }),
                f(
                  o.el,
                  'src',
                  '' +
                    o.el.src +
                    (v(o.el.src, '?') ? '&' : '?') +
                    (i ? 'enablejsapi=1' : 'api=1&player_id=' + o.id)
                );
            }))
          : S.resolve())
      );
    }),
    (Ni.prototype.play = function () {
      var t = this;
      if (this.isVideo())
        if (this.isIFrame())
          this.enableApi().then(function () {
            return zi(t.el, { func: 'playVideo', method: 'play' });
          });
        else if (this.isHTML5())
          try {
            var e = this.el.play();
            e && e.catch(d);
          } catch (t) {}
    }),
    (Ni.prototype.pause = function () {
      var t = this;
      this.isVideo() &&
        (this.isIFrame()
          ? this.enableApi().then(function () {
              return zi(t.el, { func: 'pauseVideo', method: 'pause' });
            })
          : this.isHTML5() && this.el.pause());
    }),
    (Ni.prototype.mute = function () {
      var t = this;
      this.isVideo() &&
        (this.isIFrame()
          ? this.enableApi().then(function () {
              return zi(t.el, { func: 'mute', method: 'setVolume', value: 0 });
            })
          : this.isHTML5() && ((this.el.muted = !0), f(this.el, 'muted', '')));
    });
  var Wi =
      (i && window.IntersectionObserver) ||
      (function () {
        function t(e, t) {
          var i,
            n = this,
            t = (t = void 0 === t ? {} : t).rootMargin,
            t =
              (void 0 === t && (t = '0 0'),
              (this.targets = []),
              (t || '0 0').split(' ').map(b)),
            r = t[0],
            t = t[1];
          (this.offsetTop = r),
            (this.offsetLeft = t),
            (this.apply = function () {
              i =
                i ||
                requestAnimationFrame(function () {
                  return setTimeout(function () {
                    var t = n.takeRecords();
                    t.length && e(t, n), (i = !1);
                  });
                });
            }),
            (this.off = y(window, 'scroll resize load', this.apply, {
              passive: !0,
              capture: !0,
            }));
        }
        return (
          (t.prototype.takeRecords = function () {
            var i = this;
            return this.targets.filter(function (t) {
              var e = Di(t.target, i.offsetTop, i.offsetLeft);
              if (null === t.isIntersecting || e ^ t.isIntersecting)
                return (t.isIntersecting = e), !0;
            });
          }),
          (t.prototype.observe = function (t) {
            this.targets.push({ target: t, isIntersecting: null }),
              this.apply();
          }),
          (t.prototype.disconnect = function () {
            (this.targets = []), this.off();
          }),
          t
        );
      })(),
    t = Object.freeze({
      __proto__: null,
      ajax: $e,
      getImage: Se,
      transition: ei,
      Transition: N,
      animate: ni,
      Animation: oi,
      attr: f,
      hasAttr: Nt,
      removeAttr: Mt,
      data: zt,
      addClass: T,
      removeClass: E,
      removeClasses: We,
      replaceClass: Ve,
      hasClass: _,
      toggleClass: C,
      positionAt: ai,
      offset: M,
      position: ui,
      offsetPosition: ci,
      height: z,
      width: li,
      boxModelAdjust: fi,
      flipPosition: vi,
      toPx: wi,
      ready: Ie,
      index: Te,
      getIndex: Ee,
      empty: _e,
      html: Ce,
      prepend: function (e, t) {
        return (e = s(e)).hasChildNodes()
          ? Me(t, function (t) {
              return e.insertBefore(t, e.firstChild);
            })
          : I(e, t);
      },
      append: I,
      before: Ae,
      after: Ne,
      remove: ze,
      wrapAll: De,
      wrapInner: Be,
      unwrap: Pe,
      fragment: Le,
      apply: Fe,
      $: s,
      $$: h,
      inBrowser: i,
      isIE: Dt,
      isRtl: c,
      hasTouch: Bt,
      pointerDown: Pt,
      pointerMove: Ot,
      pointerUp: Ht,
      pointerEnter: Lt,
      pointerLeave: e,
      pointerCancel: Ft,
      on: y,
      off: ce,
      once: k,
      trigger: $,
      createEvent: le,
      toEventTargets: ge,
      isTouch: ve,
      getEventPos: we,
      fastdom: D,
      isVoidElement: re,
      isVisible: m,
      selInput: oe,
      isInput: se,
      filter: ae,
      within: x,
      parents: he,
      children: ue,
      hasOwn: H,
      hyphenate: F,
      camelize: W,
      ucfirst: R,
      startsWith: U,
      endsWith: X,
      includes: v,
      findIndex: tt,
      isArray: et,
      isFunction: it,
      isObject: nt,
      isPlainObject: ot,
      isWindow: st,
      isDocument: at,
      isJQuery: ht,
      isNode: ut,
      isElement: ct,
      isNodeCollection: lt,
      isBoolean: dt,
      isString: g,
      isNumber: ft,
      isNumeric: pt,
      isEmpty: mt,
      isUndefined: w,
      toBoolean: gt,
      toNumber: vt,
      toFloat: b,
      toNode: a,
      toNodes: u,
      toWindow: wt,
      toList: bt,
      toMs: xt,
      isEqual: yt,
      swap: kt,
      assign: l,
      last: $t,
      each: St,
      sortBy: It,
      uniqueBy: Tt,
      clamp: Et,
      noop: d,
      intersectRect: _t,
      pointInRect: Ct,
      Dimensions: At,
      MouseTracker: Ii,
      mergeOptions: Ci,
      parseOptions: Ai,
      Player: Ni,
      Promise: S,
      Deferred: be,
      IntersectionObserver: Wi,
      query: jt,
      queryAll: Wt,
      find: Rt,
      findAll: qt,
      matches: p,
      closest: Qt,
      parent: te,
      escape: ie,
      css: A,
      getStyles: Xe,
      getStyle: Ge,
      getCssVar: Ke,
      propName: Qe,
      isInView: Di,
      scrollTop: Bi,
      scrollIntoView: Pi,
      scrolledOver: Oi,
      scrollParents: Hi,
      getViewport: Li,
    });
  function Vi(t) {
    return (
      !(!U(t, 'uk-') && !U(t, 'data-uk-')) &&
      W(t.replace('data-uk-', '').replace('uk-', ''))
    );
  }
  function n(t) {
    this._init(t);
  }
  var Ri, qi, Ui, Yi, P, Xi, Gi, Ji, Ki, Zi;
  function Qi(t, e) {
    if (t) for (var i in t) t[i]._connected && t[i]._callUpdate(e);
  }
  function tn(t, e) {
    var i = {},
      n = t.args,
      r = (void 0 === n && (n = []), t.props),
      o = t.el;
    if ((r = void 0 === r ? {} : r)) {
      for (var s in r) {
        var a = F(s),
          h = zt(o, a);
        !w(h) &&
          ((h = (r[s] === Boolean && '' === h) || nn(r[s], h)),
          'target' !== a || (h && !U(h, '_'))) &&
          (i[s] = h);
      }
      var u,
        c = Ai(zt(o, e), n);
      for (u in c) {
        var l = W(u);
        void 0 !== r[l] && (i[l] = nn(r[l], c[u]));
      }
    }
    return i;
  }
  function en(e, i, n) {
    var t = (i = ot(i) ? i : { name: n, handler: i }).name,
      r = i.el,
      o = i.handler,
      s = i.capture,
      a = i.passive,
      h = i.delegate,
      u = i.filter,
      c = i.self,
      r = it(r) ? r.call(e) : r || e.$el;
    et(r)
      ? r.forEach(function (t) {
          return en(e, l({}, i, { el: t }), n);
        })
      : !r ||
        (u && !u.call(e)) ||
        e._events.push(
          y(r, t, h ? (g(h) ? h : h.call(e)) : null, g(o) ? e[o] : o.bind(e), {
            passive: a,
            capture: s,
            self: c,
          })
        );
  }
  function nn(t, e) {
    return t === Boolean
      ? gt(e)
      : t === Number
      ? vt(e)
      : 'list' === t
      ? bt(e)
      : t
      ? t(e)
      : e;
  }
  (n.util = t),
    (n.data = '__uikit__'),
    (n.prefix = 'uk-'),
    (n.options = {}),
    (n.version = '3.5.4'),
    (Ui = (Ri = n).data),
    (Ri.use = function (t) {
      if (!t.installed) return t.call(null, this), (t.installed = !0), this;
    }),
    (Ri.mixin = function (t, e) {
      (e = (g(e) ? Ri.component(e) : e) || this).options = Ci(e.options, t);
    }),
    (Ri.extend = function (t) {
      t = t || {};
      function e(t) {
        this._init(t);
      }
      return (
        (((e.prototype = Object.create(this.prototype)).constructor =
          e).options = Ci(this.options, t)),
        (e.super = this),
        (e.extend = this.extend),
        e
      );
    }),
    (Ri.update = function (t, e) {
      he((t = t ? a(t) : document.body))
        .reverse()
        .forEach(function (t) {
          return Qi(t[Ui], e);
        }),
        Fe(t, function (t) {
          return Qi(t[Ui], e);
        });
    }),
    Object.defineProperty(Ri, 'container', {
      get: function () {
        return qi || document.body;
      },
      set: function (t) {
        qi = s(t);
      },
    }),
    ((t = n).prototype._callHook = function (t) {
      var e = this,
        t = this.$options[t];
      t &&
        t.forEach(function (t) {
          return t.call(e);
        });
    }),
    (t.prototype._callConnected = function () {
      this._connected ||
        ((this._data = {}),
        (this._computeds = {}),
        (this._frames = { reads: {}, writes: {} }),
        this._initProps(),
        this._callHook('beforeConnect'),
        (this._connected = !0),
        this._initEvents(),
        this._initObserver(),
        this._callHook('connected'),
        this._callUpdate());
    }),
    (t.prototype._callDisconnected = function () {
      this._connected &&
        (this._callHook('beforeDisconnect'),
        this._observer &&
          (this._observer.disconnect(), (this._observer = null)),
        this._unbindEvents(),
        this._callHook('disconnected'),
        (this._connected = !1));
    }),
    (t.prototype._callUpdate = function (t) {
      var r = this,
        o = (t = void 0 === t ? 'update' : t).type || t,
        t =
          (v(['update', 'resize'], o) && this._callWatches(),
          this.$options.update),
        e = this._frames,
        s = e.reads,
        a = e.writes;
      t &&
        t.forEach(function (t, e) {
          var i = t.read,
            n = t.write,
            t = t.events;
          ('update' !== o && !v(t, o)) ||
            (i &&
              !v(D.reads, s[e]) &&
              (s[e] = D.read(function () {
                var t = r._connected && i.call(r, r._data, o);
                !1 === t && n ? D.clear(a[e]) : ot(t) && l(r._data, t);
              })),
            !n) ||
            v(D.writes, a[e]) ||
            (a[e] = D.write(function () {
              return r._connected && n.call(r, r._data, o);
            }));
        });
    }),
    (t.prototype._callWatches = function () {
      var a,
        h = this,
        u = this._frames;
      u._watch ||
        ((a = !H(u, '_watch')),
        (u._watch = D.read(function () {
          if (h._connected) {
            var t,
              e = h.$options.computed,
              i = h._computeds;
            for (t in e) {
              var n = H(i, t),
                r = i[t],
                o = (delete i[t], e[t]),
                s = o.watch,
                o = o.immediate;
              s && ((a && o) || (n && !yt(r, h[t]))) && s.call(h, h[t], r);
            }
            u._watch = null;
          }
        })));
    }),
    (Yi = 0),
    ((t = n).prototype._init = function (t) {
      ((t = t || {}).data = (function (t, e) {
        var i = t.data,
          n = (t.el, e.args),
          r = e.props;
        void 0 === r && (r = {});
        if (
          (i = et(i)
            ? mt(n)
              ? void 0
              : i.slice(0, n.length).reduce(function (t, e, i) {
                  return ot(e) ? l(t, e) : (t[n[i]] = e), t;
                }, {})
            : i)
        )
          for (var o in i)
            w(i[o]) ? delete i[o] : (i[o] = r[o] ? nn(r[o], i[o]) : i[o]);
        return i;
      })(t, this.constructor.options)),
        (this.$options = Ci(this.constructor.options, t, this)),
        (this.$el = null),
        (this.$props = {}),
        (this._uid = Yi++),
        this._initData(),
        this._initMethods(),
        this._initComputeds(),
        this._callHook('created'),
        t.el && this.$mount(t.el);
    }),
    (t.prototype._initData = function () {
      var t,
        e = this.$options.data;
      for (t in (e = void 0 === e ? {} : e)) this.$props[t] = this[t] = e[t];
    }),
    (t.prototype._initMethods = function () {
      var t = this.$options.methods;
      if (t) for (var e in t) this[e] = t[e].bind(this);
    }),
    (t.prototype._initComputeds = function () {
      var t = this.$options.computed;
      if (((this._computeds = {}), t))
        for (var e in t)
          !(function (n, r, o) {
            Object.defineProperty(n, r, {
              enumerable: !0,
              get: function () {
                var t = n._computeds,
                  e = n.$props,
                  i = n.$el;
                return H(t, r) || (t[r] = (o.get || o).call(n, e, i)), t[r];
              },
              set: function (t) {
                var e = n._computeds;
                (e[r] = o.set ? o.set.call(n, t) : t), w(e[r]) && delete e[r];
              },
            });
          })(this, e, t[e]);
    }),
    (t.prototype._initProps = function (t) {
      for (var e in (t = t || tn(this.$options, this.$name)))
        w(t[e]) || (this.$props[e] = t[e]);
      var i = [this.$options.computed, this.$options.methods];
      for (e in this.$props)
        e in t &&
          (function (t, e) {
            return t.every(function (t) {
              return !t || !H(t, e);
            });
          })(i, e) &&
          (this[e] = this.$props[e]);
    }),
    (t.prototype._initEvents = function () {
      var i = this;
      this._events = [];
      var t = this.$options.events;
      t &&
        t.forEach(function (t) {
          if (H(t, 'handler')) en(i, t);
          else for (var e in t) en(i, t[e], e);
        });
    }),
    (t.prototype._unbindEvents = function () {
      this._events.forEach(function (t) {
        return t();
      }),
        delete this._events;
    }),
    (t.prototype._initObserver = function () {
      var n = this,
        t = this.$options,
        r = t.attrs,
        e = t.props,
        t = t.el;
      !this._observer &&
        e &&
        !1 !== r &&
        ((r = et(r) ? r : Object.keys(e)),
        (this._observer = new MutationObserver(function (t) {
          var i = tn(n.$options, n.$name);
          t.some(function (t) {
            var t = t.attributeName,
              e = t.replace('data-', '');
            return (e === n.$name ? r : [W(e), W(t)]).some(function (t) {
              return !w(i[t]) && i[t] !== n.$props[t];
            });
          }) && n.$reset();
        })),
        (e = r.map(F).concat(this.$name)),
        this._observer.observe(t, {
          attributes: !0,
          attributeFilter: e.concat(
            e.map(function (t) {
              return 'data-' + t;
            })
          ),
        }));
    }),
    (Xi = (P = n).data),
    (Gi = {}),
    (P.component = function (s, t) {
      var e = F(s);
      if (((s = W(e)), !t))
        return ot(Gi[s]) && (Gi[s] = P.extend(Gi[s])), Gi[s];
      P[s] = function (t, i) {
        for (var e = arguments.length, n = Array(e); e--; ) n[e] = arguments[e];
        var r = P.component(s);
        return r.options.functional
          ? new r({ data: ot(t) ? t : [].concat(n) })
          : t
          ? h(t).map(o)[0]
          : o(t);
        function o(t) {
          var e = P.getComponent(t, s);
          if (e) {
            if (!i) return e;
            e.$destroy();
          }
          return new r({ el: t, data: i });
        }
      };
      var i = ot(t) ? l({}, t) : t.options;
      return (
        (i.name = s),
        i.install && i.install(P, i, s),
        P._initialized &&
          !i.functional &&
          D.read(function () {
            return P[s]('[uk-' + e + '],[data-uk-' + e + ']');
          }),
        (Gi[s] = ot(t) ? i : t)
      );
    }),
    (P.getComponents = function (t) {
      return (t && t[Xi]) || {};
    }),
    (P.getComponent = function (t, e) {
      return P.getComponents(t)[e];
    }),
    (P.connect = function (t) {
      if (t[Xi]) for (var e in t[Xi]) t[Xi][e]._callConnected();
      for (var i = 0; i < t.attributes.length; i++) {
        var n = Vi(t.attributes[i].name);
        n && n in Gi && P[n](t);
      }
    }),
    (P.disconnect = function (t) {
      for (var e in t[Xi]) t[Xi][e]._callDisconnected();
    }),
    (Ki = (Ji = n).data),
    (Ji.prototype.$create = function (t, e, i) {
      return Ji[t](e, i);
    }),
    (Ji.prototype.$mount = function (t) {
      var e = this.$options.name;
      t[Ki] || (t[Ki] = {}),
        t[Ki][e] ||
          (((t[Ki][e] = this).$el = this.$options.el = this.$options.el || t),
          x(t, document) && this._callConnected());
    }),
    (Ji.prototype.$reset = function () {
      this._callDisconnected(), this._callConnected();
    }),
    (Ji.prototype.$destroy = function (t) {
      void 0 === t && (t = !1);
      var e = this.$options,
        i = e.el,
        e = e.name;
      i && this._callDisconnected(),
        this._callHook('destroy'),
        i &&
          i[Ki] &&
          (delete i[Ki][e], mt(i[Ki]) || delete i[Ki], t) &&
          ze(this.$el);
    }),
    (Ji.prototype.$emit = function (t) {
      this._callUpdate(t);
    }),
    (Ji.prototype.$update = function (t, e) {
      void 0 === t && (t = this.$el), Ji.update(t, e);
    }),
    (Ji.prototype.$getComponent = Ji.getComponent),
    (Zi = {}),
    Object.defineProperties(Ji.prototype, {
      $container: Object.getOwnPropertyDescriptor(Ji, 'container'),
      $name: {
        get: function () {
          var t = this.$options.name;
          return Zi[t] || (Zi[t] = Ji.prefix + F(t)), Zi[t];
        },
      },
    });
  var t = {
      connected: function () {
        _(this.$el, this.$name) || T(this.$el, this.$name);
      },
    },
    rn = {
      props: {
        cls: Boolean,
        animation: 'list',
        duration: Number,
        origin: String,
        transition: String,
      },
      data: {
        cls: !1,
        animation: [!1],
        duration: 200,
        origin: !1,
        transition: 'linear',
        initProps: {
          overflow: '',
          height: '',
          paddingTop: '',
          paddingBottom: '',
          marginTop: '',
          marginBottom: '',
        },
        hideProps: {
          overflow: 'hidden',
          height: 0,
          paddingTop: 0,
          paddingBottom: 0,
          marginTop: 0,
          marginBottom: 0,
        },
      },
      computed: {
        hasAnimation: function (t) {
          return !!t.animation[0];
        },
        hasTransition: function (t) {
          t = t.animation;
          return this.hasAnimation && !0 === t[0];
        },
      },
      methods: {
        toggleElement: function (t, i, n) {
          var r = this;
          return S.all(
            u(t).map(function (e) {
              return new S(function (t) {
                return r._toggleElement(e, i, n).then(t, d);
              });
            })
          );
        },
        isToggled: function (t) {
          t = u(t || this.$el);
          return this.cls ? _(t, this.cls.split(' ')[0]) : !Nt(t, 'hidden');
        },
        updateAria: function (t) {
          !1 === this.cls && f(t, 'aria-hidden', !this.isToggled(t));
        },
        _toggleElement: function (t, e, i) {
          var o,
            n = this;
          return (
            (e = dt(e)
              ? e
              : oi.inProgress(t)
              ? _(t, 'uk-animation-leave')
              : N.inProgress(t)
              ? '0px' === t.style.height
              : !this.isToggled(t)),
            $(t, 'before' + (e ? 'show' : 'hide'), [this])
              ? ((i = (
                  it(i)
                    ? i
                    : !1 !== i && this.hasAnimation
                    ? this.hasTransition
                      ? on(this)
                      : ((o = this),
                        function (t, e) {
                          oi.cancel(t);
                          var i = o.animation,
                            n = o.duration,
                            r = o._toggle;
                          return e
                            ? (r(t, !0), oi.in(t, i[0], n, o.origin))
                            : oi
                                .out(t, i[1] || i[0], n, o.origin)
                                .then(function () {
                                  return r(t, !1);
                                });
                        })
                    : this._toggle
                )(t, e)),
                $(t, e ? 'show' : 'hide', [this]),
                (i || S.resolve()).then(function () {
                  $(t, e ? 'shown' : 'hidden', [n]), n.$update(t);
                }))
              : S.reject()
          );
        },
        _toggle: function (t, e) {
          var i;
          t &&
            ((e = Boolean(e)),
            this.cls
              ? (i = v(this.cls, ' ') || e !== _(t, this.cls)) &&
                C(t, this.cls, v(this.cls, ' ') ? void 0 : e)
              : (i = e === Nt(t, 'hidden')) && f(t, 'hidden', e ? null : ''),
            h('[autofocus]', t).some(function (t) {
              return m(t) ? t.focus() || !0 : t.blur();
            }),
            this.updateAria(t),
            i) &&
            ($(t, 'toggled', [this]), this.$update(t));
        },
      },
    };
  function on(t) {
    var o = t.isToggled,
      s = t.duration,
      a = t.initProps,
      h = t.hideProps,
      u = t.transition,
      c = t._toggle;
    return function (t, e) {
      var i = N.inProgress(t),
        n = t.hasChildNodes
          ? b(A(t.firstElementChild, 'marginTop')) +
            b(A(t.lastElementChild, 'marginBottom'))
          : 0,
        r = m(t) ? z(t) + (i ? 0 : n) : 0,
        i =
          (N.cancel(t),
          o(t) || c(t, !0),
          z(t, ''),
          D.flush(),
          z(t) + (i ? 0 : n));
      return (
        z(t, r),
        (e
          ? N.start(
              t,
              l({}, a, { overflow: 'hidden', height: i }),
              Math.round(s * (1 - r / i)),
              u
            )
          : N.start(t, h, Math.round(s * (r / i)), u).then(function () {
              return c(t, !1);
            })
        ).then(function () {
          return A(t, a);
        })
      );
    };
  }
  var sn = {
    mixins: [t, rn],
    props: {
      targets: String,
      active: null,
      collapsible: Boolean,
      multiple: Boolean,
      toggle: String,
      content: String,
      transition: String,
      offset: Number,
    },
    data: {
      targets: '> *',
      active: !1,
      animation: [!0],
      collapsible: !0,
      multiple: !1,
      clsOpen: 'uk-open',
      toggle: '> .uk-accordion-title',
      content: '> .uk-accordion-content',
      transition: 'ease',
      offset: 0,
    },
    computed: {
      items: {
        get: function (t, e) {
          return h(t.targets, e);
        },
        watch: function (t, e) {
          var i = this;
          t.forEach(function (t) {
            return an(s(i.content, t), !_(t, i.clsOpen));
          }),
            e ||
              _(t, this.clsOpen) ||
              ((e =
                (!1 !== this.active && t[Number(this.active)]) ||
                (!this.collapsible && t[0])) &&
                this.toggle(e, !1));
        },
        immediate: !0,
      },
    },
    events: [
      {
        name: 'click',
        delegate: function () {
          return this.targets + ' ' + this.$props.toggle;
        },
        handler: function (t) {
          t.preventDefault(),
            this.toggle(
              Te(
                h(this.targets + ' ' + this.$props.toggle, this.$el),
                t.current
              )
            );
        },
      },
    ],
    methods: {
      toggle: function (t, r) {
        var o = this,
          t = [this.items[Ee(t, this.items)]],
          e = ae(this.items, '.' + this.clsOpen);
        this.multiple || v(e, t[0]) || (t = t.concat(e)),
          (!this.collapsible &&
            e.length < 2 &&
            !ae(t, ':not(.' + this.clsOpen + ')').length) ||
            t.forEach(function (t) {
              return o.toggleElement(t, !_(t, o.clsOpen), function (e, i) {
                C(e, o.clsOpen, i);
                var n = s((e._wrapper ? '> * ' : '') + o.content, e);
                if (!1 !== r && o.hasTransition)
                  return (
                    e._wrapper ||
                      (e._wrapper = De(n, '<div' + (i ? ' hidden' : '') + '>')),
                    an(n, !1),
                    on(o)(e._wrapper, i).then(function () {
                      var t;
                      an(n, !i),
                        delete e._wrapper,
                        Pe(n),
                        i &&
                          !Di((t = s(o.$props.toggle, e))) &&
                          Pi(t, { offset: o.offset });
                    })
                  );
                an(n, !i);
              });
            });
      },
    },
  };
  function an(t, e) {
    f(t, 'hidden', e ? '' : null);
  }
  var hn = {
      mixins: [t, rn],
      args: 'animation',
      props: { close: String },
      data: {
        animation: [!0],
        selClose: '.uk-alert-close',
        duration: 150,
        hideProps: l({ opacity: 0 }, rn.data.hideProps),
      },
      events: [
        {
          name: 'click',
          delegate: function () {
            return this.selClose;
          },
          handler: function (t) {
            t.preventDefault(), this.close();
          },
        },
      ],
      methods: {
        close: function () {
          var t = this;
          this.toggleElement(this.$el).then(function () {
            return t.$destroy(!0);
          });
        },
      },
    },
    un = {
      args: 'autoplay',
      props: { automute: Boolean, autoplay: Boolean },
      data: { automute: !1, autoplay: !0 },
      computed: {
        inView: function (t) {
          return 'inview' === t.autoplay;
        },
      },
      connected: function () {
        this.inView && !Nt(this.$el, 'preload') && (this.$el.preload = 'none'),
          (this.player = new Ni(this.$el)),
          this.automute && this.player.mute();
      },
      update: {
        read: function () {
          return (
            !!this.player && {
              visible: m(this.$el) && 'hidden' !== A(this.$el, 'visibility'),
              inView: this.inView && Di(this.$el),
            }
          );
        },
        write: function (t) {
          var e = t.visible,
            t = t.inView;
          !e || (this.inView && !t)
            ? this.player.pause()
            : (!0 === this.autoplay || (this.inView && t)) &&
              this.player.play();
        },
        events: ['resize', 'scroll'],
      },
    },
    cn = {
      mixins: [t, un],
      props: { width: Number, height: Number },
      data: { automute: !0 },
      update: {
        read: function () {
          var t = this.$el,
            e =
              (function (t) {
                for (; (t = te(t)); )
                  if ('static' !== A(t, 'position')) return t;
              })(t) || t.parentNode,
            i = e.offsetHeight,
            e = e.offsetWidth,
            t = At.cover(
              {
                width:
                  this.width || t.naturalWidth || t.videoWidth || t.clientWidth,
                height:
                  this.height ||
                  t.naturalHeight ||
                  t.videoHeight ||
                  t.clientHeight,
              },
              { width: e + (e % 2 ? 1 : 0), height: i + (i % 2 ? 1 : 0) }
            );
          return !(!t.width || !t.height) && t;
        },
        write: function (t) {
          var e = t.height,
            t = t.width;
          A(this.$el, { height: e, width: t });
        },
        events: ['resize'],
      },
    };
  var ln,
    dn = {
      props: { pos: String, offset: null, flip: Boolean, clsPos: String },
      data: {
        pos: 'bottom-' + (c ? 'right' : 'left'),
        flip: !0,
        offset: !1,
        clsPos: '',
      },
      computed: {
        pos: function (t) {
          t = t.pos;
          return (t + (v(t, '-') ? '' : '-center')).split('-');
        },
        dir: function () {
          return this.pos[0];
        },
        align: function () {
          return this.pos[1];
        },
      },
      methods: {
        positionAt: function (t, e, i) {
          We(t, this.clsPos + '-(top|bottom|left|right)(-[a-z]+)?');
          var n = this.offset,
            r = this.getAxis(),
            o =
              (pt(n) ||
                (n = (o = s(n))
                  ? M(o)['x' === r ? 'left' : 'top'] -
                    M(e)['x' === r ? 'right' : 'bottom']
                  : 0),
              ai(
                t,
                e,
                'x' === r
                  ? vi(this.dir) + ' ' + this.align
                  : this.align + ' ' + vi(this.dir),
                'x' === r
                  ? this.dir + ' ' + this.align
                  : this.align + ' ' + this.dir,
                'x' === r
                  ? '' + ('left' === this.dir ? -n : n)
                  : ' ' + ('top' === this.dir ? -n : n),
                null,
                this.flip,
                i
              ).target),
            e = o.x,
            n = o.y;
          (this.dir = 'x' === r ? e : n),
            (this.align = 'x' === r ? n : e),
            C(
              t,
              this.clsPos + '-' + this.dir + '-' + this.align,
              !1 === this.offset
            );
        },
        getAxis: function () {
          return 'top' === this.dir || 'bottom' === this.dir ? 'y' : 'x';
        },
      },
    },
    fn = {
      mixins: [dn, rn],
      args: 'pos',
      props: {
        mode: 'list',
        toggle: Boolean,
        boundary: Boolean,
        boundaryAlign: Boolean,
        delayShow: Number,
        delayHide: Number,
        clsDrop: String,
      },
      data: {
        mode: ['click', 'hover'],
        toggle: '- *',
        boundary: i && window,
        boundaryAlign: !1,
        delayShow: 0,
        delayHide: 800,
        clsDrop: !1,
        animation: ['uk-animation-fade'],
        cls: 'uk-open',
      },
      computed: {
        boundary: function (t, e) {
          return jt(t.boundary, e);
        },
        clsDrop: function (t) {
          return t.clsDrop || 'uk-' + this.$options.name;
        },
        clsPos: function () {
          return this.clsDrop;
        },
      },
      created: function () {
        this.tracker = new Ii();
      },
      connected: function () {
        T(this.$el, this.clsDrop);
        var t = this.$props.toggle;
        (this.toggle =
          t &&
          this.$create('toggle', jt(t, this.$el), {
            target: this.$el,
            mode: this.mode,
          })),
          this.toggle || $(this.$el, 'updatearia');
      },
      disconnected: function () {
        this.isActive() && (ln = null);
      },
      events: [
        {
          name: 'click',
          delegate: function () {
            return '.' + this.clsDrop + '-close';
          },
          handler: function (t) {
            t.preventDefault(), this.hide(!1);
          },
        },
        {
          name: 'click',
          delegate: function () {
            return 'a[href^="#"]';
          },
          handler: function (t) {
            var e = t.defaultPrevented,
              t = t.current.hash;
            e || !t || x(t, this.$el) || this.hide(!1);
          },
        },
        {
          name: 'beforescroll',
          handler: function () {
            this.hide(!1);
          },
        },
        {
          name: 'toggle',
          self: !0,
          handler: function (t, e) {
            t.preventDefault(),
              this.isToggled() ? this.hide(!1) : this.show(e, !1);
          },
        },
        {
          name: 'toggleshow',
          self: !0,
          handler: function (t, e) {
            t.preventDefault(), this.show(e);
          },
        },
        {
          name: 'togglehide',
          self: !0,
          handler: function (t) {
            t.preventDefault(), this.hide();
          },
        },
        {
          name: Lt,
          filter: function () {
            return v(this.mode, 'hover');
          },
          handler: function (t) {
            ve(t) || this.clearTimers();
          },
        },
        {
          name: e,
          filter: function () {
            return v(this.mode, 'hover');
          },
          handler: function (t) {
            ve(t) || this.hide();
          },
        },
        {
          name: 'toggled',
          self: !0,
          handler: function () {
            this.isToggled() && (this.clearTimers(), this.position());
          },
        },
        {
          name: 'show',
          self: !0,
          handler: function () {
            var r = this;
            (ln = this).tracker.init(),
              $(this.$el, 'updatearia'),
              k(
                this.$el,
                'hide',
                y(document, Pt, function (t) {
                  var n = t.target;
                  return (
                    !x(n, r.$el) &&
                    k(
                      document,
                      Ht + ' ' + Ft + ' scroll',
                      function (t) {
                        var e = t.defaultPrevented,
                          i = t.type,
                          t = t.target;
                        e ||
                          i !== Ht ||
                          n !== t ||
                          (r.toggle && x(n, r.toggle.$el)) ||
                          r.hide(!1);
                      },
                      !0
                    )
                  );
                }),
                { self: !0 }
              ),
              k(
                this.$el,
                'hide',
                y(document, 'keydown', function (t) {
                  27 === t.keyCode && (t.preventDefault(), r.hide(!1));
                }),
                { self: !0 }
              );
          },
        },
        {
          name: 'beforehide',
          self: !0,
          handler: function () {
            this.clearTimers();
          },
        },
        {
          name: 'hide',
          handler: function (t) {
            t = t.target;
            this.$el !== t
              ? (ln =
                  null === ln && x(t, this.$el) && this.isToggled() ? this : ln)
              : ((ln = this.isActive() ? null : ln),
                $(this.$el, 'updatearia'),
                this.tracker.cancel());
          },
        },
        {
          name: 'updatearia',
          self: !0,
          handler: function (t, e) {
            t.preventDefault(),
              this.updateAria(this.$el),
              (e || this.toggle) &&
                (f((e || this.toggle).$el, 'aria-expanded', this.isToggled()),
                C(this.toggle.$el, this.cls, this.isToggled()));
          },
        },
      ],
      update: {
        write: function () {
          this.isToggled() && !oi.inProgress(this.$el) && this.position();
        },
        events: ['resize'],
      },
      methods: {
        show: function (t, e) {
          var i,
            n = this;
          if (
            (void 0 === t && (t = this.toggle),
            void 0 === e && (e = !0),
            this.isToggled() &&
              t &&
              this.toggle &&
              t.$el !== this.toggle.$el &&
              this.hide(!1),
            (this.toggle = t),
            this.clearTimers(),
            !this.isActive())
          ) {
            if (ln) {
              if (e && ln.isDelaying)
                return void (this.showTimer = setTimeout(this.show, 10));
              for (; ln && i !== ln && !x(this.$el, ln.$el); )
                (i = ln).hide(!1);
            }
            this.showTimer = setTimeout(function () {
              return !n.isToggled() && n.toggleElement(n.$el, !0);
            }, (e && this.delayShow) || 0);
          }
        },
        hide: function (t) {
          function e() {
            return r.toggleElement(r.$el, !1, !1);
          }
          var i,
            n,
            r = this;
          void 0 === t && (t = !0);
          this.clearTimers(),
            (this.isDelaying =
              ((i = this.$el),
              (n = []),
              Fe(i, function (t) {
                return 'static' !== A(t, 'position') && n.push(t);
              }),
              n.some(function (t) {
                return r.tracker.movesTo(t);
              }))),
            t && this.isDelaying
              ? (this.hideTimer = setTimeout(this.hide, 50))
              : t && this.delayHide
              ? (this.hideTimer = setTimeout(e, this.delayHide))
              : e();
        },
        clearTimers: function () {
          clearTimeout(this.showTimer),
            clearTimeout(this.hideTimer),
            (this.showTimer = null),
            (this.hideTimer = null),
            (this.isDelaying = !1);
        },
        isActive: function () {
          return ln === this;
        },
        position: function () {
          E(this.$el, this.clsDrop + '-stack'),
            C(this.$el, this.clsDrop + '-boundary', this.boundaryAlign);
          var t,
            e = M(this.boundary),
            i = this.boundaryAlign ? e : M(this.toggle.$el);
          'justify' === this.align
            ? ((t = 'y' === this.getAxis() ? 'width' : 'height'),
              A(this.$el, t, i[t]))
            : this.$el.offsetWidth >
                Math.max(e.right - i.left, i.right - e.left) &&
              T(this.$el, this.clsDrop + '-stack'),
            this.positionAt(
              this.$el,
              this.boundaryAlign ? this.boundary : this.toggle.$el,
              this.boundary
            );
        },
      },
    };
  var pn = {
      mixins: [t],
      args: 'target',
      props: { target: Boolean },
      data: { target: !1 },
      computed: {
        input: function (t, e) {
          return s(oe, e);
        },
        state: function () {
          return this.input.nextElementSibling;
        },
        target: function (t, e) {
          t = t.target;
          return (
            t &&
            ((!0 === t &&
              this.input.parentNode === e &&
              this.input.nextElementSibling) ||
              jt(t, e))
          );
        },
      },
      update: function () {
        var t,
          e,
          i = this.target,
          n = this.input;
        i &&
          i[(t = se(i) ? 'value' : 'textContent')] !==
            (e =
              n.files && n.files[0]
                ? n.files[0].name
                : p(n, 'select') &&
                  (e = h('option', n).filter(function (t) {
                    return t.selected;
                  })[0])
                ? e.textContent
                : n.value) &&
          (i[t] = e);
      },
      events: [
        {
          name: 'change',
          handler: function () {
            this.$update();
          },
        },
        {
          name: 'reset',
          el: function () {
            return Qt(this.$el, 'form');
          },
          handler: function () {
            this.$update();
          },
        },
      ],
    },
    mn = {
      update: {
        read: function (t) {
          var e = Di(this.$el);
          if (!e || t.isInView === e) return !1;
          t.isInView = e;
        },
        write: function () {
          this.$el.src = '' + this.$el.src;
        },
        events: ['scroll', 'resize'],
      },
    },
    gn = {
      props: { margin: String, firstColumn: Boolean },
      data: { margin: 'uk-margin-small-top', firstColumn: 'uk-first-column' },
      update: {
        read: function () {
          return {
            columns: (function (t) {
              t = wn(t, 'left', 'right');
              return c ? t.reverse() : t;
            })(this.$el.children),
            rows: vn(this.$el.children),
          };
        },
        write: function (t) {
          var i = this,
            n = t.columns;
          t.rows.forEach(function (t, e) {
            return t.forEach(function (t) {
              C(t, i.margin, 0 !== e), C(t, i.firstColumn, v(n[0], t));
            });
          });
        },
        events: ['resize'],
      },
    };
  function vn(t) {
    return wn(t, 'top', 'bottom');
  }
  function wn(t, e, i) {
    for (var n = [[]], r = 0; r < t.length; r++) {
      var o = t[r];
      if (m(o))
        for (var s = bn(o), a = n.length - 1; 0 <= a; a--) {
          var h = n[a];
          if (!h[0]) {
            h.push(o);
            break;
          }
          var u = void 0,
            u =
              h[0].offsetParent === o.offsetParent
                ? bn(h[0])
                : ((s = bn(o, !0)), bn(h[0], !0));
          if (s[e] >= u[i] - 1 && s[e] !== u[e]) {
            n.push([o]);
            break;
          }
          if (s[i] - 1 > u[e] || s[e] === u[e]) {
            h.push(o);
            break;
          }
          if (0 === a) {
            n.unshift([o]);
            break;
          }
        }
    }
    return n;
  }
  function bn(t, e) {
    var i = t.offsetTop,
      n = t.offsetLeft,
      r = t.offsetHeight,
      o = t.offsetWidth;
    return (
      (e = void 0 === e ? !1 : e) && ((i = (e = ci(t))[0]), (n = e[1])),
      { top: i, left: n, bottom: i + r, right: n + o }
    );
  }
  var xn = {
    extends: gn,
    mixins: [t],
    name: 'grid',
    props: { masonry: Boolean, parallax: Number },
    data: {
      margin: 'uk-grid-margin',
      clsStack: 'uk-grid-stack',
      masonry: !1,
      parallax: 0,
    },
    connected: function () {
      this.masonry && T(this.$el, 'uk-flex-top uk-flex-wrap-top');
    },
    update: [
      {
        write: function (t) {
          t = t.columns;
          C(this.$el, this.clsStack, t.length < 2);
        },
        events: ['resize'],
      },
      {
        read: function (t) {
          var e,
            i,
            n,
            r,
            o,
            s,
            a,
            h,
            u,
            c = t.columns,
            t = t.rows,
            l = ue(this.$el);
          return (
            !(!l.length || (!this.masonry && !this.parallax)) &&
            ((e = l.some(N.inProgress)),
            (i = !1),
            (n = c.map(function (t) {
              return t.reduce(function (t, e) {
                return t + e.offsetHeight;
              }, 0);
            })),
            (l = l),
            (o = this.margin),
            (r =
              b(
                (a = l.filter(function (t) {
                  return _(t, o);
                })[0])
                  ? A(a, 'marginTop')
                  : A(l[0], 'paddingLeft')
              ) *
              (t.length - 1)),
            (s = Math.max.apply(Math, n) + r),
            this.masonry &&
              ((c = c.map(function (t) {
                return It(t, 'offsetTop');
              })),
              (a = c),
              (h = t.map(function (t) {
                return Math.max.apply(
                  Math,
                  t.map(function (t) {
                    return t.offsetHeight;
                  })
                );
              })),
              (i = a.map(function (i) {
                var n = 0;
                return i.map(function (t, e) {
                  return (n += e ? h[e - 1] - i[e - 1].offsetHeight : 0);
                });
              }))),
            {
              padding: (u =
                (u = Math.abs(this.parallax)) &&
                n.reduce(function (t, e, i) {
                  return Math.max(t, e + r + (i % 2 ? u : u / 8) - s);
                }, 0)),
              columns: c,
              translates: i,
              height: !e && (this.masonry ? s : ''),
            })
          );
        },
        write: function (t) {
          var e = t.height,
            t = t.padding;
          A(this.$el, 'paddingBottom', t || ''),
            !1 !== e && A(this.$el, 'height', e);
        },
        events: ['resize'],
      },
      {
        read: function (t) {
          t = t.height;
          return {
            scrolled:
              !!this.parallax &&
              Oi(this.$el, t ? t - z(this.$el) : 0) * Math.abs(this.parallax),
          };
        },
        write: function (t) {
          var e = t.columns,
            n = t.scrolled,
            r = t.translates;
          (!1 === n && !r) ||
            e.forEach(function (t, i) {
              return t.forEach(function (t, e) {
                return A(
                  t,
                  'transform',
                  n || r
                    ? 'translateY(' +
                        ((r && -r[i][e]) + (n ? (i % 2 ? n : n / 8) : 0)) +
                        'px)'
                    : ''
                );
              });
            });
        },
        events: ['scroll', 'resize'],
      },
    ],
  };
  var yn = Dt
      ? {
          props: { selMinHeight: String },
          data: { selMinHeight: !1, forceHeight: !1 },
          computed: {
            elements: function (t, e) {
              t = t.selMinHeight;
              return t ? h(t, e) : [e];
            },
          },
          update: [
            {
              read: function () {
                A(this.elements, 'height', '');
              },
              order: -5,
              events: ['resize'],
            },
            {
              write: function () {
                var i = this;
                this.elements.forEach(function (t) {
                  var e = b(A(t, 'minHeight'));
                  e &&
                    (i.forceHeight ||
                      Math.round(e + fi(t, 'height', 'content-box')) >=
                        t.offsetHeight) &&
                    A(t, 'height', e);
                });
              },
              order: 5,
              events: ['resize'],
            },
          ],
        }
      : {},
    kn = {
      mixins: [yn],
      args: 'target',
      props: { target: String, row: Boolean },
      data: { target: '> *', row: !0, forceHeight: !0 },
      computed: {
        elements: function (t, e) {
          return h(t.target, e);
        },
      },
      update: {
        read: function () {
          return {
            rows: (this.row ? vn(this.elements) : [this.elements]).map($n),
          };
        },
        write: function (t) {
          t.rows.forEach(function (t) {
            var i = t.heights;
            return t.elements.forEach(function (t, e) {
              return A(t, 'minHeight', i[e]);
            });
          });
        },
        events: ['resize'],
      },
    };
  function $n(t) {
    var i, n, e, r;
    return t.length < 2
      ? { heights: [''], elements: t }
      : ((e = Sn(t)),
        (i = e.heights),
        (n = e.max),
        (e = t.some(function (t) {
          return t.style.minHeight;
        })),
        (r = t.some(function (t, e) {
          return !t.style.minHeight && i[e] < n;
        })),
        e &&
          r &&
          (A(t, 'minHeight', ''), (e = Sn(t)), (i = e.heights), (n = e.max)),
        {
          heights: (i = t.map(function (t, e) {
            return i[e] === n &&
              b(t.style.minHeight).toFixed(2) !== n.toFixed(2)
              ? ''
              : n;
          })),
          elements: t,
        });
  }
  function Sn(t) {
    t = t.map(function (t) {
      return M(t).height - fi(t, 'height', 'content-box');
    });
    return { heights: t, max: Math.max.apply(null, t) };
  }
  var In = {
    mixins: [yn],
    props: {
      expand: Boolean,
      offsetTop: Boolean,
      offsetBottom: Boolean,
      minHeight: Number,
    },
    data: { expand: !1, offsetTop: !1, offsetBottom: !1, minHeight: 0 },
    update: {
      read: function (t) {
        t = t.minHeight;
        if (!m(this.$el)) return !1;
        var e = '',
          i = fi(this.$el, 'height', 'content-box');
        if (this.expand) {
          if (
            ((this.$el.dataset.heightExpand = ''),
            s('[data-height-expand]') !== this.$el)
          )
            return !1;
          e =
            z(window) - (Tn(document.documentElement) - Tn(this.$el)) - i || '';
        } else {
          var n,
            e = 'calc(100vh';
          this.offsetTop &&
            (e +=
              0 < (n = M(this.$el).top) && n < z(window) / 2
                ? ' - ' + n + 'px'
                : ''),
            !0 === this.offsetBottom
              ? (e += ' - ' + Tn(this.$el.nextElementSibling) + 'px')
              : pt(this.offsetBottom)
              ? (e += ' - ' + this.offsetBottom + 'vh')
              : this.offsetBottom && X(this.offsetBottom, 'px')
              ? (e += ' - ' + b(this.offsetBottom) + 'px')
              : g(this.offsetBottom) &&
                (e += ' - ' + Tn(jt(this.offsetBottom, this.$el)) + 'px'),
            (e += (i ? ' - ' + i + 'px' : '') + ')');
        }
        return { minHeight: e, prev: t };
      },
      write: function (t) {
        var e = t.minHeight,
          t = t.prev;
        A(this.$el, { minHeight: e }),
          e !== t && this.$update(this.$el, 'resize'),
          this.minHeight &&
            b(A(this.$el, 'minHeight')) < this.minHeight &&
            A(this.$el, 'minHeight', this.minHeight);
      },
      events: ['resize'],
    },
  };
  function Tn(t) {
    return (t && M(t).height) || 0;
  }
  var En = {
      args: 'src',
      props: {
        id: Boolean,
        icon: String,
        src: String,
        style: String,
        width: Number,
        height: Number,
        ratio: Number,
        class: String,
        strokeAnimation: Boolean,
        focusable: Boolean,
        attributes: 'list',
      },
      data: {
        ratio: 1,
        include: ['style', 'class', 'focusable'],
        class: '',
        strokeAnimation: !1,
      },
      beforeConnect: function () {
        this.class += ' uk-svg';
      },
      connected: function () {
        var t,
          e = this;
        !this.icon &&
          v(this.src, '#') &&
          ((t = this.src.split('#')), (this.src = t[0]), (this.icon = t[1])),
          (this.svg = this.getSvg().then(function (t) {
            return (
              e.applyAttributes(t),
              (e.svgEl = (function (t, e) {
                if (re(e) || 'CANVAS' === e.tagName)
                  return (
                    f(e, 'hidden', !0),
                    (i = e.nextElementSibling),
                    Mn(t, i) ? i : Ne(e, t)
                  );
                var i = e.lastElementChild;
                return Mn(t, i) ? i : I(e, t);
              })(t, e.$el))
            );
          }, d));
      },
      disconnected: function () {
        var e = this;
        re(this.$el) && f(this.$el, 'hidden', null),
          this.svg &&
            this.svg.then(function (t) {
              return (!e._connected || t !== e.svgEl) && ze(t);
            }, d),
          (this.svg = this.svgEl = null);
      },
      update: {
        read: function () {
          return !!(this.strokeAnimation && this.svgEl && m(this.svgEl));
        },
        write: function () {
          var t, e;
          (t = this.svgEl),
            (e = Nn(t)) && t.style.setProperty('--uk-animation-stroke', e);
        },
        type: ['resize'],
      },
      methods: {
        getSvg: function () {
          var e = this;
          return (function (i) {
            if (_n[i]) return _n[i];
            return (_n[i] = new S(function (e, t) {
              i
                ? U(i, 'data:')
                  ? e(decodeURIComponent(i.split(',')[1]))
                  : $e(i).then(
                      function (t) {
                        return e(t.response);
                      },
                      function () {
                        return t('SVG not found.');
                      }
                    )
                : t();
            }));
          })(this.src).then(function (t) {
            return (
              (function (t, e) {
                e &&
                  v(t, '<symbol') &&
                  (t =
                    (function (t, e) {
                      if (!An[t]) {
                        var i;
                        for (An[t] = {}, Cn.lastIndex = 0; (i = Cn.exec(t)); )
                          An[t][i[3]] =
                            '<svg xmlns="http://www.w3.org/2000/svg"' +
                            i[1] +
                            'svg>';
                      }
                      return An[t][e];
                    })(t, e) || t);
                return (
                  (t = s(t.substr(t.indexOf('<svg')))) && t.hasChildNodes() && t
                );
              })(t, e.icon) || S.reject('SVG not found.')
            );
          });
        },
        applyAttributes: function (i) {
          var t,
            e,
            n = this;
          for (t in this.$options.props)
            this[t] && v(this.include, t) && f(i, t, this[t]);
          for (e in this.attributes) {
            var r = this.attributes[e].split(':', 2),
              o = r[0],
              r = r[1];
            f(i, o, r);
          }
          this.id || Mt(i, 'id');
          var s = ['width', 'height'],
            a = [this.width, this.height],
            h =
              (a.some(function (t) {
                return t;
              }) ||
                (a = s.map(function (t) {
                  return f(i, t);
                })),
              f(i, 'viewBox'));
          (a =
            h &&
            !a.some(function (t) {
              return t;
            })
              ? h.split(' ').slice(2)
              : a).forEach(function (t, e) {
            (t = (0 | t) * n.ratio) && f(i, s[e], t),
              t && !a[1 ^ e] && Mt(i, s[1 ^ e]);
          }),
            f(i, 'data-svg', this.icon || this.src);
        },
      },
    },
    _n = {};
  var Cn = /<symbol([^]*?id=(['"])(.+?)\2[^]*?<\/)symbol>/g,
    An = {};
  function Nn(t) {
    return Math.ceil(
      Math.max.apply(
        Math,
        [0].concat(
          h('[stroke]', t).map(function (t) {
            try {
              return t.getTotalLength();
            } catch (t) {
              return 0;
            }
          })
        )
      )
    );
  }
  function Mn(t, e) {
    return f(t, 'data-svg') === f(e, 'data-svg');
  }
  var zn = {
      spinner:
        '<svg width="30" height="30" viewBox="0 0 30 30" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" cx="15" cy="15" r="14"/></svg>',
      totop:
        '<svg width="18" height="10" viewBox="0 0 18 10" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.2" points="1 9 9 1 17 9 "/></svg>',
      marker:
        '<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect x="9" y="4" width="1" height="11"/><rect x="4" y="9" width="11" height="1"/></svg>',
      'close-icon':
        '<svg width="14" height="14" viewBox="0 0 14 14" xmlns="http://www.w3.org/2000/svg"><line fill="none" stroke="#000" stroke-width="1.1" x1="1" y1="1" x2="13" y2="13"/><line fill="none" stroke="#000" stroke-width="1.1" x1="13" y1="1" x2="1" y2="13"/></svg>',
      'close-large':
        '<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><line fill="none" stroke="#000" stroke-width="1.4" x1="1" y1="1" x2="19" y2="19"/><line fill="none" stroke="#000" stroke-width="1.4" x1="19" y1="1" x2="1" y2="19"/></svg>',
      'navbar-toggle-icon':
        '<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect y="9" width="20" height="2"/><rect y="3" width="20" height="2"/><rect y="15" width="20" height="2"/></svg>',
      'overlay-icon':
        '<svg width="40" height="40" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg"><rect x="19" y="0" width="1" height="40"/><rect x="0" y="19" width="40" height="1"/></svg>',
      'pagination-next':
        '<svg width="7" height="12" viewBox="0 0 7 12" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.2" points="1 1 6 6 1 11"/></svg>',
      'pagination-previous':
        '<svg width="7" height="12" viewBox="0 0 7 12" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.2" points="6 1 1 6 6 11"/></svg>',
      'search-icon':
        '<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="9" cy="9" r="7"/><path fill="none" stroke="#000" stroke-width="1.1" d="M14,14 L18,18 L14,14 Z"/></svg>',
      'search-large':
        '<svg width="40" height="40" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.8" cx="17.5" cy="17.5" r="16.5"/><line fill="none" stroke="#000" stroke-width="1.8" x1="38" y1="39" x2="29" y2="30"/></svg>',
      'search-navbar':
        '<svg width="24" height="24" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="10.5" cy="10.5" r="9.5"/><line fill="none" stroke="#000" stroke-width="1.1" x1="23" y1="23" x2="17" y2="17"/></svg>',
      'slidenav-next':
        '<svg width="14px" height="24px" viewBox="0 0 14 24" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.4" points="1.225,23 12.775,12 1.225,1 "/></svg>',
      'slidenav-next-large':
        '<svg width="25px" height="40px" viewBox="0 0 25 40" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="2" points="4.002,38.547 22.527,20.024 4,1.5 "/></svg>',
      'slidenav-previous':
        '<svg width="14px" height="24px" viewBox="0 0 14 24" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.4" points="12.775,1 1.225,12 12.775,23 "/></svg>',
      'slidenav-previous-large':
        '<svg width="25px" height="40px" viewBox="0 0 25 40" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="2" points="20.527,1.5 2,20.024 20.525,38.547 "/></svg>',
    },
    Dn = {
      install: function (r) {
        r.icon.add = function (t, e) {
          var i,
            n = g(t) ? (((i = {})[t] = e), i) : t;
          St(n, function (t, e) {
            (zn[e] = t), delete Fn[e];
          }),
            r._initialized &&
              Fe(document.body, function (t) {
                return St(r.getComponents(t), function (t) {
                  t.$options.isIcon && t.icon in n && t.$reset();
                });
              });
        };
      },
      extends: En,
      args: 'icon',
      props: ['icon'],
      data: { include: ['focusable'] },
      isIcon: !0,
      beforeConnect: function () {
        T(this.$el, 'uk-icon');
      },
      methods: {
        getSvg: function () {
          var t = (function (t) {
            if (!zn[t]) return null;
            Fn[t] ||
              (Fn[t] = s(
                (
                  zn[
                    (function (t) {
                      return c
                        ? kt(kt(t, 'left', 'right'), 'previous', 'next')
                        : t;
                    })(t)
                  ] || zn[t]
                ).trim()
              ));
            return Fn[t].cloneNode(!0);
          })(this.icon);
          return t ? S.resolve(t) : S.reject('Icon not found.');
        },
      },
    },
    Bn = {
      args: !1,
      extends: Dn,
      data: function (t) {
        return { icon: F(t.constructor.options.name) };
      },
      beforeConnect: function () {
        T(this.$el, this.$name);
      },
    },
    Pn = {
      extends: Bn,
      beforeConnect: function () {
        T(this.$el, 'uk-slidenav');
      },
      computed: {
        icon: function (t, e) {
          t = t.icon;
          return _(e, 'uk-slidenav-large') ? t + '-large' : t;
        },
      },
    },
    On = {
      extends: Bn,
      computed: {
        icon: function (t, e) {
          t = t.icon;
          return _(e, 'uk-search-icon') && he(e, '.uk-search-large').length
            ? 'search-large'
            : he(e, '.uk-search-navbar').length
            ? 'search-navbar'
            : t;
        },
      },
    },
    Hn = {
      extends: Bn,
      computed: {
        icon: function () {
          return 'close-' + (_(this.$el, 'uk-close-large') ? 'large' : 'icon');
        },
      },
    },
    Ln = {
      extends: Bn,
      connected: function () {
        var e = this;
        this.svg.then(function (t) {
          return 1 !== e.ratio && A(s('circle', t), 'strokeWidth', 1 / e.ratio);
        }, d);
      },
    },
    Fn = {};
  var jn = {
    args: 'dataSrc',
    props: {
      dataSrc: String,
      dataSrcset: Boolean,
      sizes: String,
      width: Number,
      height: Number,
      offsetTop: String,
      offsetLeft: String,
      target: String,
    },
    data: {
      dataSrc: '',
      dataSrcset: !1,
      sizes: !1,
      width: !1,
      height: !1,
      offsetTop: '50vh',
      offsetLeft: 0,
      target: !1,
    },
    computed: {
      cacheKey: function (t) {
        t = t.dataSrc;
        return this.$name + '.' + t;
      },
      width: function (t) {
        var e = t.width,
          t = t.dataWidth;
        return e || t;
      },
      height: function (t) {
        var e = t.height,
          t = t.dataHeight;
        return e || t;
      },
      sizes: function (t) {
        var e = t.sizes,
          t = t.dataSizes;
        return e || t;
      },
      isImg: function (t, e) {
        return Xn(e);
      },
      target: {
        get: function (t) {
          t = t.target;
          return [this.$el].concat(Wt(t, this.$el));
        },
        watch: function () {
          this.observe();
        },
      },
      offsetTop: function (t) {
        return wi(t.offsetTop, 'height');
      },
      offsetLeft: function (t) {
        return wi(t.offsetLeft, 'width');
      },
    },
    connected: function () {
      Jn[this.cacheKey]
        ? Wn(
            this.$el,
            Jn[this.cacheKey] || this.dataSrc,
            this.dataSrcset,
            this.sizes
          )
        : this.isImg &&
          this.width &&
          this.height &&
          Wn(
            this.$el,
            (function (t, e, i) {
              i &&
                ((i = At.ratio({ width: t, height: e }, 'width', wi(Rn(i)))),
                (t = i.width),
                (e = i.height));
              return (
                'data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="' +
                t +
                '" height="' +
                e +
                '"></svg>'
              );
            })(this.width, this.height, this.sizes)
          ),
        (this.observer = new Wi(this.load, {
          rootMargin: this.offsetTop + 'px ' + this.offsetLeft + 'px',
        })),
        requestAnimationFrame(this.observe);
    },
    disconnected: function () {
      this.observer.disconnect();
    },
    update: {
      read: function (t) {
        var e = this,
          t = t.image;
        if (
          (t ||
            'complete' !== document.readyState ||
            this.load(this.observer.takeRecords()),
          this.isImg)
        )
          return !1;
        t &&
          t.then(function (t) {
            return t && '' !== t.currentSrc && Wn(e.$el, Gn(t));
          });
      },
      write: function (t) {
        var e, i, n;
        this.dataSrcset &&
          1 !== window.devicePixelRatio &&
          ((e = A(this.$el, 'backgroundSize')).match(/^(auto\s?)+$/) ||
            b(e) === t.bgSize) &&
          ((t.bgSize =
            ((e = this.dataSrcset),
            (i = this.sizes),
            (n = wi(Rn(i))),
            (i = (e.match(Yn) || []).map(b).sort(function (t, e) {
              return t - e;
            })).filter(function (t) {
              return n <= t;
            })[0] ||
              i.pop() ||
              '')),
          A(this.$el, 'backgroundSize', t.bgSize + 'px'));
      },
      events: ['resize'],
    },
    methods: {
      load: function (t) {
        var e = this;
        t.some(function (t) {
          return w(t.isIntersecting) || t.isIntersecting;
        }) &&
          ((this._data.image = Se(
            this.dataSrc,
            this.dataSrcset,
            this.sizes
          ).then(
            function (t) {
              return (
                Wn(e.$el, Gn(t), t.srcset, t.sizes), (Jn[e.cacheKey] = Gn(t)), t
              );
            },
            function (t) {
              return $(e.$el, new t.constructor(t.type, t));
            }
          )),
          this.observer.disconnect());
      },
      observe: function () {
        var e = this;
        this._connected &&
          !this._data.image &&
          this.target.forEach(function (t) {
            return e.observer.observe(t);
          });
      },
    },
  };
  function Wn(t, e, i, n) {
    Xn(t)
      ? (n && (t.sizes = n), i && (t.srcset = i), e && (t.src = e))
      : e &&
        !v(t.style.backgroundImage, e) &&
        (A(t, 'backgroundImage', 'url(' + ie(e) + ')'), $(t, le('load', !1)));
  }
  var Vn = /\s*(.*?)\s*(\w+|calc\(.*?\))\s*(?:,|$)/g;
  function Rn(t) {
    var e, i;
    for (Vn.lastIndex = 0; (e = Vn.exec(t)); )
      if (!e[1] || window.matchMedia(e[1]).matches) {
        e = U((i = e[2]), 'calc')
          ? i
              .substring(5, i.length - 1)
              .replace(qn, function (t) {
                return wi(t);
              })
              .replace(/ /g, '')
              .match(Un)
              .reduce(function (t, e) {
                return t + +e;
              }, 0)
          : i;
        break;
      }
    return e || '100vw';
  }
  var qn = /\d+(?:\w+|%)/g,
    Un = /[+-]?(\d+)/g;
  var Yn = /\s+\d+w\s*(?:,|$)/g;
  function Xn(t) {
    return 'IMG' === t.tagName;
  }
  function Gn(t) {
    return t.currentSrc || t.src;
  }
  var Jn,
    Kn = '__test__';
  try {
    ((Jn = window.sessionStorage || {})[Kn] = 1), delete Jn[Kn];
  } catch (t) {
    Jn = {};
  }
  Kn = {
    props: { media: Boolean },
    data: { media: !1 },
    computed: {
      matchMedia: function () {
        var t = (function (t) {
          if (g(t))
            if ('@' === t[0]) t = b(Ke('breakpoint-' + t.substr(1)));
            else if (isNaN(t)) return t;
          return !(!t || isNaN(t)) && '(min-width: ' + t + 'px)';
        })(this.media);
        return !t || window.matchMedia(t).matches;
      },
    },
  };
  var Zn = {
      mixins: [t, Kn],
      props: { fill: String },
      data: {
        fill: '',
        clsWrapper: 'uk-leader-fill',
        clsHide: 'uk-leader-hide',
        attrFill: 'data-fill',
      },
      computed: {
        fill: function (t) {
          return t.fill || Ke('leader-fill-content');
        },
      },
      connected: function () {
        var t = Be(this.$el, '<span class="' + this.clsWrapper + '">');
        this.wrapper = t[0];
      },
      disconnected: function () {
        Pe(this.wrapper.childNodes);
      },
      update: {
        read: function (t) {
          var e,
            i = t.changed,
            t = t.width;
          return {
            width: (e = Math.floor(this.$el.offsetWidth / 2)),
            fill: this.fill,
            changed: i || t !== e,
            hide: !this.matchMedia,
          };
        },
        write: function (t) {
          C(this.wrapper, this.clsHide, t.hide),
            t.changed &&
              ((t.changed = !1),
              f(this.wrapper, this.attrFill, new Array(t.width).join(t.fill)));
        },
        events: ['resize'],
      },
    },
    Qn = {
      props: { container: Boolean },
      data: { container: !0 },
      computed: {
        container: function (t) {
          t = t.container;
          return (!0 === t && this.$container) || (t && s(t));
        },
      },
    },
    tr = [],
    er = {
      mixins: [t, Qn, rn],
      props: {
        selPanel: String,
        selClose: String,
        escClose: Boolean,
        bgClose: Boolean,
        stack: Boolean,
      },
      data: {
        cls: 'uk-open',
        escClose: !0,
        bgClose: !0,
        overlay: !0,
        stack: !1,
      },
      computed: {
        panel: function (t, e) {
          return s(t.selPanel, e);
        },
        transitionElement: function () {
          return this.panel;
        },
        bgClose: function (t) {
          return t.bgClose && this.panel;
        },
      },
      beforeDisconnect: function () {
        this.isToggled() && this.toggleElement(this.$el, !1, !1);
      },
      events: [
        {
          name: 'click',
          delegate: function () {
            return this.selClose;
          },
          handler: function (t) {
            t.preventDefault(), this.hide();
          },
        },
        {
          name: 'toggle',
          self: !0,
          handler: function (t) {
            t.defaultPrevented ||
              (t.preventDefault(),
              this.isToggled() === v(tr, this) && this.toggle());
          },
        },
        {
          name: 'beforeshow',
          self: !0,
          handler: function (t) {
            if (v(tr, this)) return !1;
            !this.stack && tr.length
              ? (S.all(
                  tr.map(function (t) {
                    return t.hide();
                  })
                ).then(this.show),
                t.preventDefault())
              : tr.push(this);
          },
        },
        {
          name: 'show',
          self: !0,
          handler: function () {
            var r = this;
            li(window) - li(document) &&
              this.overlay &&
              A(document.body, 'overflowY', 'scroll'),
              this.stack &&
                A(this.$el, 'zIndex', A(this.$el, 'zIndex') + tr.length),
              T(document.documentElement, this.clsPage),
              this.bgClose &&
                k(
                  this.$el,
                  'hide',
                  y(document, Pt, function (t) {
                    var n = t.target;
                    $t(tr) !== r ||
                      (r.overlay && !x(n, r.$el)) ||
                      x(n, r.panel) ||
                      k(
                        document,
                        Ht + ' ' + Ft + ' scroll',
                        function (t) {
                          var e = t.defaultPrevented,
                            i = t.type,
                            t = t.target;
                          e || i !== Ht || n !== t || r.hide();
                        },
                        !0
                      );
                  }),
                  { self: !0 }
                ),
              this.escClose &&
                k(
                  this.$el,
                  'hide',
                  y(document, 'keydown', function (t) {
                    27 === t.keyCode &&
                      $t(tr) === r &&
                      (t.preventDefault(), r.hide());
                  }),
                  { self: !0 }
                );
          },
        },
        {
          name: 'hidden',
          self: !0,
          handler: function () {
            var e = this;
            tr.splice(tr.indexOf(this), 1),
              tr.length || A(document.body, 'overflowY', ''),
              A(this.$el, 'zIndex', ''),
              tr.some(function (t) {
                return t.clsPage === e.clsPage;
              }) || E(document.documentElement, this.clsPage);
          },
        },
      ],
      methods: {
        toggle: function () {
          return this.isToggled() ? this.hide() : this.show();
        },
        show: function () {
          var e = this;
          return this.container && this.$el.parentNode !== this.container
            ? (I(this.container, this.$el),
              new S(function (t) {
                return requestAnimationFrame(function () {
                  return e.show().then(t);
                });
              }))
            : this.toggleElement(this.$el, !0, ir(this));
        },
        hide: function () {
          return this.toggleElement(this.$el, !1, ir(this));
        },
      },
    };
  function ir(t) {
    var s = t.transitionElement,
      a = t._toggle;
    return function (r, o) {
      return new S(function (i, n) {
        return k(r, 'show hide', function () {
          r._reject && r._reject(), (r._reject = n), a(r, o);
          var t = k(
              s,
              'transitionstart',
              function () {
                k(s, 'transitionend transitioncancel', i, { self: !0 }),
                  clearTimeout(e);
              },
              { self: !0 }
            ),
            e = setTimeout(function () {
              t(), i();
            }, xt(A(s, 'transitionDuration')));
        });
      });
    };
  }
  var yn = {
      mixins: [t, yn],
      props: {
        dropdown: String,
        mode: 'list',
        align: String,
        offset: Number,
        boundary: Boolean,
        boundaryAlign: Boolean,
        clsDrop: String,
        delayShow: Number,
        delayHide: Number,
        dropbar: Boolean,
        dropbarMode: String,
        dropbarAnchor: Boolean,
        duration: Number,
      },
      data: {
        dropdown: '.uk-navbar-nav > li',
        align: c ? 'right' : 'left',
        clsDrop: 'uk-navbar-dropdown',
        mode: void 0,
        offset: void 0,
        delayShow: void 0,
        delayHide: void 0,
        boundaryAlign: void 0,
        flip: 'x',
        boundary: !0,
        dropbar: !1,
        dropbarMode: 'slide',
        dropbarAnchor: !1,
        duration: 200,
        forceHeight: !0,
        selMinHeight:
          '.uk-navbar-nav > li > a, .uk-navbar-item, .uk-navbar-toggle',
      },
      computed: {
        boundary: function (t, e) {
          var i = t.boundary,
            t = t.boundaryAlign;
          return !0 === i || t ? e : i;
        },
        dropbarAnchor: function (t, e) {
          return jt(t.dropbarAnchor, e);
        },
        pos: function (t) {
          return 'bottom-' + t.align;
        },
        dropbar: {
          get: function (t) {
            t = t.dropbar;
            return t
              ? this._dropbar ||
                  jt(t, this.$el) ||
                  s('+ .uk-navbar-dropbar', this.$el) ||
                  (this._dropbar = s('<div></div>'))
              : null;
          },
          watch: function (t) {
            T(t, 'uk-navbar-dropbar');
          },
          immediate: !0,
        },
        dropdowns: {
          get: function (t, e) {
            return h(t.dropdown + ' .' + t.clsDrop, e);
          },
          watch: function (t) {
            var e = this;
            this.$create(
              'drop',
              t.filter(function (t) {
                return !e.getDropdown(t);
              }),
              l({}, this.$props, {
                boundary: this.boundary,
                pos: this.pos,
                offset: this.dropbar || this.offset,
              })
            );
          },
          immediate: !0,
        },
      },
      disconnected: function () {
        this.dropbar && ze(this.dropbar), delete this._dropbar;
      },
      events: [
        {
          name: 'mouseover',
          delegate: function () {
            return this.dropdown;
          },
          handler: function (t) {
            var t = t.current,
              e = this.getActive();
            e &&
              e.toggle &&
              !x(e.toggle.$el, t) &&
              !e.tracker.movesTo(e.$el) &&
              e.hide(!1);
          },
        },
        {
          name: 'mouseleave',
          el: function () {
            return this.dropbar;
          },
          handler: function () {
            var t = this.getActive();
            t &&
              !this.dropdowns.some(function (t) {
                return p(t, ':hover');
              }) &&
              t.hide();
          },
        },
        {
          name: 'beforeshow',
          capture: !0,
          filter: function () {
            return this.dropbar;
          },
          handler: function () {
            this.dropbar.parentNode ||
              Ne(this.dropbarAnchor || this.$el, this.dropbar);
          },
        },
        {
          name: 'show',
          filter: function () {
            return this.dropbar;
          },
          handler: function (t, e) {
            var i = e.$el,
              e = e.dir;
            C(
              this.dropbar,
              'uk-navbar-dropbar-slide',
              'slide' === this.dropbarMode ||
                he(this.$el).some(function (t) {
                  return 'static' !== A(t, 'position');
                })
            ),
              this.clsDrop && T(i, this.clsDrop + '-dropbar'),
              'bottom' === e &&
                this.transitionTo(
                  i.offsetHeight +
                    b(A(i, 'marginTop')) +
                    b(A(i, 'marginBottom')),
                  i
                );
          },
        },
        {
          name: 'beforehide',
          filter: function () {
            return this.dropbar;
          },
          handler: function (t, e) {
            var e = e.$el,
              i = this.getActive();
            p(this.dropbar, ':hover') && i && i.$el === e && t.preventDefault();
          },
        },
        {
          name: 'hide',
          filter: function () {
            return this.dropbar;
          },
          handler: function (t, e) {
            var e = e.$el,
              i = this.getActive();
            (i && i.$el !== e) || this.transitionTo(0);
          },
        },
      ],
      methods: {
        getActive: function () {
          var t = this.dropdowns.map(this.getDropdown).filter(function (t) {
            return t && t.isActive();
          })[0];
          return t && v(t.mode, 'hover') && x(t.toggle.$el, this.$el) && t;
        },
        transitionTo: function (t, e) {
          var i = this,
            n = this.dropbar,
            r = m(n) ? z(n) : 0;
          return (
            A(
              (e = r < t && e),
              'clip',
              'rect(0,' + e.offsetWidth + 'px,' + r + 'px,0)'
            ),
            z(n, r),
            N.cancel([e, n]),
            S.all([
              N.start(n, { height: t }, this.duration),
              N.start(
                e,
                { clip: 'rect(0,' + e.offsetWidth + 'px,' + t + 'px,0)' },
                this.duration
              ),
            ])
              .catch(d)
              .then(function () {
                A(e, { clip: '' }), i.$update(n);
              })
          );
        },
        getDropdown: function (t) {
          return (
            this.$getComponent(t, 'drop') || this.$getComponent(t, 'dropdown')
          );
        },
      },
    },
    nr = {
      mixins: [er],
      args: 'mode',
      props: { mode: String, flip: Boolean, overlay: Boolean },
      data: {
        mode: 'slide',
        flip: !1,
        overlay: !1,
        clsPage: 'uk-offcanvas-page',
        clsContainer: 'uk-offcanvas-container',
        selPanel: '.uk-offcanvas-bar',
        clsFlip: 'uk-offcanvas-flip',
        clsContainerAnimation: 'uk-offcanvas-container-animation',
        clsSidebarAnimation: 'uk-offcanvas-bar-animation',
        clsMode: 'uk-offcanvas',
        clsOverlay: 'uk-offcanvas-overlay',
        selClose: '.uk-offcanvas-close',
        container: !1,
      },
      computed: {
        clsFlip: function (t) {
          var e = t.flip,
            t = t.clsFlip;
          return e ? t : '';
        },
        clsOverlay: function (t) {
          var e = t.overlay,
            t = t.clsOverlay;
          return e ? t : '';
        },
        clsMode: function (t) {
          var e = t.mode;
          return t.clsMode + '-' + e;
        },
        clsSidebarAnimation: function (t) {
          var e = t.mode,
            t = t.clsSidebarAnimation;
          return 'none' === e || 'reveal' === e ? '' : t;
        },
        clsContainerAnimation: function (t) {
          var e = t.mode,
            t = t.clsContainerAnimation;
          return 'push' !== e && 'reveal' !== e ? '' : t;
        },
        transitionElement: function (t) {
          return 'reveal' === t.mode ? this.panel.parentNode : this.panel;
        },
      },
      events: [
        {
          name: 'click',
          delegate: function () {
            return 'a[href^="#"]';
          },
          handler: function (t) {
            var e = t.current.hash;
            !t.defaultPrevented && e && s(e, document.body) && this.hide();
          },
        },
        {
          name: 'touchstart',
          passive: !0,
          el: function () {
            return this.panel;
          },
          handler: function (t) {
            t = t.targetTouches;
            1 === t.length && (this.clientY = t[0].clientY);
          },
        },
        {
          name: 'touchmove',
          self: !0,
          passive: !1,
          filter: function () {
            return this.overlay;
          },
          handler: function (t) {
            t.cancelable && t.preventDefault();
          },
        },
        {
          name: 'touchmove',
          passive: !1,
          el: function () {
            return this.panel;
          },
          handler: function (t) {
            var e, i, n, r;
            1 === t.targetTouches.length &&
              ((e = event.targetTouches[0].clientY - this.clientY),
              (i = (r = this.panel).scrollTop),
              (n = r.scrollHeight) <= (r = r.clientHeight) ||
                (0 === i && 0 < e) ||
                (n - i <= r && e < 0)) &&
              t.cancelable &&
              t.preventDefault();
          },
        },
        {
          name: 'show',
          self: !0,
          handler: function () {
            'reveal' !== this.mode ||
              _(this.panel.parentNode, this.clsMode) ||
              (De(this.panel, '<div>'), T(this.panel.parentNode, this.clsMode)),
              A(
                document.documentElement,
                'overflowY',
                this.overlay ? 'hidden' : ''
              ),
              T(document.body, this.clsContainer, this.clsFlip),
              A(document.body, 'touch-action', 'pan-y pinch-zoom'),
              A(this.$el, 'display', 'block'),
              T(this.$el, this.clsOverlay),
              T(
                this.panel,
                this.clsSidebarAnimation,
                'reveal' !== this.mode ? this.clsMode : ''
              ),
              z(document.body),
              T(document.body, this.clsContainerAnimation),
              this.clsContainerAnimation &&
                (rr().content += ',user-scalable=0');
          },
        },
        {
          name: 'hide',
          self: !0,
          handler: function () {
            E(document.body, this.clsContainerAnimation),
              A(document.body, 'touch-action', '');
          },
        },
        {
          name: 'hidden',
          self: !0,
          handler: function () {
            var t;
            this.clsContainerAnimation &&
              ((t = rr()).content = t.content.replace(/,user-scalable=0$/, '')),
              'reveal' === this.mode && Pe(this.panel),
              E(this.panel, this.clsSidebarAnimation, this.clsMode),
              E(this.$el, this.clsOverlay),
              A(this.$el, 'display', ''),
              E(document.body, this.clsContainer, this.clsFlip),
              A(document.documentElement, 'overflowY', '');
          },
        },
        {
          name: 'swipeLeft swipeRight',
          handler: function (t) {
            this.isToggled() && X(t.type, 'Left') ^ this.flip && this.hide();
          },
        },
      ],
    };
  function rr() {
    return (
      s('meta[name="viewport"]', document.head) ||
      I(document.head, '<meta name="viewport">')
    );
  }
  var or = {
      mixins: [t],
      props: { selContainer: String, selContent: String },
      data: { selContainer: '.uk-modal', selContent: '.uk-modal-dialog' },
      computed: {
        container: function (t, e) {
          return Qt(e, t.selContainer);
        },
        content: function (t, e) {
          return Qt(e, t.selContent);
        },
      },
      connected: function () {
        A(this.$el, 'minHeight', 150);
      },
      update: {
        read: function () {
          return (
            !(!this.content || !this.container) && {
              current: b(A(this.$el, 'maxHeight')),
              max: Math.max(
                150,
                z(this.container) - (M(this.content).height - z(this.$el))
              ),
            }
          );
        },
        write: function (t) {
          var e = t.current,
            t = t.max;
          A(this.$el, 'maxHeight', t),
            Math.round(e) !== Math.round(t) && $(this.$el, 'resize');
        },
        events: ['resize'],
      },
    },
    sr = {
      props: { offset: Number },
      data: { offset: 0 },
      methods: {
        scrollTo: function (t) {
          var e = this;
          (t = (t && s(t)) || document.body),
            $(this.$el, 'beforescroll', [this, t]) &&
              Pi(t, { offset: this.offset }).then(function () {
                return $(e.$el, 'scrolled', [e, t]);
              });
        },
      },
      events: {
        click: function (t) {
          t.defaultPrevented ||
            (t.preventDefault(),
            this.scrollTo(ie(decodeURIComponent(this.$el.hash)).substr(1)));
        },
      },
    },
    ar = {
      args: 'cls',
      props: {
        cls: String,
        target: String,
        hidden: Boolean,
        offsetTop: Number,
        offsetLeft: Number,
        repeat: Boolean,
        delay: Number,
      },
      data: function () {
        return {
          cls: !1,
          target: !1,
          hidden: !0,
          offsetTop: 0,
          offsetLeft: 0,
          repeat: !1,
          delay: 0,
          inViewClass: 'uk-scrollspy-inview',
        };
      },
      computed: {
        elements: {
          get: function (t, e) {
            t = t.target;
            return t ? h(t, e) : [e];
          },
          watch: function (t) {
            this.hidden &&
              A(
                ae(t, ':not(.' + this.inViewClass + ')'),
                'visibility',
                'hidden'
              );
          },
          immediate: !0,
        },
      },
      update: [
        {
          read: function (t) {
            var i = this;
            t.update &&
              this.elements.forEach(function (t) {
                var e = t._ukScrollspyState;
                ((e = e || { cls: zt(t, 'uk-scrollspy-class') || i.cls }).show =
                  Di(t, i.offsetTop, i.offsetLeft)),
                  (t._ukScrollspyState = e);
              });
          },
          write: function (n) {
            var r = this;
            if (!n.update) return this.$emit(), (n.update = !0);
            this.elements.forEach(function (e) {
              function t(t) {
                A(e, 'visibility', !t && r.hidden ? 'hidden' : ''),
                  C(e, r.inViewClass, t),
                  C(e, i.cls),
                  $(e, t ? 'inview' : 'outview'),
                  (i.inview = t),
                  r.$update(e);
              }
              var i = e._ukScrollspyState;
              !i.show || i.inview || i.queued
                ? !i.show && i.inview && !i.queued && r.repeat && t(!1)
                : ((i.queued = !0),
                  (n.promise = (n.promise || S.resolve())
                    .then(function () {
                      return new S(function (t) {
                        return setTimeout(t, r.delay);
                      });
                    })
                    .then(function () {
                      t(!0),
                        setTimeout(function () {
                          (i.queued = !1), r.$emit();
                        }, 300);
                    })));
            });
          },
          events: ['scroll', 'resize'],
        },
      ],
    },
    hr = {
      props: {
        cls: String,
        closest: String,
        scroll: Boolean,
        overflow: Boolean,
        offset: Number,
      },
      data: {
        cls: 'uk-active',
        closest: !1,
        scroll: !1,
        overflow: !0,
        offset: 0,
      },
      computed: {
        links: {
          get: function (t, e) {
            return h('a[href^="#"]', e).filter(function (t) {
              return t.hash;
            });
          },
          watch: function (t) {
            this.scroll &&
              this.$create('scroll', t, { offset: this.offset || 0 });
          },
          immediate: !0,
        },
        targets: function () {
          return h(
            this.links
              .map(function (t) {
                return ie(t.hash).substr(1);
              })
              .join(',')
          );
        },
        elements: function (t) {
          t = t.closest;
          return Qt(this.links, t || '*');
        },
      },
      update: [
        {
          read: function () {
            var t,
              i,
              e,
              n,
              r = this,
              o = this.targets.length;
            return (
              !(!o || !m(this.$el)) &&
              ((t = (e = $t(Hi(this.targets[0]))).scrollTop),
              (e = e.scrollHeight - M((i = Li(e))).height),
              (n = !1),
              t === e
                ? (n = o - 1)
                : (this.targets.every(function (t, e) {
                    if (ui(t, i).top - r.offset <= 0) return (n = e), !0;
                  }),
                  !1 === n && this.overflow && (n = 0)),
              { active: n })
            );
          },
          write: function (t) {
            t = t.active;
            this.links.forEach(function (t) {
              return t.blur();
            }),
              E(this.elements, this.cls),
              !1 !== t &&
                $(this.$el, 'active', [t, T(this.elements[t], this.cls)]);
          },
          events: ['scroll', 'resize'],
        },
      ],
    },
    ur = {
      mixins: [t, Kn],
      props: {
        top: null,
        bottom: Boolean,
        offset: String,
        animation: String,
        clsActive: String,
        clsInactive: String,
        clsFixed: String,
        clsBelow: String,
        selTarget: String,
        widthElement: Boolean,
        showOnUp: Boolean,
        targetOffset: Number,
      },
      data: {
        top: 0,
        bottom: !1,
        offset: 0,
        animation: '',
        clsActive: 'uk-active',
        clsInactive: '',
        clsFixed: 'uk-sticky-fixed',
        clsBelow: 'uk-sticky-below',
        selTarget: '',
        widthElement: !1,
        showOnUp: !1,
        targetOffset: !1,
      },
      computed: {
        offset: function (t) {
          return wi(t.offset);
        },
        selTarget: function (t, e) {
          t = t.selTarget;
          return (t && s(t, e)) || e;
        },
        widthElement: function (t, e) {
          return jt(t.widthElement, e) || this.placeholder;
        },
        isActive: {
          get: function () {
            return _(this.selTarget, this.clsActive);
          },
          set: function (t) {
            t && !this.isActive
              ? (Ve(this.selTarget, this.clsInactive, this.clsActive),
                $(this.$el, 'active'))
              : t ||
                _(this.selTarget, this.clsInactive) ||
                (Ve(this.selTarget, this.clsActive, this.clsInactive),
                $(this.$el, 'inactive'));
          },
        },
      },
      connected: function () {
        (this.placeholder =
          s('+ .uk-sticky-placeholder', this.$el) ||
          s('<div class="uk-sticky-placeholder"></div>')),
          (this.isFixed = !1),
          (this.isActive = !1);
      },
      disconnected: function () {
        this.isFixed && (this.hide(), E(this.selTarget, this.clsInactive)),
          ze(this.placeholder),
          (this.placeholder = null),
          (this.widthElement = null);
      },
      events: [
        {
          name: 'load hashchange popstate',
          el: i && window,
          handler: function () {
            var n,
              r = this;
            !1 !== this.targetOffset &&
              location.hash &&
              0 < window.pageYOffset &&
              (n = s(location.hash)) &&
              D.read(function () {
                var t = M(n).top,
                  e = M(r.$el).top,
                  i = r.$el.offsetHeight;
                r.isFixed &&
                  t <= e + i &&
                  e <= t + n.offsetHeight &&
                  Bi(
                    window,
                    t - i - (pt(r.targetOffset) ? r.targetOffset : 0) - r.offset
                  );
              });
          },
        },
      ],
      update: [
        {
          read: function (t, e) {
            (t = t.height),
              this.isActive &&
                'update' !== e &&
                (this.hide(), (t = this.$el.offsetHeight), this.show()),
              (t = this.isActive ? t : this.$el.offsetHeight),
              (this.topOffset = M(
                this.isFixed ? this.placeholder : this.$el
              ).top),
              (this.bottomOffset = this.topOffset + t),
              (e = cr('bottom', this));
            return (
              (this.top =
                Math.max(b(cr('top', this)), this.topOffset) - this.offset),
              (this.bottom = e && e - this.$el.offsetHeight),
              (this.inactive = !this.matchMedia),
              {
                lastScroll: !1,
                height: t,
                margins: A(this.$el, [
                  'marginTop',
                  'marginBottom',
                  'marginLeft',
                  'marginRight',
                ]),
              }
            );
          },
          write: function (t) {
            var e = t.height,
              t = t.margins,
              i = this.placeholder;
            A(i, l({ height: e }, t)),
              x(i, document) || (Ne(this.$el, i), f(i, 'hidden', '')),
              (this.isActive = !!this.isActive);
          },
          events: ['resize'],
        },
        {
          read: function (t) {
            t = t.scroll;
            return (
              void 0 === t && (t = 0),
              (this.width = M(
                m(this.widthElement) ? this.widthElement : this.$el
              ).width),
              (this.scroll = window.pageYOffset),
              {
                dir: t <= this.scroll ? 'down' : 'up',
                scroll: this.scroll,
                visible: m(this.$el),
                top: ci(this.placeholder)[0],
              }
            );
          },
          write: function (t, e) {
            var i = this,
              n = t.initTimestamp,
              r = (void 0 === n && (n = 0), t.dir),
              o = t.lastDir,
              s = t.lastScroll,
              a = t.scroll,
              h = t.top,
              u = t.visible,
              c = performance.now();
            (t.lastScroll = a) < 0 ||
              a === s ||
              !u ||
              this.disabled ||
              (this.showOnUp && 'scroll' !== e) ||
              ((300 < c - n || r !== o) &&
                ((t.initScroll = a), (t.initTimestamp = c)),
              (t.lastDir = r),
              this.showOnUp &&
                !this.isFixed &&
                Math.abs(t.initScroll - a) <= 30 &&
                Math.abs(s - a) <= 10) ||
              (this.inactive ||
              a < this.top ||
              (this.showOnUp &&
                (a <= this.top ||
                  'down' === r ||
                  ('up' === r && !this.isFixed && a <= this.bottomOffset)))
                ? this.isFixed
                  ? ((this.isFixed = !1),
                    this.animation && a > this.topOffset
                      ? (oi.cancel(this.$el),
                        oi.out(this.$el, this.animation).then(function () {
                          return i.hide();
                        }, d))
                      : this.hide())
                  : oi.inProgress(this.$el) &&
                    a < h &&
                    (oi.cancel(this.$el), this.hide())
                : this.isFixed
                ? this.update()
                : this.animation
                ? (oi.cancel(this.$el),
                  this.show(),
                  oi.in(this.$el, this.animation).catch(d))
                : this.show());
          },
          events: ['resize', 'scroll'],
        },
      ],
      methods: {
        show: function () {
          (this.isFixed = !0),
            this.update(),
            f(this.placeholder, 'hidden', null);
        },
        hide: function () {
          (this.isActive = !1),
            E(this.$el, this.clsFixed, this.clsBelow),
            A(this.$el, { position: '', top: '', width: '' }),
            f(this.placeholder, 'hidden', '');
        },
        update: function () {
          var t = 0 !== this.top || this.scroll > this.top,
            e = Math.max(0, this.offset);
          pt(this.bottom) &&
            this.scroll > this.bottom - this.offset &&
            (e = this.bottom - this.scroll),
            A(this.$el, {
              position: 'fixed',
              top: e + 'px',
              width: this.width,
            }),
            (this.isActive = t),
            C(this.$el, this.clsBelow, this.scroll > this.bottomOffset),
            T(this.$el, this.clsFixed);
        },
      },
    };
  function cr(t, e) {
    var i = e.$props,
      n = e.$el,
      e = e[t + 'Offset'],
      i = i[t];
    if (i)
      return g(i) && i.match(/^-?\d/)
        ? e + wi(i)
        : M(!0 === i ? n.parentNode : jt(i, n)).bottom;
  }
  var lr,
    dr,
    fr,
    pr = {
      mixins: [rn],
      args: 'connect',
      props: {
        connect: String,
        toggle: String,
        active: Number,
        swiping: Boolean,
      },
      data: {
        connect: '~.uk-switcher',
        toggle: '> * > :first-child',
        active: 0,
        swiping: !0,
        cls: 'uk-active',
        clsContainer: 'uk-switcher',
        attrItem: 'uk-switcher-item',
      },
      computed: {
        connects: {
          get: function (t, e) {
            return Wt(t.connect, e);
          },
          watch: function (t) {
            var e = this;
            t.forEach(function (t) {
              return e.updateAria(t.children);
            }),
              this.swiping && A(t, 'touch-action', 'pan-y pinch-zoom');
          },
          immediate: !0,
        },
        toggles: {
          get: function (t, e) {
            return h(t.toggle, e).filter(function (t) {
              return !p(t, '.uk-disabled *, .uk-disabled, [disabled]');
            });
          },
          watch: function (t) {
            var e = this.index();
            this.show((~e && e) || t[this.active] || t[0]);
          },
          immediate: !0,
        },
        children: function () {
          var t = this;
          return ue(this.$el).filter(function (e) {
            return t.toggles.some(function (t) {
              return x(t, e);
            });
          });
        },
      },
      events: [
        {
          name: 'click',
          delegate: function () {
            return this.toggle;
          },
          handler: function (t) {
            v(this.toggles, t.current) &&
              (t.preventDefault(), this.show(t.current));
          },
        },
        {
          name: 'click',
          el: function () {
            return this.connects;
          },
          delegate: function () {
            return '[' + this.attrItem + '],[data-' + this.attrItem + ']';
          },
          handler: function (t) {
            t.preventDefault(), this.show(zt(t.current, this.attrItem));
          },
        },
        {
          name: 'swipeRight swipeLeft',
          filter: function () {
            return this.swiping;
          },
          el: function () {
            return this.connects;
          },
          handler: function (t) {
            t = t.type;
            this.show(X(t, 'Left') ? 'next' : 'previous');
          },
        },
      ],
      methods: {
        index: function () {
          var e = this;
          return tt(this.children, function (t) {
            return _(t, e.cls);
          });
        },
        show: function (t) {
          var i = this,
            n = this.index(),
            r = Ee(t, this.toggles, n);
          this.children.forEach(function (t, e) {
            C(t, i.cls, r === e), f(i.toggles[e], 'aria-expanded', r === e);
          }),
            this.connects.forEach(function (t) {
              var e = t.children;
              return i
                .toggleElement(
                  u(e).filter(function (t, e) {
                    return e !== r && i.isToggled(t);
                  }),
                  !1,
                  0 <= n
                )
                .then(function () {
                  return i.toggleElement(e[r], !0, 0 <= n);
                });
            });
        },
      },
    },
    mr = {
      mixins: [t],
      extends: pr,
      props: { media: Boolean },
      data: { media: 960, attrItem: 'uk-tab-item' },
      connected: function () {
        var t = _(this.$el, 'uk-tab-left')
          ? 'uk-tab-left'
          : !!_(this.$el, 'uk-tab-right') && 'uk-tab-right';
        t &&
          this.$create('toggle', this.$el, {
            cls: t,
            mode: 'media',
            media: this.media,
          });
      },
    },
    gr = {
      mixins: [Kn, rn],
      args: 'target',
      props: { href: String, target: null, mode: 'list', queued: Boolean },
      data: { href: !1, target: !1, mode: 'click', queued: !0 },
      computed: {
        target: {
          get: function (t, e) {
            var i = t.href;
            return ((t = Wt(t.target || i, e)).length && t) || [e];
          },
          watch: function () {
            $(this.target, 'updatearia', [this]);
          },
          immediate: !0,
        },
      },
      events: [
        {
          name: Lt + ' ' + e,
          filter: function () {
            return v(this.mode, 'hover');
          },
          handler: function (t) {
            ve(t) || this.toggle('toggle' + (t.type === Lt ? 'show' : 'hide'));
          },
        },
        {
          name: 'click',
          filter: function () {
            return v(this.mode, 'click') || (Bt && v(this.mode, 'hover'));
          },
          handler: function (t) {
            var e;
            (Qt(t.target, 'a[href="#"], a[href=""]') ||
              ((e = Qt(t.target, 'a[href]')) &&
                ((this.cls && !_(this.target, this.cls.split(' ')[0])) ||
                  !m(this.target) ||
                  (e.hash && p(this.target, e.hash))))) &&
              t.preventDefault(),
              this.toggle();
          },
        },
      ],
      update: {
        read: function () {
          return (
            !(!v(this.mode, 'media') || !this.media) && {
              match: this.matchMedia,
            }
          );
        },
        write: function (t) {
          var t = t.match,
            e = this.isToggled(this.target);
          (t ? !e : e) && this.toggle();
        },
        events: ['resize'],
      },
      methods: {
        toggle: function (t) {
          var e,
            i = this;
          $(this.target, t || 'toggle', [this]) &&
            (this.queued
              ? ((e = this.target.filter(this.isToggled)),
                this.toggleElement(e, !1).then(function () {
                  return i.toggleElement(
                    i.target.filter(function (t) {
                      return !v(e, t);
                    }),
                    !0
                  );
                }))
              : this.toggleElement(this.target));
        },
      },
    },
    hn =
      (St(
        Object.freeze({
          __proto__: null,
          Accordion: sn,
          Alert: hn,
          Cover: cn,
          Drop: fn,
          Dropdown: fn,
          FormCustom: pn,
          Gif: mn,
          Grid: xn,
          HeightMatch: kn,
          HeightViewport: In,
          Icon: Dn,
          Img: jn,
          Leader: Zn,
          Margin: gn,
          Modal: {
            install: function (t) {
              var a = t.modal;
              function n(t, e, i, n) {
                e = l({ bgClose: !1, escClose: !0, labels: a.labels }, e);
                var r = a.dialog(t(e), e),
                  o = new be(),
                  s = !1;
                return (
                  y(r.$el, 'submit', 'form', function (t) {
                    t.preventDefault(),
                      o.resolve(n && n(r)),
                      (s = !0),
                      r.hide();
                  }),
                  y(r.$el, 'hide', function () {
                    return !s && i(o);
                  }),
                  (o.promise.dialog = r),
                  o.promise
                );
              }
              (a.dialog = function (t, e) {
                var i = a(
                  '<div class="uk-modal"> <div class="uk-modal-dialog">' +
                    t +
                    '</div> </div>',
                  e
                );
                return (
                  i.show(),
                  y(
                    i.$el,
                    'hidden',
                    function () {
                      return S.resolve().then(function () {
                        return i.$destroy(!0);
                      });
                    },
                    { self: !0 }
                  ),
                  i
                );
              }),
                (a.alert = function (e, t) {
                  return n(
                    function (t) {
                      t = t.labels;
                      return (
                        '<div class="uk-modal-body">' +
                        (g(e) ? e : Ce(e)) +
                        '</div> <div class="uk-modal-footer uk-text-right"> <button class="uk-button uk-button-primary uk-modal-close" autofocus>' +
                        t.ok +
                        '</button> </div>'
                      );
                    },
                    t,
                    function (t) {
                      return t.resolve();
                    }
                  );
                }),
                (a.confirm = function (e, t) {
                  return n(
                    function (t) {
                      t = t.labels;
                      return (
                        '<form> <div class="uk-modal-body">' +
                        (g(e) ? e : Ce(e)) +
                        '</div> <div class="uk-modal-footer uk-text-right"> <button class="uk-button uk-button-default uk-modal-close" type="button">' +
                        t.cancel +
                        '</button> <button class="uk-button uk-button-primary" autofocus>' +
                        t.ok +
                        '</button> </div> </form>'
                      );
                    },
                    t,
                    function (t) {
                      return t.reject();
                    }
                  );
                }),
                (a.prompt = function (e, i, t) {
                  return n(
                    function (t) {
                      t = t.labels;
                      return (
                        '<form class="uk-form-stacked"> <div class="uk-modal-body"> <label>' +
                        (g(e) ? e : Ce(e)) +
                        '</label> <input class="uk-input" value="' +
                        (i || '') +
                        '" autofocus> </div> <div class="uk-modal-footer uk-text-right"> <button class="uk-button uk-button-default uk-modal-close" type="button">' +
                        t.cancel +
                        '</button> <button class="uk-button uk-button-primary">' +
                        t.ok +
                        '</button> </div> </form>'
                      );
                    },
                    t,
                    function (t) {
                      return t.resolve(null);
                    },
                    function (t) {
                      return s('input', t.$el).value;
                    }
                  );
                }),
                (a.labels = { ok: 'Ok', cancel: 'Cancel' });
            },
            mixins: [er],
            data: {
              clsPage: 'uk-modal-page',
              selPanel: '.uk-modal-dialog',
              selClose:
                '.uk-modal-close, .uk-modal-close-default, .uk-modal-close-outside, .uk-modal-close-full',
            },
            events: [
              {
                name: 'show',
                self: !0,
                handler: function () {
                  _(this.panel, 'uk-margin-auto-vertical')
                    ? T(this.$el, 'uk-flex')
                    : A(this.$el, 'display', 'block'),
                    z(this.$el);
                },
              },
              {
                name: 'hidden',
                self: !0,
                handler: function () {
                  A(this.$el, 'display', ''), E(this.$el, 'uk-flex');
                },
              },
            ],
          },
          Nav: {
            extends: sn,
            data: { targets: '> .uk-parent', toggle: '> a', content: '> ul' },
          },
          Navbar: yn,
          Offcanvas: nr,
          OverflowAuto: or,
          Responsive: {
            props: ['width', 'height'],
            connected: function () {
              T(this.$el, 'uk-responsive-width');
            },
            update: {
              read: function () {
                return (
                  !!(m(this.$el) && this.width && this.height) && {
                    width: li(this.$el.parentNode),
                    height: this.height,
                  }
                );
              },
              write: function (t) {
                z(
                  this.$el,
                  At.contain({ height: this.height, width: this.width }, t)
                    .height
                );
              },
              events: ['resize'],
            },
          },
          Scroll: sr,
          Scrollspy: ar,
          ScrollspyNav: hr,
          Sticky: ur,
          Svg: En,
          Switcher: pr,
          Tab: mr,
          Toggle: gr,
          Video: un,
          Close: Hn,
          Spinner: Ln,
          SlidenavNext: Pn,
          SlidenavPrevious: Pn,
          SearchIcon: On,
          Marker: Bn,
          NavbarToggleIcon: Bn,
          OverlayIcon: Bn,
          PaginationNext: Bn,
          PaginationPrevious: Bn,
          Totop: Bn,
        }),
        function (t, e) {
          return n.component(e, t);
        }
      ),
      n.use(function (r) {
        i &&
          Ie(function () {
            r.update(),
              y(window, 'load resize', function () {
                return r.update(null, 'resize');
              }),
              y(
                document,
                'loadedmetadata load',
                function (t) {
                  t = t.target;
                  return r.update(t, 'resize');
                },
                !0
              ),
              y(
                window,
                'scroll',
                function (t) {
                  e ||
                    ((e = !0),
                    D.write(function () {
                      return (e = !1);
                    }),
                    r.update(null, t.type));
                },
                { passive: !0, capture: !0 }
              );
            var e,
              i,
              n = 0;
            y(
              document,
              'animationstart',
              function (t) {
                t = t.target;
                (A(t, 'animationName') || '').match(/^uk-.*(left|right)/) &&
                  (n++,
                  A(document.body, 'overflowX', 'hidden'),
                  setTimeout(function () {
                    --n || A(document.body, 'overflowX', '');
                  }, xt(A(t, 'animationDuration')) + 100));
              },
              !0
            ),
              y(
                document,
                Pt,
                function (t) {
                  var s, a;
                  i && i(),
                    ve(t) &&
                      ((s = we(t)),
                      (a =
                        'tagName' in t.target ? t.target : t.target.parentNode),
                      (i = k(document, Ht + ' ' + Ft, function (t) {
                        var t = we(t),
                          r = t.x,
                          o = t.y;
                        ((a && r && 100 < Math.abs(s.x - r)) ||
                          (o && 100 < Math.abs(s.y - o))) &&
                          setTimeout(function () {
                            var t, e, i, n;
                            $(a, 'swipe'),
                              $(
                                a,
                                'swipe' +
                                  ((t = s.x),
                                  (e = s.y),
                                  (i = r),
                                  (n = o),
                                  Math.abs(t - i) >= Math.abs(e - n)
                                    ? 0 < t - i
                                      ? 'Left'
                                      : 'Right'
                                    : 0 < e - n
                                    ? 'Up'
                                    : 'Down')
                              );
                          });
                      })));
                },
                { passive: !0 }
              );
          });
      }),
      (dr = (lr = n).connect),
      (fr = lr.disconnect),
      i &&
        window.MutationObserver &&
        D.read(function () {
          document.body && Fe(document.body, dr);
          new MutationObserver(function (t) {
            var n = [];
            t.forEach(function (t) {
              var e, i;
              (e = n),
                (i = (t = t).target),
                ('attributes' !== t.type
                  ? function (t) {
                      for (
                        var e = t.addedNodes, i = t.removedNodes, n = 0;
                        n < e.length;
                        n++
                      )
                        Fe(e[n], dr);
                      for (var r = 0; r < i.length; r++) Fe(i[r], fr);
                      return 1;
                    }
                  : function (t) {
                      var e = t.target,
                        t = t.attributeName;
                      if ('href' === t) return 1;
                      var i = Vi(t);
                      if (i && i in lr)
                        return Nt(e, t)
                          ? (lr[i](e), !0)
                          : (t = lr.getComponent(e, i))
                          ? (t.$destroy(), !0)
                          : void 0;
                    })(t) &&
                  !e.some(function (t) {
                    return t.contains(i);
                  }) &&
                  e.push(i.contains ? i : i.parentNode);
            }),
              n.forEach(function (t) {
                return lr.update(t);
              });
          }).observe(document, {
            childList: !0,
            subtree: !0,
            characterData: !0,
            attributes: !0,
          }),
            (lr._initialized = !0);
        }),
      {
        mixins: [t],
        props: { date: String, clsWrapper: String },
        data: { date: '', clsWrapper: '.uk-countdown-%unit%' },
        computed: {
          date: function (t) {
            t = t.date;
            return Date.parse(t);
          },
          days: function (t, e) {
            return s(t.clsWrapper.replace('%unit%', 'days'), e);
          },
          hours: function (t, e) {
            return s(t.clsWrapper.replace('%unit%', 'hours'), e);
          },
          minutes: function (t, e) {
            return s(t.clsWrapper.replace('%unit%', 'minutes'), e);
          },
          seconds: function (t, e) {
            return s(t.clsWrapper.replace('%unit%', 'seconds'), e);
          },
          units: function () {
            var e = this;
            return ['days', 'hours', 'minutes', 'seconds'].filter(function (t) {
              return e[t];
            });
          },
        },
        connected: function () {
          this.start();
        },
        disconnected: function () {
          var e = this;
          this.stop(),
            this.units.forEach(function (t) {
              return _e(e[t]);
            });
        },
        events: [
          {
            name: 'visibilitychange',
            el: i && document,
            handler: function () {
              document.hidden ? this.stop() : this.start();
            },
          },
        ],
        update: {
          write: function () {
            var n = this,
              r = (function (t) {
                t -= Date.now();
                return {
                  total: t,
                  seconds: (t / 1e3) % 60,
                  minutes: (t / 1e3 / 60) % 60,
                  hours: (t / 1e3 / 60 / 60) % 24,
                  days: t / 1e3 / 60 / 60 / 24,
                };
              })(this.date);
            r.total <= 0 &&
              (this.stop(), (r.days = r.hours = r.minutes = r.seconds = 0)),
              this.units.forEach(function (t) {
                var e = (e = String(Math.floor(r[t]))).length < 2 ? '0' + e : e,
                  i = n[t];
                i.textContent !== e &&
                  ((e = e.split('')).length !== i.children.length &&
                    Ce(
                      i,
                      e
                        .map(function () {
                          return '<span></span>';
                        })
                        .join('')
                    ),
                  e.forEach(function (t, e) {
                    return (i.children[e].textContent = t);
                  }));
              });
          },
        },
        methods: {
          start: function () {
            this.stop(),
              this.date &&
                this.units.length &&
                (this.$update(), (this.timer = setInterval(this.$update, 1e3)));
          },
          stop: function () {
            this.timer && (clearInterval(this.timer), (this.timer = null));
          },
        },
      });
  var vr,
    wr = 'uk-animation-target',
    cn = {
      props: { animation: Number },
      data: { animation: 150 },
      computed: {
        target: function () {
          return this.$el;
        },
      },
      methods: {
        animate: function (t) {
          var i = this,
            n =
              (vr ||
                (vr = I(document.head, '<style>').sheet).insertRule(
                  '.' +
                    wr +
                    ' > * {\n            margin-top: 0 !important;\n            transform: none !important;\n        }',
                  0
                ),
              ue(this.target)),
            r = n.map(function (t) {
              return br(t, !0);
            }),
            e = z(this.target),
            o = window.pageYOffset,
            t =
              (t(),
              N.cancel(this.target),
              n.forEach(N.cancel),
              xr(this.target),
              this.$update(this.target, 'resize'),
              D.flush(),
              z(this.target)),
            s = (n = n.concat(
              ue(this.target).filter(function (t) {
                return !v(n, t);
              })
            )).map(function (t, e) {
              return (
                !!(t.parentNode && e in r) &&
                (r[e]
                  ? m(t)
                    ? yr(t)
                    : { opacity: 0 }
                  : { opacity: m(t) ? 1 : 0 })
              );
            }),
            r = s.map(function (t, e) {
              e = n[e].parentNode === i.target && (r[e] || br(n[e]));
              return (
                e &&
                  (t
                    ? 'opacity' in t ||
                      (e.opacity % 1 ? (t.opacity = 1) : delete e.opacity)
                    : delete e.opacity),
                e
              );
            });
          return (
            T(this.target, wr),
            n.forEach(function (t, e) {
              return r[e] && A(t, r[e]);
            }),
            A(this.target, { height: e, display: 'block' }),
            Bi(window, o),
            S.all(
              n
                .map(function (t, e) {
                  return (
                    ['top', 'left', 'height', 'width'].some(function (t) {
                      return r[e][t] !== s[e][t];
                    }) && N.start(t, s[e], i.animation, 'ease')
                  );
                })
                .concat(
                  e !== t &&
                    N.start(this.target, { height: t }, this.animation, 'ease')
                )
            ).then(function () {
              n.forEach(function (t, e) {
                return A(t, {
                  display: 0 === s[e].opacity ? 'none' : '',
                  zIndex: '',
                });
              }),
                xr(i.target),
                i.$update(i.target, 'resize'),
                D.flush();
            }, d)
          );
        },
      },
    };
  function br(t, e) {
    var i = A(t, 'zIndex');
    return (
      !!m(t) &&
      l(
        {
          display: '',
          opacity: e ? A(t, 'opacity') : '0',
          pointerEvents: 'none',
          position: 'absolute',
          zIndex: 'auto' === i ? Te(t) : i,
        },
        yr(t)
      )
    );
  }
  function xr(t) {
    A(t.children, {
      height: '',
      left: '',
      opacity: '',
      pointerEvents: '',
      position: '',
      top: '',
      width: '',
    }),
      E(t, wr),
      A(t, { height: '', display: '' });
  }
  function yr(t) {
    var e = M(t),
      i = e.height,
      e = e.width,
      t = ui(t);
    return { top: t.top, left: t.left, height: i, width: e };
  }
  fn = {
    mixins: [cn],
    args: 'target',
    props: { target: Boolean, selActive: Boolean },
    data: {
      target: null,
      selActive: !1,
      attrItem: 'uk-filter-control',
      cls: 'uk-active',
      animation: 250,
    },
    computed: {
      toggles: {
        get: function (t, e) {
          t.attrItem;
          return h('[' + this.attrItem + '],[data-' + this.attrItem + ']', e);
        },
        watch: function () {
          var e,
            i = this;
          this.updateState(),
            !1 !== this.selActive &&
              ((e = h(this.selActive, this.$el)),
              this.toggles.forEach(function (t) {
                return C(t, i.cls, v(e, t));
              }));
        },
        immediate: !0,
      },
      target: function (t, e) {
        return s(t.target, e);
      },
      children: {
        get: function () {
          return ue(this.target);
        },
        watch: function (t, e) {
          var i;
          (i = e),
            ((e = t).length === i.length &&
              e.every(function (t) {
                return ~i.indexOf(t);
              })) ||
              this.updateState();
        },
      },
    },
    events: [
      {
        name: 'click',
        delegate: function () {
          return '[' + this.attrItem + '],[data-' + this.attrItem + ']';
        },
        handler: function (t) {
          t.preventDefault(), this.apply(t.current);
        },
      },
    ],
    methods: {
      apply: function (t) {
        this.setState($r(t, this.attrItem, this.getState()));
      },
      getState: function () {
        var i = this;
        return this.toggles
          .filter(function (t) {
            return _(t, i.cls);
          })
          .reduce(
            function (t, e) {
              return $r(e, i.attrItem, t);
            },
            { filter: { '': '' }, sort: [] }
          );
      },
      setState: function (s, t) {
        function e() {
          (o = (o = s).filter),
            (e = ''),
            St(o, function (t) {
              return (e += t || '');
            });
          var e,
            i,
            n,
            r = e;
          h.forEach(function (t) {
            return A(t, 'display', r && !p(t, r) ? 'none' : '');
          });
          var t = (o = s.sort)[0],
            o = o[1];
          t &&
            ((i = t),
            (n = o),
            yt(
              (t = l([], h).sort(function (t, e) {
                return (
                  zt(t, i).localeCompare(zt(e, i), void 0, { numeric: !0 }) *
                  ('asc' === n || -1)
                );
              })),
              h
            ) ||
              t.forEach(function (t) {
                return I(a.target, t);
              }));
        }
        var a = this,
          h =
            (void 0 === t && (t = !0),
            (s = l({ filter: { '': '' }, sort: [] }, s)),
            $(this.$el, 'beforeFilter', [this, s]),
            this.children);
        this.toggles.forEach(function (t) {
          return C(
            t,
            a.cls,
            !!(function (t, e, i) {
              var n = i.filter;
              void 0 === n && (n = { '': '' });
              var i = i.sort,
                r = i[0],
                i = i[1],
                t = kr(t, e),
                e = t.filter;
              void 0 === e && (e = '');
              var o = t.group;
              void 0 === o && (o = '');
              var s = t.sort,
                t = t.order;
              void 0 === t && (t = 'asc');
              return w(s)
                ? (o in n && e === n[o]) || (!e && o && !(o in n) && !n[''])
                : r === s && i === t;
            })(t, a.attrItem, s)
          );
        });
        t
          ? this.animate(e).then(function () {
              return $(a.$el, 'afterFilter', [a]);
            })
          : (e(), $(this.$el, 'afterFilter', [this]));
      },
      updateState: function () {
        var t = this;
        D.write(function () {
          return t.setState(t.getState(), !1);
        });
      },
    },
  };
  function kr(t, e) {
    return Ai(zt(t, e), ['filter']);
  }
  function $r(t, e, i) {
    var t = kr(t, e),
      e = t.filter,
      n = t.group,
      r = t.sort,
      t = t.order;
    return (
      void 0 === t && (t = 'asc'),
      (e || w(r)) &&
        (n
          ? e
            ? (delete i.filter[''], (i.filter[n] = e))
            : (delete i.filter[n],
              (mt(i.filter) || '' in i.filter) && (i.filter = { '': e || '' }))
          : (i.filter = { '': e || '' })),
      w(r) || (i.sort = [r, t]),
      i
    );
  }
  pn = {
    slide: {
      show: function (t) {
        return [{ transform: O(-100 * t) }, { transform: O() }];
      },
      percent: Sr,
      translate: function (t, e) {
        return [
          { transform: O(-100 * e * t) },
          { transform: O(100 * e * (1 - t)) },
        ];
      },
    },
  };
  function Sr(t) {
    return Math.abs(A(t, 'transform').split(',')[4] / t.offsetWidth) || 0;
  }
  function O(t, e) {
    return (
      void 0 === t && (t = 0),
      void 0 === e && (e = '%'),
      (t += t ? e : ''),
      Dt ? 'translateX(' + t + ')' : 'translate3d(' + t + ', 0, 0)'
    );
  }
  function Ir(t) {
    return 'scale3d(' + t + ', ' + t + ', 1)';
  }
  var Tr = l({}, pn, {
    fade: {
      show: function () {
        return [{ opacity: 0 }, { opacity: 1 }];
      },
      percent: function (t) {
        return 1 - A(t, 'opacity');
      },
      translate: function (t) {
        return [{ opacity: 1 - t }, { opacity: t }];
      },
    },
    scale: {
      show: function () {
        return [
          { opacity: 0, transform: Ir(0.8) },
          { opacity: 1, transform: Ir(1) },
        ];
      },
      percent: function (t) {
        return 1 - A(t, 'opacity');
      },
      translate: function (t) {
        return [
          { opacity: 1 - t, transform: Ir(1 - 0.2 * t) },
          { opacity: t, transform: Ir(0.8 + 0.2 * t) },
        ];
      },
    },
  });
  function Er(t, e, i) {
    $(t, le(e, !1, !1, i));
  }
  mn = {
    mixins: [
      {
        props: {
          autoplay: Boolean,
          autoplayInterval: Number,
          pauseOnHover: Boolean,
        },
        data: { autoplay: !1, autoplayInterval: 7e3, pauseOnHover: !0 },
        connected: function () {
          this.autoplay && this.startAutoplay();
        },
        disconnected: function () {
          this.stopAutoplay();
        },
        update: function () {
          f(this.slides, 'tabindex', '-1');
        },
        events: [
          {
            name: 'visibilitychange',
            el: i && document,
            filter: function () {
              return this.autoplay;
            },
            handler: function () {
              document.hidden ? this.stopAutoplay() : this.startAutoplay();
            },
          },
        ],
        methods: {
          startAutoplay: function () {
            var t = this;
            this.stopAutoplay(),
              (this.interval = setInterval(function () {
                return (
                  (!t.draggable || !s(':focus', t.$el)) &&
                  (!t.pauseOnHover || !p(t.$el, ':hover')) &&
                  !t.stack.length &&
                  t.show('next')
                );
              }, this.autoplayInterval));
          },
          stopAutoplay: function () {
            this.interval && clearInterval(this.interval);
          },
        },
      },
      {
        props: { draggable: Boolean },
        data: { draggable: !0, threshold: 10 },
        created: function () {
          var n = this;
          ['start', 'move', 'end'].forEach(function (t) {
            var i = n[t];
            n[t] = function (t) {
              var e = we(t).x * (c ? -1 : 1);
              (n.prevPos = e !== n.pos ? n.pos : n.prevPos), (n.pos = e), i(t);
            };
          });
        },
        events: [
          {
            name: Pt,
            delegate: function () {
              return this.selSlides;
            },
            handler: function (t) {
              var e;
              !this.draggable ||
                (!ve(t) &&
                  !(e = t.target).children.length &&
                  e.childNodes.length) ||
                Qt(t.target, oe) ||
                0 < t.button ||
                this.length < 2 ||
                this.start(t);
            },
          },
          {
            name: 'touchmove',
            passive: !1,
            handler: 'move',
            filter: function () {
              return 'touchmove' == Ot;
            },
            delegate: function () {
              return this.selSlides;
            },
          },
          {
            name: 'dragstart',
            handler: function (t) {
              t.preventDefault();
            },
          },
        ],
        methods: {
          start: function () {
            var t = this,
              e =
                ((this.drag = this.pos),
                this._transitioner
                  ? ((this.percent = this._transitioner.percent()),
                    (this.drag +=
                      this._transitioner.getDistance() *
                      this.percent *
                      this.dir),
                    this._transitioner.cancel(),
                    this._transitioner.translate(this.percent),
                    (this.dragging = !0),
                    (this.stack = []))
                  : (this.prevIndex = this.index),
                'touchmove' != Ot
                  ? y(document, Ot, this.move, { passive: !1 })
                  : d);
            (this.unbindMove = function () {
              e(), (t.unbindMove = null);
            }),
              y(window, 'scroll', this.unbindMove),
              y(window.visualViewport, 'resize', this.unbindMove),
              y(document, Ht + ' ' + Ft, this.end, !0),
              A(this.list, 'userSelect', 'none');
          },
          move: function (t) {
            var e = this;
            if (this.unbindMove) {
              var i = this.pos - this.drag;
              if (
                !(
                  0 == i ||
                  this.prevPos === this.pos ||
                  (!this.dragging && Math.abs(i) < this.threshold)
                )
              ) {
                A(this.list, 'pointerEvents', 'none'),
                  t.cancelable && t.preventDefault(),
                  (this.dragging = !0),
                  (this.dir = i < 0 ? 1 : -1);
                for (
                  var n = this.slides,
                    r = this.prevIndex,
                    o = Math.abs(i),
                    s = this.getIndex(r + this.dir, r),
                    a = this._getDistance(r, s) || n[r].offsetWidth;
                  s !== r && a < o;

                )
                  (this.drag -= a * this.dir),
                    (r = s),
                    (o -= a),
                    (s = this.getIndex(r + this.dir, r)),
                    (a = this._getDistance(r, s) || n[r].offsetWidth);
                this.percent = o / a;
                var h,
                  t = n[r],
                  i = n[s],
                  u = this.index !== s,
                  c = r === s;
                [this.index, this.prevIndex]
                  .filter(function (t) {
                    return !v([s, r], t);
                  })
                  .forEach(function (t) {
                    $(n[t], 'itemhidden', [e]),
                      c && ((h = !0), (e.prevIndex = r));
                  }),
                  ((this.index === r && this.prevIndex !== r) || h) &&
                    $(n[this.index], 'itemshown', [this]),
                  u &&
                    ((this.prevIndex = r),
                    (this.index = s),
                    c || $(t, 'beforeitemhide', [this]),
                    $(i, 'beforeitemshow', [this])),
                  (this._transitioner = this._translate(
                    Math.abs(this.percent),
                    t,
                    !c && i
                  )),
                  u &&
                    (c || $(t, 'itemhide', [this]), $(i, 'itemshow', [this]));
              }
            }
          },
          end: function () {
            var t;
            ce(window, 'scroll', this.unbindMove),
              ce(window.visualViewport, 'resize', this.unbindMove),
              this.unbindMove && this.unbindMove(),
              ce(document, Ht, this.end, !0),
              this.dragging &&
                ((this.dragging = null),
                this.index === this.prevIndex
                  ? ((this.percent = 1 - this.percent),
                    (this.dir *= -1),
                    this._show(!1, this.index, !0),
                    (this._transitioner = null))
                  : ((t =
                      (c ? this.dir * (c ? 1 : -1) : this.dir) < 0 ==
                      this.prevPos > this.pos),
                    (this.index = t ? this.index : this.prevIndex),
                    t && (this.percent = 1 - this.percent),
                    this.show(
                      (0 < this.dir && !t) || (this.dir < 0 && t)
                        ? 'next'
                        : 'previous',
                      !0
                    ))),
              A(this.list, { userSelect: '', pointerEvents: '' }),
              (this.drag = this.percent = null);
          },
        },
      },
      {
        data: { selNav: !1 },
        computed: {
          nav: function (t, e) {
            return s(t.selNav, e);
          },
          selNavItem: function (t) {
            t = t.attrItem;
            return '[' + t + '],[data-' + t + ']';
          },
          navItems: function (t, e) {
            return h(this.selNavItem, e);
          },
        },
        update: {
          write: function () {
            var i = this;
            this.nav &&
              this.length !== this.nav.children.length &&
              Ce(
                this.nav,
                this.slides
                  .map(function (t, e) {
                    return (
                      '<li ' + i.attrItem + '="' + e + '"><a href></a></li>'
                    );
                  })
                  .join('')
              ),
              C(
                h(this.selNavItem, this.$el).concat(this.nav),
                'uk-hidden',
                !this.maxIndex
              ),
              this.updateNav();
          },
          events: ['resize'],
        },
        events: [
          {
            name: 'click',
            delegate: function () {
              return this.selNavItem;
            },
            handler: function (t) {
              t.preventDefault(), this.show(zt(t.current, this.attrItem));
            },
          },
          { name: 'itemshow', handler: 'updateNav' },
        ],
        methods: {
          updateNav: function () {
            var i = this,
              n = this.getValidIndex();
            this.navItems.forEach(function (t) {
              var e = zt(t, i.attrItem);
              C(t, i.clsActive, vt(e) === n),
                C(
                  t,
                  'uk-invisible',
                  i.finite &&
                    (('previous' === e && 0 === n) ||
                      ('next' === e && n >= i.maxIndex))
                );
            });
          },
        },
      },
    ],
    props: {
      clsActivated: Boolean,
      easing: String,
      index: Number,
      finite: Boolean,
      velocity: Number,
      selSlides: String,
    },
    data: function () {
      return {
        easing: 'ease',
        finite: !1,
        velocity: 1,
        index: 0,
        prevIndex: -1,
        stack: [],
        percent: 0,
        clsActive: 'uk-active',
        clsActivated: !1,
        Transitioner: !1,
        transitionOptions: {},
      };
    },
    connected: function () {
      (this.prevIndex = -1),
        (this.index = this.getValidIndex(this.index)),
        (this.stack = []);
    },
    disconnected: function () {
      E(this.slides, this.clsActive);
    },
    computed: {
      duration: function (t, e) {
        t = t.velocity;
        return _r(e.offsetWidth / t);
      },
      list: function (t, e) {
        return s(t.selList, e);
      },
      maxIndex: function () {
        return this.length - 1;
      },
      selSlides: function (t) {
        return t.selList + ' ' + (t.selSlides || '> *');
      },
      slides: {
        get: function () {
          return h(this.selSlides, this.$el);
        },
        watch: function () {
          this.$reset();
        },
      },
      length: function () {
        return this.slides.length;
      },
    },
    events: {
      itemshown: function () {
        this.$update(this.list);
      },
    },
    methods: {
      show: function (t, e) {
        var i = this;
        if ((void 0 === e && (e = !1), !this.dragging && this.length)) {
          var n = this.stack,
            r = e ? 0 : n.length,
            o = function () {
              n.splice(r, 1), n.length && i.show(n.shift(), !0);
            };
          if ((n[e ? 'unshift' : 'push'](t), !e && 1 < n.length))
            2 === n.length &&
              this._transitioner.forward(Math.min(this.duration, 200));
          else {
            var s,
              a = this.getIndex(this.index),
              h = _(this.slides, this.clsActive) && this.slides[a],
              u = this.getIndex(t, this.index),
              c = this.slides[u];
            if (h !== c) {
              if (
                ((this.dir =
                  ((s = a),
                  'next' !== (t = t) && ('previous' === t || t < s) ? -1 : 1)),
                (this.prevIndex = a),
                (this.index = u),
                (!h || $(h, 'beforeitemhide', [this])) &&
                  $(c, 'beforeitemshow', [this, h]))
              )
                return (
                  (t = this._show(h, c, e).then(function () {
                    return (
                      h && $(h, 'itemhidden', [i]),
                      $(c, 'itemshown', [i]),
                      new S(function (t) {
                        D.write(function () {
                          n.shift(),
                            n.length
                              ? i.show(n.shift(), !0)
                              : (i._transitioner = null),
                            t();
                        });
                      })
                    );
                  })),
                  h && $(h, 'itemhide', [this]),
                  $(c, 'itemshow', [this]),
                  t
                );
              this.index = this.prevIndex;
            }
            o();
          }
        }
      },
      getIndex: function (t, e) {
        return (
          void 0 === t && (t = this.index),
          void 0 === e && (e = this.index),
          Et(Ee(t, this.slides, e, this.finite), 0, this.maxIndex)
        );
      },
      getValidIndex: function (t, e) {
        return (
          void 0 === t && (t = this.index),
          void 0 === e && (e = this.prevIndex),
          this.getIndex(t, e)
        );
      },
      _show: function (t, e, i) {
        return (
          (this._transitioner = this._getTransitioner(
            t,
            e,
            this.dir,
            l(
              {
                easing: i
                  ? e.offsetWidth < 600
                    ? 'cubic-bezier(0.25, 0.46, 0.45, 0.94)'
                    : 'cubic-bezier(0.165, 0.84, 0.44, 1)'
                  : this.easing,
              },
              this.transitionOptions
            )
          )),
          i || t
            ? ((e = this.stack.length),
              this._transitioner[1 < e ? 'forward' : 'show'](
                1 < e
                  ? Math.min(this.duration, 75 + 75 / (e - 1))
                  : this.duration,
                this.percent
              ))
            : (this._translate(1), S.resolve())
        );
      },
      _getDistance: function (t, e) {
        return this._getTransitioner(t, t !== e && e).getDistance();
      },
      _translate: function (t, e, i) {
        void 0 === e && (e = this.prevIndex), void 0 === i && (i = this.index);
        e = this._getTransitioner(e !== i && e, i);
        return e.translate(t), e;
      },
      _getTransitioner: function (t, e, i, n) {
        return (
          void 0 === t && (t = this.prevIndex),
          void 0 === e && (e = this.index),
          void 0 === i && (i = this.dir || 1),
          void 0 === n && (n = this.transitionOptions),
          new this.Transitioner(
            ft(t) ? this.slides[t] : t,
            ft(e) ? this.slides[e] : e,
            i * (c ? -1 : 1),
            n
          )
        );
      },
    },
  };
  function _r(t) {
    return 0.5 * t + 300;
  }
  var xn = {
      mixins: [mn],
      props: { animation: String },
      data: {
        animation: 'slide',
        clsActivated: 'uk-transition-active',
        Animations: pn,
        Transitioner: function (r, o, s, t) {
          var e = t.animation,
            a = t.easing,
            i = e.percent,
            n = e.translate,
            h = (t = void 0 === (t = e.show) ? d : t)(s),
            u = new be();
          return {
            dir: s,
            show: function (t, e, i) {
              var n = this,
                i = (void 0 === e && (e = 0), i ? 'linear' : a);
              return (
                (t -= Math.round(t * Et(e, -1, 1))),
                this.translate(e),
                Er(o, 'itemin', { percent: e, duration: t, timing: i, dir: s }),
                Er(r, 'itemout', {
                  percent: 1 - e,
                  duration: t,
                  timing: i,
                  dir: s,
                }),
                S.all([N.start(o, h[1], t, i), N.start(r, h[0], t, i)]).then(
                  function () {
                    n.reset(), u.resolve();
                  },
                  d
                ),
                u.promise
              );
            },
            stop: function () {
              return N.stop([o, r]);
            },
            cancel: function () {
              N.cancel([o, r]);
            },
            reset: function () {
              for (var t in h[0]) A([o, r], t, '');
            },
            forward: function (t, e) {
              return (
                void 0 === e && (e = this.percent()),
                N.cancel([o, r]),
                this.show(t, e, !0)
              );
            },
            translate: function (t) {
              this.reset();
              var e = n(t, s);
              A(o, e[1]),
                A(r, e[0]),
                Er(o, 'itemtranslatein', { percent: t, dir: s }),
                Er(r, 'itemtranslateout', { percent: 1 - t, dir: s });
            },
            percent: function () {
              return i(r || o, o, s);
            },
            getDistance: function () {
              return r && r.offsetWidth;
            },
          };
        },
      },
      computed: {
        animation: function (t) {
          var e = t.animation,
            t = t.Animations;
          return l(t[e] || t.slide, { name: e });
        },
        transitionOptions: function () {
          return { animation: this.animation };
        },
      },
      events: {
        'itemshow itemhide itemshown itemhidden': function (t) {
          t = t.target;
          this.$update(t);
        },
        beforeitemshow: function (t) {
          T(t.target, this.clsActive);
        },
        itemshown: function (t) {
          T(t.target, this.clsActivated);
        },
        itemhidden: function (t) {
          E(t.target, this.clsActive, this.clsActivated);
        },
      },
    },
    Cr = {
      mixins: [Qn, er, rn, xn],
      functional: !0,
      props: {
        delayControls: Number,
        preload: Number,
        videoAutoplay: Boolean,
        template: String,
      },
      data: function () {
        return {
          preload: 1,
          videoAutoplay: !1,
          delayControls: 3e3,
          items: [],
          cls: 'uk-open',
          clsPage: 'uk-lightbox-page',
          selList: '.uk-lightbox-items',
          attrItem: 'uk-lightbox-item',
          selClose: '.uk-close-large',
          selCaption: '.uk-lightbox-caption',
          pauseOnHover: !1,
          velocity: 2,
          Animations: Tr,
          template:
            '<div class="uk-lightbox uk-overflow-hidden"> <ul class="uk-lightbox-items"></ul> <div class="uk-lightbox-toolbar uk-position-top uk-text-right uk-transition-slide-top uk-transition-opaque"> <button class="uk-lightbox-toolbar-icon uk-close-large" type="button" uk-close></button> </div> <a class="uk-lightbox-button uk-position-center-left uk-position-medium uk-transition-fade" href uk-slidenav-previous uk-lightbox-item="previous"></a> <a class="uk-lightbox-button uk-position-center-right uk-position-medium uk-transition-fade" href uk-slidenav-next uk-lightbox-item="next"></a> <div class="uk-lightbox-toolbar uk-lightbox-caption uk-position-bottom uk-text-center uk-transition-slide-bottom uk-transition-opaque"></div> </div>',
        };
      },
      created: function () {
        var t = s(this.template),
          e = s(this.selList, t);
        this.items.forEach(function () {
          return I(e, '<li>');
        }),
          this.$mount(I(this.container, t));
      },
      computed: {
        caption: function (t, e) {
          t.selCaption;
          return s('.uk-lightbox-caption', e);
        },
      },
      events: [
        { name: Ot + ' ' + Pt + ' keydown', handler: 'showControls' },
        {
          name: 'click',
          self: !0,
          delegate: function () {
            return this.selSlides;
          },
          handler: function (t) {
            t.defaultPrevented || this.hide();
          },
        },
        {
          name: 'shown',
          self: !0,
          handler: function () {
            this.showControls();
          },
        },
        {
          name: 'hide',
          self: !0,
          handler: function () {
            this.hideControls(),
              E(this.slides, this.clsActive),
              N.stop(this.slides);
          },
        },
        {
          name: 'hidden',
          self: !0,
          handler: function () {
            this.$destroy(!0);
          },
        },
        {
          name: 'keyup',
          el: i && document,
          handler: function (t) {
            if (this.isToggled(this.$el) && this.draggable)
              switch (t.keyCode) {
                case 37:
                  this.show('previous');
                  break;
                case 39:
                  this.show('next');
              }
          },
        },
        {
          name: 'beforeitemshow',
          handler: function (t) {
            this.isToggled() ||
              ((this.draggable = !1),
              t.preventDefault(),
              this.toggleElement(this.$el, !0, !1),
              (this.animation = Tr.scale),
              E(t.target, this.clsActive),
              this.stack.splice(1, 0, this.index));
          },
        },
        {
          name: 'itemshow',
          handler: function () {
            Ce(this.caption, this.getItem().caption || '');
            for (var t = -this.preload; t <= this.preload; t++)
              this.loadItem(this.index + t);
          },
        },
        {
          name: 'itemshown',
          handler: function () {
            this.draggable = this.$props.draggable;
          },
        },
        {
          name: 'itemload',
          handler: function (t, i) {
            var n,
              r,
              e,
              o = this,
              s = i.source,
              a = i.type,
              h = i.alt,
              u = (void 0 === h && (h = ''), i.poster),
              c = i.attrs;
            void 0 === c && (c = {}),
              this.setItem(i, '<span uk-spinner></span>'),
              s &&
                ((r = {
                  frameborder: '0',
                  allow: 'autoplay',
                  allowfullscreen: '',
                  style: 'max-width: 100%; box-sizing: border-box;',
                  'uk-responsive': '',
                  'uk-video': '' + this.videoAutoplay,
                }),
                'image' === a || s.match(/\.(jpe?g|png|gif|svg|webp)($|\?)/i)
                  ? Se(s, c.srcset, c.size).then(
                      function (t) {
                        var e = t.width,
                          t = t.height;
                        return o.setItem(
                          i,
                          Ar(
                            'img',
                            l({ src: s, width: e, height: t, alt: h }, c)
                          )
                        );
                      },
                      function () {
                        return o.setError(i);
                      }
                    )
                  : 'video' === a || s.match(/\.(mp4|webm|ogv)($|\?)/i)
                  ? (y(
                      (e = Ar(
                        'video',
                        l(
                          {
                            src: s,
                            poster: u,
                            controls: '',
                            playsinline: '',
                            'uk-video': '' + this.videoAutoplay,
                          },
                          c
                        )
                      )),
                      'loadedmetadata',
                      function () {
                        f(e, { width: e.videoWidth, height: e.videoHeight }),
                          o.setItem(i, e);
                      }
                    ),
                    y(e, 'error', function () {
                      return o.setError(i);
                    }))
                  : 'iframe' === a || s.match(/\.(html|php)($|\?)/i)
                  ? this.setItem(
                      i,
                      Ar(
                        'iframe',
                        l(
                          {
                            src: s,
                            frameborder: '0',
                            allowfullscreen: '',
                            class: 'uk-lightbox-iframe',
                          },
                          c
                        )
                      )
                    )
                  : (n = s.match(
                      /\/\/(?:.*?youtube(-nocookie)?\..*?[?&]v=|youtu\.be\/)([\w-]{11})[&?]?(.*)?/
                    ))
                  ? this.setItem(
                      i,
                      Ar(
                        'iframe',
                        l(
                          {
                            src:
                              'https://www.youtube' +
                              (n[1] || '') +
                              '.com/embed/' +
                              n[2] +
                              (n[3] ? '?' + n[3] : ''),
                            width: 1920,
                            height: 1080,
                          },
                          r,
                          c
                        )
                      )
                    )
                  : (n = s.match(/\/\/.*?vimeo\.[a-z]+\/(\d+)[&?]?(.*)?/)) &&
                    $e(
                      'https://vimeo.com/api/oembed.json?maxwidth=1920&url=' +
                        encodeURI(s),
                      { responseType: 'json', withCredentials: !1 }
                    ).then(
                      function (t) {
                        var t = t.response,
                          e = t.height,
                          t = t.width;
                        return o.setItem(
                          i,
                          Ar(
                            'iframe',
                            l(
                              {
                                src:
                                  'https://player.vimeo.com/video/' +
                                  n[1] +
                                  (n[2] ? '?' + n[2] : ''),
                                width: t,
                                height: e,
                              },
                              r,
                              c
                            )
                          )
                        );
                      },
                      function () {
                        return o.setError(i);
                      }
                    ));
          },
        },
      ],
      methods: {
        loadItem: function (t) {
          void 0 === t && (t = this.index);
          t = this.getItem(t);
          this.getSlide(t).childElementCount || $(this.$el, 'itemload', [t]);
        },
        getItem: function (t) {
          return (
            void 0 === t && (t = this.index), this.items[Ee(t, this.slides)]
          );
        },
        setItem: function (t, e) {
          $(this.$el, 'itemloaded', [this, Ce(this.getSlide(t), e)]);
        },
        getSlide: function (t) {
          return this.slides[this.items.indexOf(t)];
        },
        setError: function (t) {
          this.setItem(t, '<span uk-icon="icon: bolt; ratio: 2"></span>');
        },
        showControls: function () {
          clearTimeout(this.controlsTimer),
            (this.controlsTimer = setTimeout(
              this.hideControls,
              this.delayControls
            )),
            T(this.$el, 'uk-active', 'uk-transition-active');
        },
        hideControls: function () {
          E(this.$el, 'uk-active', 'uk-transition-active');
        },
      },
    };
  function Ar(t, e) {
    t = Le('<' + t + '>');
    return f(t, e), t;
  }
  kn = {
    install: function (t, e) {
      t.lightboxPanel || t.component('lightboxPanel', Cr);
      l(e.props, t.component('lightboxPanel').options.props);
    },
    props: { toggle: String },
    data: { toggle: 'a' },
    computed: {
      toggles: {
        get: function (t, e) {
          return h(t.toggle, e);
        },
        watch: function () {
          this.hide();
        },
      },
    },
    disconnected: function () {
      this.hide();
    },
    events: [
      {
        name: 'click',
        delegate: function () {
          return this.toggle + ':not(.uk-disabled)';
        },
        handler: function (t) {
          t.preventDefault(), this.show(t.current);
        },
      },
    ],
    methods: {
      show: function (t) {
        var e,
          i = this,
          n = Tt(this.toggles.map(Nr), 'source');
        return (
          ct(t) &&
            ((e = Nr(t).source),
            (t = tt(n, function (t) {
              t = t.source;
              return e === t;
            }))),
          (this.panel =
            this.panel ||
            this.$create('lightboxPanel', l({}, this.$props, { items: n }))),
          y(this.panel.$el, 'hidden', function () {
            return (i.panel = !1);
          }),
          this.panel.show(t)
        );
      },
      hide: function () {
        return this.panel && this.panel.hide();
      },
    },
  };
  function Nr(e) {
    var i = {};
    return (
      ['href', 'caption', 'type', 'poster', 'alt', 'attrs'].forEach(function (
        t
      ) {
        i['href' === t ? 'source' : t] = zt(e, t);
      }),
      (i.attrs = Ai(i.attrs)),
      i
    );
  }
  Dn = {
    functional: !0,
    args: ['message', 'status'],
    data: {
      message: '',
      status: '',
      timeout: 5e3,
      group: null,
      pos: 'top-center',
      clsContainer: 'uk-notification',
      clsClose: 'uk-notification-close',
      clsMsg: 'uk-notification-message',
    },
    install: function (n) {
      n.notification.closeAll = function (e, i) {
        Fe(document.body, function (t) {
          t = n.getComponent(t, 'notification');
          !t || (e && e !== t.group) || t.close(i);
        });
      };
    },
    computed: {
      marginProp: function (t) {
        return 'margin' + (U(t.pos, 'top') ? 'Top' : 'Bottom');
      },
      startProps: function () {
        var t = { opacity: 0 };
        return (t[this.marginProp] = -this.$el.offsetHeight), t;
      },
    },
    created: function () {
      var t =
        s('.' + this.clsContainer + '-' + this.pos, this.$container) ||
        I(
          this.$container,
          '<div class="' +
            this.clsContainer +
            ' ' +
            this.clsContainer +
            '-' +
            this.pos +
            '" style="display: block"></div>'
        );
      this.$mount(
        I(
          t,
          '<div class="' +
            this.clsMsg +
            (this.status ? ' ' + this.clsMsg + '-' + this.status : '') +
            '"> <a href class="' +
            this.clsClose +
            '" data-uk-close></a> <div>' +
            this.message +
            '</div> </div>'
        )
      );
    },
    connected: function () {
      var t,
        e = this,
        i = b(A(this.$el, this.marginProp));
      N.start(
        A(this.$el, this.startProps),
        (((t = { opacity: 1 })[this.marginProp] = i), t)
      ).then(function () {
        e.timeout && (e.timer = setTimeout(e.close, e.timeout));
      });
    },
    events:
      (((In = {
        click: function (t) {
          Qt(t.target, 'a[href="#"],a[href=""]') && t.preventDefault(),
            this.close();
        },
      })[Lt] = function () {
        this.timer && clearTimeout(this.timer);
      }),
      (In[e] = function () {
        this.timeout && (this.timer = setTimeout(this.close, this.timeout));
      }),
      In),
    methods: {
      close: function (t) {
        function e() {
          var t = i.$el.parentNode;
          $(i.$el, 'close', [i]), ze(i.$el), t && !t.hasChildNodes() && ze(t);
        }
        var i = this;
        this.timer && clearTimeout(this.timer),
          t ? e() : N.start(this.$el, this.startProps).then(e);
      },
    },
  };
  var Mr = [
      'x',
      'y',
      'bgx',
      'bgy',
      'rotate',
      'scale',
      'color',
      'backgroundColor',
      'borderColor',
      'opacity',
      'blur',
      'hue',
      'grayscale',
      'invert',
      'saturate',
      'sepia',
      'fopacity',
      'stroke',
    ],
    jn = {
      mixins: [Kn],
      props: Mr.reduce(function (t, e) {
        return (t[e] = 'list'), t;
      }, {}),
      data: Mr.reduce(function (t, e) {
        return (t[e] = void 0), t;
      }, {}),
      computed: {
        props: function (f, p) {
          var m = this;
          return Mr.reduce(function (t, e) {
            if (!w(f[e])) {
              var i,
                n,
                r,
                o,
                s,
                a,
                h,
                u = e.match(/color/i),
                c = u || 'opacity' === e,
                l = f[e].slice(0),
                c =
                  (c && A(p, e, ''),
                  l.length < 2 &&
                    l.unshift(('scale' === e ? 1 : c ? A(p, e) : 0) || 0),
                  l.reduce(function (t, e) {
                    return (g(e) && e.replace(/-|\d/g, '').trim()) || t;
                  }, ''));
              if (
                (u
                  ? ((u = p.style.color),
                    (l = l.map(function (t) {
                      return A(A(p, 'color', t), 'color')
                        .split(/[(),]/g)
                        .slice(1, -1)
                        .concat(1)
                        .slice(0, 4)
                        .map(b);
                    })),
                    (p.style.color = u))
                  : U(e, 'bg')
                  ? ((r = 'bgy' === e ? 'height' : 'width'),
                    (l = l.map(function (t) {
                      return wi(t, r, m.$el);
                    })),
                    A(p, 'background-position-' + e[2], ''),
                    (n = A(p, 'backgroundPosition').split(' ')[
                      'x' === e[2] ? 0 : 1
                    ]),
                    (i = m.covers
                      ? ((o = Math.min.apply(Math, l)),
                        (s = Math.max.apply(Math, l)),
                        (a = l.indexOf(o) < l.indexOf(s)),
                        (h = s - o),
                        (l = l.map(function (t) {
                          return t - (a ? o : s);
                        })),
                        (a ? -h : 0) + 'px')
                      : n))
                  : (l = l.map(b)),
                'stroke' === e)
              ) {
                if (
                  !l.some(function (t) {
                    return t;
                  })
                )
                  return t;
                var d = Nn(m.$el);
                A(p, 'strokeDasharray', d),
                  (l = (l =
                    '%' === c
                      ? l.map(function (t) {
                          return (t * d) / 100;
                        })
                      : l).reverse()),
                  (e = 'strokeDashoffset');
              }
              t[e] = { steps: l, unit: c, pos: i, bgPos: n, diff: h };
            }
            return t;
          }, {});
        },
        bgProps: function () {
          var e = this;
          return ['bgx', 'bgy'].filter(function (t) {
            return t in e.props;
          });
        },
        covers: function (t, e) {
          return (
            (i = (e = e).style.backgroundSize),
            (n = 'cover' === A(A(e, 'backgroundSize', ''), 'backgroundSize')),
            (e.style.backgroundSize = i),
            n
          );
          var i, n;
        },
      },
      disconnected: function () {
        delete this._image;
      },
      update: {
        read: function (t) {
          var e,
            i,
            a,
            h,
            u,
            c = this;
          (t.active = this.matchMedia),
            t.active &&
              (!t.image &&
                this.covers &&
                this.bgProps.length &&
                (i = A(this.$el, 'backgroundImage').replace(
                  /^none|url\(["']?(.+?)["']?\)$/,
                  '$1'
                )) &&
                (((e = new Image()).src = i),
                (t.image = e).naturalWidth ||
                  (e.onload = function () {
                    return c.$update();
                  })),
              (i = t.image)) &&
              i.naturalWidth &&
              ((a = {
                width: this.$el.offsetWidth,
                height: this.$el.offsetHeight,
              }),
              (h = { width: i.naturalWidth, height: i.naturalHeight }),
              (u = At.cover(h, a)),
              this.bgProps.forEach(function (t) {
                var e,
                  i = c.props[t],
                  n = i.diff,
                  r = i.bgPos,
                  i = i.steps,
                  o = 'bgy' === t ? 'height' : 'width',
                  s = u[o] - a[o];
                s < n
                  ? (a[o] = u[o] + n - s)
                  : n < s &&
                    (e = a[o] / wi(r, o, c.$el)) &&
                    (c.props[t].steps = i.map(function (t) {
                      return t - (s - n) / e;
                    })),
                  (u = At.cover(h, a));
              }),
              (t.dim = u));
        },
        write: function (t) {
          var e = t.dim;
          t.active
            ? e &&
              A(this.$el, {
                backgroundSize: e.width + 'px ' + e.height + 'px',
                backgroundRepeat: 'no-repeat',
              })
            : A(this.$el, { backgroundSize: '', backgroundRepeat: '' });
        },
        events: ['resize'],
      },
      methods: {
        reset: function () {
          var i = this;
          St(this.getCss(0), function (t, e) {
            return A(i.$el, e, '');
          });
        },
        getCss: function (p) {
          var m = this.props;
          return Object.keys(m).reduce(
            function (t, e) {
              var i,
                n,
                r,
                o = m[e],
                s = o.steps,
                a = o.unit,
                h = o.pos,
                u =
                  (void 0 === n && (n = 2),
                  (i = (o = zr((o = s), (i = p)))[0]),
                  (r = o[1]),
                  (o = o[2]),
                  (ft(i)
                    ? i + Math.abs(i - r) * o * (i < r ? 1 : -1)
                    : +r
                  ).toFixed(n));
              switch (e) {
                case 'x':
                case 'y':
                  (a = a || 'px'),
                    (t.transform +=
                      ' translate' +
                      R(e) +
                      '(' +
                      b(u).toFixed('px' === a ? 0 : 2) +
                      a +
                      ')');
                  break;
                case 'rotate':
                  t.transform += ' rotate(' + (u + (a = a || 'deg')) + ')';
                  break;
                case 'scale':
                  t.transform += ' scale(' + u + ')';
                  break;
                case 'bgy':
                case 'bgx':
                  t['background-position-' + e[2]] =
                    'calc(' + h + ' + ' + u + 'px)';
                  break;
                case 'color':
                case 'backgroundColor':
                case 'borderColor':
                  var c = zr(s, p),
                    l = c[0],
                    d = c[1],
                    f = c[2];
                  t[e] =
                    'rgba(' +
                    l
                      .map(function (t, e) {
                        return (
                          (t += f * (d[e] - t)),
                          3 === e ? b(t) : parseInt(t, 10)
                        );
                      })
                      .join(',') +
                    ')';
                  break;
                case 'blur':
                  t.filter += ' blur(' + (u + (a = a || 'px')) + ')';
                  break;
                case 'hue':
                  t.filter += ' hue-rotate(' + (u + (a = a || 'deg')) + ')';
                  break;
                case 'fopacity':
                  t.filter += ' opacity(' + (u + (a = a || '%')) + ')';
                  break;
                case 'grayscale':
                case 'invert':
                case 'saturate':
                case 'sepia':
                  t.filter += ' ' + e + '(' + (u + (a = a || '%')) + ')';
                  break;
                default:
                  t[e] = u;
              }
              return t;
            },
            { transform: '', filter: '' }
          );
        },
      },
    };
  function zr(t, e) {
    var i = t.length - 1,
      n = Math.min(Math.floor(i * e), i - 1),
      t = t.slice(n, n + 2);
    return t.push(1 === e ? 1 : (e % (1 / i)) * i), t;
  }
  Zn = {
    mixins: [jn],
    props: { target: String, viewport: Number, easing: Number },
    data: { target: !1, viewport: 1, easing: 1 },
    computed: {
      target: function (t, e) {
        t = t.target;
        return (function t(e) {
          return e ? ('offsetTop' in e ? e : t(e.parentNode)) : document.body;
        })((t && jt(t, e)) || e);
      },
    },
    update: {
      read: function (t, e) {
        var i,
          n = t.percent;
        if (('scroll' !== e && (n = !1), t.active))
          return (
            (e = n),
            (t = Oi(this.target) / (this.viewport || 1)),
            (i = this.easing),
            {
              percent: (n = Et(t * (1 - (i - i * t)))),
              style: e !== n && this.getCss(n),
            }
          );
      },
      write: function (t) {
        var e = t.style;
        t.active ? e && A(this.$el, e) : this.reset();
      },
      events: ['scroll', 'resize'],
    },
  };
  gn = {
    update: {
      write: function () {
        var t;
        this.stack.length ||
          this.dragging ||
          ((t = this.getValidIndex(this.index)),
          ~this.prevIndex && this.index === t) ||
          this.show(t);
      },
      events: ['resize'],
    },
  };
  function Dr(t, e, i) {
    var n = Or(t, e);
    return i
      ? n - ((i = t), M(e).width / 2 - M(i).width / 2)
      : Math.min(n, Br(e));
  }
  function Br(t) {
    return Math.max(0, Pr(t) - M(t).width);
  }
  function Pr(t) {
    return Lr(t).reduce(function (t, e) {
      return M(e).width + t;
    }, 0);
  }
  function Or(t, e) {
    return (ui(t).left + (c ? M(t).width - M(e).width : 0)) * (c ? -1 : 1);
  }
  function Hr(t, e, i) {
    $(t, le(e, !1, !1, i));
  }
  function Lr(t) {
    return ue(t);
  }
  (sn = {
    mixins: [t, mn, gn],
    props: { center: Boolean, sets: Boolean },
    data: {
      center: !1,
      sets: !1,
      attrItem: 'uk-slider-item',
      selList: '.uk-slider-items',
      selNav: '.uk-slider-nav',
      clsContainer: 'uk-slider-container',
      Transitioner: function (n, r, o, t) {
        var e = t.center,
          s = t.easing,
          a = t.list,
          h = new be(),
          i = n ? Dr(n, a, e) : Dr(r, a, e) + M(r).width * o,
          u = r ? Dr(r, a, e) : i + M(n).width * o * (c ? -1 : 1);
        return {
          dir: o,
          show: function (t, e, i) {
            void 0 === e && (e = 0);
            i = i ? 'linear' : s;
            return (
              (t -= Math.round(t * Et(e, -1, 1))),
              this.translate(e),
              n && this.updateTranslates(),
              (e = n ? e : Et(e, 0, 1)),
              Hr(this.getItemIn(), 'itemin', {
                percent: e,
                duration: t,
                timing: i,
                dir: o,
              }),
              n &&
                Hr(this.getItemIn(!0), 'itemout', {
                  percent: 1 - e,
                  duration: t,
                  timing: i,
                  dir: o,
                }),
              N.start(a, { transform: O(-u * (c ? -1 : 1), 'px') }, t, i).then(
                h.resolve,
                d
              ),
              h.promise
            );
          },
          stop: function () {
            return N.stop(a);
          },
          cancel: function () {
            N.cancel(a);
          },
          reset: function () {
            A(a, 'transform', '');
          },
          forward: function (t, e) {
            return (
              void 0 === e && (e = this.percent()),
              N.cancel(a),
              this.show(t, e, !0)
            );
          },
          translate: function (t) {
            var e = this.getDistance() * o * (c ? -1 : 1);
            A(
              a,
              'transform',
              O(Et(e - e * t - u, -Pr(a), M(a).width) * (c ? -1 : 1), 'px')
            ),
              this.updateTranslates(),
              n &&
                ((t = Et(t, -1, 1)),
                Hr(this.getItemIn(), 'itemtranslatein', { percent: t, dir: o }),
                Hr(this.getItemIn(!0), 'itemtranslateout', {
                  percent: 1 - t,
                  dir: o,
                }));
          },
          percent: function () {
            return Math.abs(
              (A(a, 'transform').split(',')[4] * (c ? -1 : 1) + i) / (u - i)
            );
          },
          getDistance: function () {
            return Math.abs(u - i);
          },
          getItemIn: function (t) {
            void 0 === t && (t = !1);
            var e = this.getActives(),
              i = It(Lr(a), 'offsetLeft'),
              e = Te(i, e[0 < o * (t ? -1 : 1) ? e.length - 1 : 0]);
            return ~e && i[e + (n && !t ? o : 0)];
          },
          getActives: function () {
            var i = Dr(n || r, a, e);
            return It(
              Lr(a).filter(function (t) {
                var e = Or(t, a);
                return i <= e && e + M(t).width <= M(a).width + i;
              }),
              'offsetLeft'
            );
          },
          updateTranslates: function () {
            var i = this.getActives();
            Lr(a).forEach(function (t) {
              var e = v(i, t);
              Hr(t, 'itemtranslate' + (e ? 'in' : 'out'), {
                percent: e ? 1 : 0,
                dir: t.offsetLeft <= r.offsetLeft ? 1 : -1,
              });
            });
          },
        };
      },
    },
    computed: {
      avgWidth: function () {
        return Pr(this.list) / this.length;
      },
      finite: function (t) {
        return (
          t.finite ||
          Math.ceil(Pr(this.list)) <
            M(this.list).width +
              Lr(this.list).reduce(function (t, e) {
                return Math.max(t, M(e).width);
              }, 0) +
              this.center
        );
      },
      maxIndex: function () {
        if (!this.finite || (this.center && !this.sets)) return this.length - 1;
        if (this.center) return $t(this.sets);
        A(this.slides, 'order', '');
        for (var t = Br(this.list), e = this.length; e--; )
          if (Or(this.list.children[e], this.list) < t)
            return Math.min(e + 1, this.length - 1);
        return 0;
      },
      sets: function (t) {
        var r = this,
          t = t.sets,
          o = M(this.list).width / (this.center ? 2 : 1),
          s = 0,
          a = o,
          h = 0;
        return (
          !mt(
            (t =
              t &&
              this.slides.reduce(function (t, e, i) {
                var n,
                  e = M(e).width;
                return (
                  s < h + e &&
                    (v(t, (i = !r.center && i > r.maxIndex ? r.maxIndex : i)) ||
                      ((n = r.slides[i + 1]),
                      r.center && n && e < a - M(n).width / 2
                        ? (a -= e)
                        : ((a = o),
                          t.push(i),
                          (s = h + o + (r.center ? e / 2 : 0))))),
                  (h += e),
                  t
                );
              }, []))
          ) && t
        );
      },
      transitionOptions: function () {
        return { center: this.center, list: this.list };
      },
    },
    connected: function () {
      C(this.$el, this.clsContainer, !s('.' + this.clsContainer, this.$el));
    },
    update: {
      write: function () {
        var i = this,
          e =
            (h(
              '[' + this.attrItem + '],[data-' + this.attrItem + ']',
              this.$el
            ).forEach(function (t) {
              var e = zt(t, i.attrItem);
              i.maxIndex &&
                C(
                  t,
                  'uk-hidden',
                  pt(e) && ((i.sets && !v(i.sets, b(e))) || e > i.maxIndex)
                );
            }),
            !this.length ||
              this.dragging ||
              this.stack.length ||
              (this.reorder(), this._translate(1)),
            this._getTransitioner(this.index).getActives());
        this.slides.forEach(function (t) {
          return C(t, i.clsActive, v(e, t));
        }),
          (this.sets && !v(this.sets, b(this.index))) ||
            this.slides.forEach(function (t) {
              return C(t, i.clsActivated, v(e, t));
            });
      },
      events: ['resize'],
    },
    events: {
      beforeitemshow: function (t) {
        !this.dragging &&
          this.sets &&
          this.stack.length < 2 &&
          !v(this.sets, this.index) &&
          (this.index = this.getValidIndex());
        var e = Math.abs(
          this.index -
            this.prevIndex +
            ((0 < this.dir && this.index < this.prevIndex) ||
            (this.dir < 0 && this.index > this.prevIndex)
              ? (this.maxIndex + 1) * this.dir
              : 0)
        );
        if (!this.dragging && 1 < e) {
          for (var i = 0; i < e; i++)
            this.stack.splice(1, 0, 0 < this.dir ? 'next' : 'previous');
          t.preventDefault();
        } else
          (this.duration =
            _r(this.avgWidth / this.velocity) *
            (M(
              this.dir < 0 || !this.slides[this.prevIndex]
                ? this.slides[this.index]
                : this.slides[this.prevIndex]
            ).width /
              this.avgWidth)),
            this.reorder();
      },
      itemshow: function () {
        ~this.prevIndex &&
          T(this._getTransitioner().getItemIn(), this.clsActive);
      },
    },
    methods: {
      reorder: function () {
        var i = this;
        if (this.finite) A(this.slides, 'order', '');
        else {
          var n =
            0 < this.dir && this.slides[this.prevIndex]
              ? this.prevIndex
              : this.index;
          if (
            (this.slides.forEach(function (t, e) {
              return A(
                t,
                'order',
                0 < i.dir && e < n ? 1 : i.dir < 0 && e >= i.index ? -1 : ''
              );
            }),
            this.center)
          )
            for (
              var t = this.slides[n],
                e = M(this.list).width / 2 - M(t).width / 2,
                r = 0;
              0 < e;

            ) {
              var o = this.getIndex(--r + n, n),
                s = this.slides[o];
              A(s, 'order', n < o ? -2 : -1), (e -= M(s).width);
            }
        }
      },
      getValidIndex: function (t, e) {
        var i;
        if (
          (void 0 === t && (t = this.index),
          void 0 === e && (e = this.prevIndex),
          (t = this.getIndex(t, e)),
          this.sets)
        )
          do {
            if (v(this.sets, t)) return t;
          } while (((i = t), (t = this.getIndex(t + this.dir, e)) !== i));
        return t;
      },
    },
  }),
    (yn = {
      mixins: [jn],
      data: { selItem: '!li' },
      computed: {
        item: function (t, e) {
          return jt(t.selItem, e);
        },
      },
      events: [
        {
          name: 'itemshown',
          self: !0,
          el: function () {
            return this.item;
          },
          handler: function () {
            A(this.$el, this.getCss(0.5));
          },
        },
        {
          name: 'itemin itemout',
          self: !0,
          el: function () {
            return this.item;
          },
          handler: function (t) {
            var e = t.type,
              t = t.detail,
              i = t.percent,
              n = t.duration,
              r = t.timing,
              t = t.dir;
            N.cancel(this.$el),
              A(this.$el, this.getCss(jr(e, t, i))),
              N.start(
                this.$el,
                this.getCss(Fr(e) ? 0.5 : 0 < t ? 1 : 0),
                n,
                r
              ).catch(d);
          },
        },
        {
          name: 'transitioncanceled transitionend',
          self: !0,
          el: function () {
            return this.item;
          },
          handler: function () {
            N.cancel(this.$el);
          },
        },
        {
          name: 'itemtranslatein itemtranslateout',
          self: !0,
          el: function () {
            return this.item;
          },
          handler: function (t) {
            var e = t.type,
              t = t.detail,
              i = t.percent,
              t = t.dir;
            N.cancel(this.$el), A(this.$el, this.getCss(jr(e, t, i)));
          },
        },
      ],
    });
  function Fr(t) {
    return X(t, 'in');
  }
  function jr(t, e, i) {
    return (i /= 2), Fr(t) ? (e < 0 ? 1 - i : i) : e < 0 ? i : 1 - i;
  }
  var Wr,
    nr = l({}, pn, {
      fade: {
        show: function () {
          return [{ opacity: 0, zIndex: 0 }, { zIndex: -1 }];
        },
        percent: function (t) {
          return 1 - A(t, 'opacity');
        },
        translate: function (t) {
          return [{ opacity: 1 - t, zIndex: 0 }, { zIndex: -1 }];
        },
      },
      scale: {
        show: function () {
          return [
            { opacity: 0, transform: Ir(1.5), zIndex: 0 },
            { zIndex: -1 },
          ];
        },
        percent: function (t) {
          return 1 - A(t, 'opacity');
        },
        translate: function (t) {
          return [
            { opacity: 1 - t, transform: Ir(1 + 0.5 * t), zIndex: 0 },
            { zIndex: -1 },
          ];
        },
      },
      pull: {
        show: function (t) {
          return t < 0
            ? [
                { transform: O(30), zIndex: -1 },
                { transform: O(), zIndex: 0 },
              ]
            : [
                { transform: O(-100), zIndex: 0 },
                { transform: O(), zIndex: -1 },
              ];
        },
        percent: function (t, e, i) {
          return i < 0 ? 1 - Sr(e) : Sr(t);
        },
        translate: function (t, e) {
          return e < 0
            ? [
                { transform: O(30 * t), zIndex: -1 },
                { transform: O(-100 * (1 - t)), zIndex: 0 },
              ]
            : [
                { transform: O(100 * -t), zIndex: 0 },
                { transform: O(30 * (1 - t)), zIndex: -1 },
              ];
        },
      },
      push: {
        show: function (t) {
          return t < 0
            ? [
                { transform: O(100), zIndex: 0 },
                { transform: O(), zIndex: -1 },
              ]
            : [
                { transform: O(-30), zIndex: -1 },
                { transform: O(), zIndex: 0 },
              ];
        },
        percent: function (t, e, i) {
          return 0 < i ? 1 - Sr(e) : Sr(t);
        },
        translate: function (t, e) {
          return e < 0
            ? [
                { transform: O(100 * t), zIndex: 0 },
                { transform: O(-30 * (1 - t)), zIndex: -1 },
              ]
            : [
                { transform: O(-30 * t), zIndex: -1 },
                { transform: O(100 * (1 - t)), zIndex: 0 },
              ];
        },
      },
    }),
    or = {
      mixins: [t, xn, gn],
      props: { ratio: String, minHeight: Number, maxHeight: Number },
      data: {
        ratio: '16:9',
        minHeight: !1,
        maxHeight: !1,
        selList: '.uk-slideshow-items',
        attrItem: 'uk-slideshow-item',
        selNav: '.uk-slideshow-nav',
        Animations: nr,
      },
      update: {
        read: function () {
          var t = this.ratio.split(':').map(Number),
            e = t[0],
            t = ((t = t[1]) * this.list.offsetWidth) / e || 0;
          return (
            this.minHeight && (t = Math.max(this.minHeight, t)),
            {
              height:
                (t = this.maxHeight ? Math.min(this.maxHeight, t) : t) -
                fi(this.list, 'height', 'content-box'),
            }
          );
        },
        write: function (t) {
          t = t.height;
          0 < t && A(this.list, 'minHeight', t);
        },
        events: ['resize'],
      },
    },
    sr = {
      mixins: [t, cn],
      props: {
        group: String,
        threshold: Number,
        clsItem: String,
        clsPlaceholder: String,
        clsDrag: String,
        clsDragState: String,
        clsBase: String,
        clsNoDrag: String,
        clsEmpty: String,
        clsCustom: String,
        handle: String,
      },
      data: {
        group: !1,
        threshold: 5,
        clsItem: 'uk-sortable-item',
        clsPlaceholder: 'uk-sortable-placeholder',
        clsDrag: 'uk-sortable-drag',
        clsDragState: 'uk-drag',
        clsBase: 'uk-sortable',
        clsNoDrag: 'uk-sortable-nodrag',
        clsEmpty: 'uk-sortable-empty',
        clsCustom: '',
        handle: !1,
        pos: {},
      },
      created: function () {
        var i = this;
        ['init', 'start', 'move', 'end'].forEach(function (t) {
          var e = i[t];
          i[t] = function (t) {
            l(i.pos, we(t)), e(t);
          };
        });
      },
      events: { name: Pt, passive: !1, handler: 'init' },
      computed: {
        target: function () {
          return (this.$el.tBodies || [this.$el])[0];
        },
        items: function () {
          return ue(this.target);
        },
        isEmpty: {
          get: function () {
            return mt(this.items);
          },
          watch: function (t) {
            C(this.target, this.clsEmpty, t);
          },
          immediate: !0,
        },
        handles: {
          get: function (t, e) {
            t = t.handle;
            return t ? h(t, e) : this.items;
          },
          watch: function (t, e) {
            A(e, { touchAction: '', userSelect: '' }),
              A(t, { touchAction: Bt ? 'none' : '', userSelect: 'none' });
          },
          immediate: !0,
        },
      },
      update: {
        write: function () {
          if (this.drag && te(this.placeholder)) {
            var t = this.pos,
              e = t.x,
              t = t.y,
              i = this.origin,
              n = i.offsetTop,
              i = i.offsetLeft,
              r = this.drag,
              o = r.offsetHeight,
              r = r.offsetWidth,
              s = M(window),
              a = s.right,
              s = s.bottom,
              h = document.elementFromPoint(e, t),
              t =
                (A(this.drag, {
                  top: Et(t - n, 0, s - o),
                  left: Et(e - i, 0, a - r),
                }),
                this.getSortable(h)),
              n = this.getSortable(this.placeholder),
              s = t !== n;
            if (
              t &&
              !x(h, this.placeholder) &&
              (!s || (t.group && t.group === n.group))
            ) {
              if (
                ((h =
                  (t.target === h.parentNode && h) ||
                  t.items.filter(function (t) {
                    return x(h, t);
                  })[0]),
                s)
              )
                n.remove(this.placeholder);
              else if (!h) return;
              t.insert(this.placeholder, h),
                v(this.touched, t) || this.touched.push(t);
            }
          }
        },
        events: ['move'],
      },
      methods: {
        init: function (t) {
          var e = t.target,
            i = t.button,
            n = t.defaultPrevented,
            r = this.items.filter(function (t) {
              return x(e, t);
            })[0];
          !r ||
            n ||
            0 < i ||
            se(e) ||
            x(e, '.' + this.clsNoDrag) ||
            (this.handle && !x(e, this.handle)) ||
            (t.preventDefault(),
            (this.touched = [this]),
            (this.placeholder = r),
            (this.origin = l({ target: e, index: Te(r) }, this.pos)),
            y(document, Ot, this.move),
            y(document, Ht, this.end),
            this.threshold) ||
            this.start(t);
        },
        start: function (t) {
          this.drag = (function (t, e) {
            t = I(
              t,
              e.outerHTML.replace(/(^<)(?:li|tr)|(?:li|tr)(\/>$)/g, '$1div$2')
            );
            return (
              f(t, 'style', f(t, 'style') + ';margin:0!important'),
              A(
                t,
                l(
                  {
                    boxSizing: 'border-box',
                    width: e.offsetWidth,
                    height: e.offsetHeight,
                    overflow: 'hidden',
                  },
                  A(e, [
                    'paddingLeft',
                    'paddingRight',
                    'paddingTop',
                    'paddingBottom',
                  ])
                )
              ),
              z(t.firstElementChild, z(e.firstElementChild)),
              t
            );
          })(this.$container, this.placeholder);
          var e,
            i,
            n = this.placeholder.getBoundingClientRect(),
            r = n.left,
            n = n.top;
          l(this.origin, {
            offsetLeft: this.pos.x - r,
            offsetTop: this.pos.y - n,
          }),
            T(this.drag, this.clsDrag, this.clsCustom),
            T(this.placeholder, this.clsPlaceholder),
            T(this.items, this.clsItem),
            T(document.documentElement, this.clsDragState),
            $(this.$el, 'start', [this, this.placeholder]),
            (e = this.pos),
            (i = Date.now()),
            (Wr = setInterval(function () {
              var t = e.x,
                s = e.y,
                a = ((s += window.pageYOffset), 0.3 * (Date.now() - i));
              (i = Date.now()),
                Hi(document.elementFromPoint(t, e.y)).some(function (t) {
                  var e = t.scrollTop,
                    i = t.scrollHeight,
                    n = M(Li(t)),
                    r = n.top,
                    o = n.bottom,
                    n = n.height;
                  if (r < s && s < r + 30) e -= a;
                  else {
                    if (!(s < o && o - 30 < s)) return;
                    e += a;
                  }
                  if (0 < e && e < i - n) return Bi(t, e), !0;
                });
            }, 15)),
            this.move(t);
        },
        move: function (t) {
          this.drag
            ? this.$emit('move')
            : (Math.abs(this.pos.x - this.origin.x) > this.threshold ||
                Math.abs(this.pos.y - this.origin.y) > this.threshold) &&
              this.start(t);
        },
        end: function (t) {
          var e, i;
          ce(document, Ot, this.move),
            ce(document, Ht, this.end),
            ce(window, 'scroll', this.scroll),
            this.drag
              ? (clearInterval(Wr),
                (e = this.getSortable(this.placeholder)),
                this === e
                  ? this.origin.index !== Te(this.placeholder) &&
                    $(this.$el, 'moved', [this, this.placeholder])
                  : ($(e.$el, 'added', [e, this.placeholder]),
                    $(this.$el, 'removed', [this, this.placeholder])),
                $(this.$el, 'stop', [this, this.placeholder]),
                ze(this.drag),
                (this.drag = null),
                (i = this.touched
                  .map(function (t) {
                    return t.clsPlaceholder + ' ' + t.clsItem;
                  })
                  .join(' ')),
                this.touched.forEach(function (t) {
                  return E(t.items, i);
                }),
                E(document.documentElement, this.clsDragState))
              : 'touchend' === t.type && t.target.click();
        },
        insert: function (i, n) {
          function t() {
            var t, e;
            n
              ? (!x(i, r.target) ||
                  ((e = n),
                  (t = i).parentNode === e.parentNode && Te(t) > Te(e))
                  ? Ae
                  : Ne)(n, i)
              : I(r.target, i);
          }
          var r = this;
          T(this.items, this.clsItem);
          this.animation ? this.animate(t) : t();
        },
        remove: function (t) {
          x(t, this.target) &&
            (this.animation
              ? this.animate(function () {
                  return ze(t);
                })
              : ze(t));
        },
        getSortable: function (t) {
          return (
            t &&
            (this.$getComponent(t, 'sortable') ||
              this.getSortable(t.parentNode))
          );
        },
      },
    };
  var Vr = [],
    hr = {
      mixins: [Qn, rn, dn],
      args: 'title',
      props: { delay: Number, title: String },
      data: {
        pos: 'top',
        title: '',
        delay: 0,
        animation: ['uk-animation-scale-up'],
        duration: 100,
        cls: 'uk-active',
        clsPos: 'uk-tooltip',
      },
      beforeConnect: function () {
        (this._hasTitle = Nt(this.$el, 'title')),
          f(this.$el, { title: '', 'aria-expanded': !1 });
      },
      disconnected: function () {
        this.hide(),
          f(this.$el, {
            title: this._hasTitle ? this.title : null,
            'aria-expanded': null,
          });
      },
      methods: {
        show: function () {
          var e = this;
          !this.isActive() &&
            this.title &&
            (Vr.forEach(function (t) {
              return t.hide();
            }),
            Vr.push(this),
            (this._unbind = y(document, Ht, function (t) {
              return !x(t.target, e.$el) && e.hide();
            })),
            clearTimeout(this.showTimer),
            (this.showTimer = setTimeout(this._show, this.delay)));
        },
        hide: function () {
          var t = this;
          this.isActive() &&
            !p(this.$el, 'input:focus') &&
            this.toggleElement(this.tooltip, !1, !1).then(function () {
              Vr.splice(Vr.indexOf(t), 1),
                clearTimeout(t.showTimer),
                (t.tooltip = ze(t.tooltip)),
                t._unbind();
            });
        },
        _show: function () {
          var e = this;
          (this.tooltip = I(
            this.container,
            '<div class="' +
              this.clsPos +
              '"> <div class="' +
              this.clsPos +
              '-inner">' +
              this.title +
              '</div> </div>'
          )),
            y(this.tooltip, 'toggled', function () {
              var t = e.isToggled(e.tooltip);
              f(e.$el, 'aria-expanded', t),
                t &&
                  (e.positionAt(e.tooltip, e.$el),
                  (e.origin =
                    'y' === e.getAxis()
                      ? vi(e.dir) + '-' + e.align
                      : e.align + '-' + vi(e.dir)));
            }),
            this.toggleElement(this.tooltip, !0);
        },
        isActive: function () {
          return v(Vr, this);
        },
      },
      events:
        (((ar = { focus: 'show', blur: 'hide' })[Lt + ' ' + e] = function (t) {
          ve(t) || (t.type === Lt ? this.show() : this.hide());
        }),
        (ar[Pt] = function (t) {
          ve(t) && (this.isActive() ? this.hide() : this.show());
        }),
        ar),
    },
    ur = {
      props: {
        allow: String,
        clsDragover: String,
        concurrent: Number,
        maxSize: Number,
        method: String,
        mime: String,
        msgInvalidMime: String,
        msgInvalidName: String,
        msgInvalidSize: String,
        multiple: Boolean,
        name: String,
        params: Object,
        type: String,
        url: String,
      },
      data: {
        allow: !1,
        clsDragover: 'uk-dragover',
        concurrent: 1,
        maxSize: 0,
        method: 'POST',
        mime: !1,
        msgInvalidMime: 'Invalid File Type: %s',
        msgInvalidName: 'Invalid File Name: %s',
        msgInvalidSize: 'Invalid File Size: %s Kilobytes Max',
        multiple: !1,
        name: 'files[]',
        params: {},
        type: '',
        url: '',
        abort: d,
        beforeAll: d,
        beforeSend: d,
        complete: d,
        completeAll: d,
        error: d,
        fail: d,
        load: d,
        loadEnd: d,
        loadStart: d,
        progress: d,
      },
      events: {
        change: function (t) {
          p(t.target, 'input[type="file"]') &&
            (t.preventDefault(),
            t.target.files && this.upload(t.target.files),
            (t.target.value = ''));
        },
        drop: function (t) {
          qr(t);
          t = t.dataTransfer;
          t && t.files && (E(this.$el, this.clsDragover), this.upload(t.files));
        },
        dragenter: function (t) {
          qr(t);
        },
        dragover: function (t) {
          qr(t), T(this.$el, this.clsDragover);
        },
        dragleave: function (t) {
          qr(t), E(this.$el, this.clsDragover);
        },
      },
      methods: {
        upload: function (t) {
          var n = this;
          if (t.length) {
            $(this.$el, 'upload', [t]);
            for (var e = 0; e < t.length; e++) {
              if (this.maxSize && 1e3 * this.maxSize < t[e].size)
                return void this.fail(
                  this.msgInvalidSize.replace('%s', this.maxSize)
                );
              if (this.allow && !Rr(this.allow, t[e].name))
                return void this.fail(
                  this.msgInvalidName.replace('%s', this.allow)
                );
              if (this.mime && !Rr(this.mime, t[e].type))
                return void this.fail(
                  this.msgInvalidMime.replace('%s', this.mime)
                );
            }
            this.multiple || (t = [t[0]]), this.beforeAll(this, t);
            var r = (function (t, e) {
                for (var i = [], n = 0; n < t.length; n += e) {
                  for (var r = [], o = 0; o < e; o++) r.push(t[n + o]);
                  i.push(r);
                }
                return i;
              })(t, this.concurrent),
              o = function (t) {
                var e,
                  i = new FormData();
                for (e in (t.forEach(function (t) {
                  return i.append(n.name, t);
                }),
                n.params))
                  i.append(e, n.params[e]);
                $e(n.url, {
                  data: i,
                  method: n.method,
                  responseType: n.type,
                  beforeSend: function (t) {
                    var e = t.xhr;
                    e.upload && y(e.upload, 'progress', n.progress),
                      ['loadStart', 'load', 'loadEnd', 'abort'].forEach(
                        function (t) {
                          return y(e, t.toLowerCase(), n[t]);
                        }
                      ),
                      n.beforeSend(t);
                  },
                }).then(
                  function (t) {
                    n.complete(t), r.length ? o(r.shift()) : n.completeAll(t);
                  },
                  function (t) {
                    return n.error(t);
                  }
                );
              };
            o(r.shift());
          }
        },
      },
    };
  function Rr(t, e) {
    return e.match(
      new RegExp(
        '^' +
          t
            .replace(/\//g, '\\/')
            .replace(/\*\*/g, '(\\/[^\\/]+)*')
            .replace(/\*/g, '[^\\/]+')
            .replace(/((?!\\))\?/g, '$1.') +
          '$',
        'i'
      )
    );
  }
  function qr(t) {
    t.preventDefault(), t.stopPropagation();
  }
  return (
    St(
      Object.freeze({
        __proto__: null,
        Countdown: hn,
        Filter: fn,
        Lightbox: kn,
        LightboxPanel: Cr,
        Notification: Dn,
        Parallax: Zn,
        Slider: sn,
        SliderParallax: yn,
        Slideshow: or,
        SlideshowParallax: yn,
        Sortable: sr,
        Tooltip: hr,
        Upload: ur,
      }),
      function (t, e) {
        return n.component(e, t);
      }
    ),
    n
  );
});
